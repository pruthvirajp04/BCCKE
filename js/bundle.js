var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_ALDEventDef;
(function (ryw_ALDEventDef) {
    ryw_ALDEventDef["None"] = "";
    ryw_ALDEventDef["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ryw_ALDEventDef["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    ryw_ALDEventDef["ReportLaunchOptions"] = "\u7528\u6237\u542F\u52A8\u53C2\u6570";
    //todo:添加你自己的阿拉丁事件
})(ryw_ALDEventDef = exports.ryw_ALDEventDef || (exports.ryw_ALDEventDef = {}));
//阿拉丁相关接口
var ryw_ALD = /** @class */ (function () {
    function ryw_ALD() {
    }
    ryw_ALD.ryw_aldSendOpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ryw_ALD.ryw_aldSendEvent = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    ryw_ALD.ryw_aldSendReportAdClickSuccess = function (data) {
        var type = ryw_ALDEventDef.ReportAdClickSuccess + " " + data.title + ":" + String(data.appid);
        ryw_ALD.ryw_aldSendEvent(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    ryw_ALD.ryw_aldSendReportAdClickFail = function (data) {
        var type = ryw_ALDEventDef.ReportAdClickFail + " " + data.title + ":" + String(data.appid);
        ryw_ALD.ryw_aldSendEvent(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    ryw_ALD.ryw_aldSendReportLaunchOptions = function (sceneid, ip, location) {
        var type = ryw_ALDEventDef.ReportLaunchOptions;
        ryw_ALD.ryw_aldSendEvent(type, {
            "场景值：": String(sceneid),
            "Ip：": String(ip),
            "地区：": JSON.stringify(location)
        });
    };
    return ryw_ALD;
}());
exports.default = ryw_ALD;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_AppConfig = /** @class */ (function () {
    function ryw_AppConfig() {
    }
    ryw_AppConfig.ryw_AppID = "wx33ab9cbd2eb92da5";
    ryw_AppConfig.ryw_ResServer = "https://oss.renyouwangluo.cn/"; //资源服务器地址
    ryw_AppConfig.ryw_LocalTestReServer = "subRes"; //本地测试资源服务器地址
    ryw_AppConfig.ryw_Versions = "0.0.0";
    ryw_AppConfig.onTTMiniGame = false; //是否是头条小游戏
    ryw_AppConfig.ryw_GameName = "别踩错块儿"; //游戏名称
    return ryw_AppConfig;
}());
exports.default = ryw_AppConfig;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var ryw_CachedQQBannerAd = /** @class */ (function () {
    function ryw_CachedQQBannerAd() {
    }
    ryw_CachedQQBannerAd.preloadBanner = function () {
    };
    ryw_CachedQQBannerAd.show = function (bannerid) {
        var wxWuDianBanners = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerTodayBannerMax;
        bannerid = wxWuDianBanners[Math.floor(Math.random() * wxWuDianBanners.length)];
        if (Laya.Browser.onQQMiniGame && null != bannerid) {
            var sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner_1 = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner_1) {
                var self_1 = this;
                ryw_CachedQQBannerAd.ryw__onLoad = function (res) {
                    console.log("CachedQQBanner 广告 加载完成", bannerid);
                    console.log(res);
                    if (!self_1.ryw__isHide) {
                        banner_1.show();
                    }
                    else {
                        banner_1.offLoad(ryw_CachedQQBannerAd.ryw__onLoad);
                        banner_1.offError(ryw_CachedQQBannerAd.ryw__onError);
                        banner_1.destroy();
                    }
                };
                banner_1.onLoad(ryw_CachedQQBannerAd.ryw__onLoad);
                ryw_CachedQQBannerAd.ryw__onError = function (err) {
                    console.log("CachedQQBanner 广告 加载失败", bannerid);
                    console.log(err);
                    banner_1.offLoad(ryw_CachedQQBannerAd.ryw__onLoad);
                    banner_1.offError(ryw_CachedQQBannerAd.ryw__onError);
                    banner_1.destroy();
                };
                banner_1.onError(ryw_CachedQQBannerAd.ryw__onError);
                ryw_CachedQQBannerAd.ryw__curBanner = banner_1;
            }
        }
        ryw_CachedQQBannerAd.ryw__isHide = false;
    };
    ryw_CachedQQBannerAd.hide = function () {
        ryw_CachedQQBannerAd.ryw__isHide = true;
        Laya.timer.clearAll(ryw_CachedQQBannerAd);
        if (null != ryw_CachedQQBannerAd.ryw__curBanner) {
            ryw_CachedQQBannerAd.ryw__curBanner.hide();
            ryw_CachedQQBannerAd.ryw__curBanner.offLoad(ryw_CachedQQBannerAd.ryw__onLoad);
            ryw_CachedQQBannerAd.ryw__curBanner.offError(ryw_CachedQQBannerAd.ryw__onError);
            ryw_CachedQQBannerAd.ryw__curBanner.destroy();
            ryw_CachedQQBannerAd.ryw__curBanner = null;
            console.log("CachedQQBanner 广告隐藏");
        }
    };
    ryw_CachedQQBannerAd.changeShow = function () {
        if (null != ryw_CachedQQBannerAd.ryw__curBanner) {
            ryw_CachedQQBannerAd.ryw__curBanner.hide();
            ryw_CachedQQBannerAd.ryw__curBanner = null;
        }
        ryw_CachedQQBannerAd.show();
    };
    ryw_CachedQQBannerAd.clear = function () {
    };
    ryw_CachedQQBannerAd.ryw__curBanner = null;
    ryw_CachedQQBannerAd.ryw__onLoad = null;
    ryw_CachedQQBannerAd.ryw__onError = null;
    ryw_CachedQQBannerAd.ryw__isHide = true;
    return ryw_CachedQQBannerAd;
}());
exports.default = ryw_CachedQQBannerAd;
},{"./Config/AppSwitchConfig":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var ryw_CachedWXBannerAd = /** @class */ (function () {
    function ryw_CachedWXBannerAd() {
    }
    ryw_CachedWXBannerAd.ryw_preloadBanner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wxWuDianBanners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerTodayBannerMax;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, ryw_CachedWXBannerAd.ryw__preLoopObj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(ryw_CachedWXBannerAd.ryw__preLoopObj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = ryw_CachedWXBannerAd.ryw__bannerCache[bannerid];
            if (null == banner) {
                banner = ryw_CachedWXBannerAd.ryw_create(bannerid);
                if (null != banner) {
                    ryw_CachedWXBannerAd.ryw__bannerCache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    ryw_CachedWXBannerAd.ryw_getBanner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = ryw_CachedWXBannerAd.ryw__bannerCache[bannerid];
        if (null == banner) {
            banner = ryw_CachedWXBannerAd.ryw_create(bannerid);
            if (null != banner) {
                ryw_CachedWXBannerAd.ryw__bannerCache[bannerid] = banner;
            }
        }
        return banner;
    };
    ryw_CachedWXBannerAd.ryw_create = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    ryw_CachedWXBannerAd.ryw_show = function () {
        if (null != ryw_CachedWXBannerAd.ryw__curBanner) {
            ryw_CachedWXBannerAd.ryw__curBanner.hide();
            ryw_CachedWXBannerAd.ryw__curBanner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wxWuDianBanners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = ryw_CachedWXBannerAd.ryw_getBanner(bannerid);
        if (banner) {
            ryw_CachedWXBannerAd.ryw__curBanner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            ryw_CachedWXBannerAd.ryw__curBanner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
            ryw_CachedWXBannerAd.ryw__curBanner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerFreshTimer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    ryw_CachedWXBannerAd.ryw_hide = function () {
        Laya.timer.clearAll(ryw_CachedWXBannerAd);
        if (null != ryw_CachedWXBannerAd.ryw__curBanner) {
            ryw_CachedWXBannerAd.ryw__curBanner.hide();
            ryw_CachedWXBannerAd.ryw__curBanner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    ryw_CachedWXBannerAd.ryw_changeShow = function () {
        if (null != ryw_CachedWXBannerAd.ryw__curBanner) {
            ryw_CachedWXBannerAd.ryw__curBanner.hide();
            ryw_CachedWXBannerAd.ryw__curBanner = null;
        }
        ryw_CachedWXBannerAd.ryw_show();
    };
    ryw_CachedWXBannerAd.ryw_clear = function () {
        Laya.timer.clearAll(ryw_CachedWXBannerAd);
        for (var key in ryw_CachedWXBannerAd.ryw__bannerCache) {
            var banner = ryw_CachedWXBannerAd.ryw__bannerCache[key];
            if (null != banner) {
                banner.destroy();
            }
            ryw_CachedWXBannerAd.ryw__bannerCache[key] = null;
        }
    };
    ryw_CachedWXBannerAd.ryw__bannerCache = {};
    ryw_CachedWXBannerAd.ryw__curBanner = null;
    ryw_CachedWXBannerAd.ryw__preLoopObj = {};
    return ryw_CachedWXBannerAd;
}());
exports.default = ryw_CachedWXBannerAd;
},{"./Config/AppSwitchConfig":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var ryw_AppSwitchData = /** @class */ (function () {
    function ryw_AppSwitchData() {
        this.ryw_version = "";
        this.ryw_banner = 0;
        this.ryw_wudian = 0;
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.ryw_mailiang = 1;
        this.ryw_mailianglist = new Array();
        this.ryw_mailiangSceneList = new Array();
        this.ryw_wxWuDianBanners = new Array();
        this.ryw_recreateBannerIDList = new Array();
        this.ryw_bannerRecreateTime = 5;
        this.ryw_kuangdianjiange = 0;
        this.ryw_btnMoveTimer = 1;
        this.ryw_bannerMoveTimer = 0.5;
        this.ryw_bannerFreshTimer = 200;
        this.ryw_bannerCreateFailNum = 3;
        this.ryw_bannerTodayBannerMax = 10;
        this.ryw_adSwitch = 1;
        this.ryw_wudianSceneList = new Array();
        this.ryw_continueBtnDelayTime = 2;
        this.ryw_bannerShowTime = 30;
        this.fakeBtn = 0;
        this.ryw_oppocfg = new ryw_OPPOCfg();
        this.ryw_qqcfg = new ryw_QQCfg();
        this.ryw_ttcfg = new ryw_TTCfg();
    }
    Object.defineProperty(ryw_AppSwitchData.prototype, "wudianTimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return ryw_AppSwitchData;
}());
exports.ryw_AppSwitchData = ryw_AppSwitchData;
var ryw_OPPOCfg = /** @class */ (function () {
    function ryw_OPPOCfg() {
        this.ryw_yuansheng = 100;
        this.ryw_yuanshengSwitch = 1;
        this.ryw_addToDesktop = 0;
        this.ryw_oppoversions = "";
        this.ryw_btnShowTimer = 0;
        this.ryw_indexAdSwitch = 0;
        this.ryw_endAdSwitch = 0;
        this.ryw_yuansheng2 = 100;
        this.ryw_yuanshengSwitch2 = 1;
    }
    return ryw_OPPOCfg;
}());
exports.ryw_OPPOCfg = ryw_OPPOCfg;
var ryw_QQCfg = /** @class */ (function () {
    function ryw_QQCfg() {
        this.ryw_kuangdianBanner = 0;
        this.ryw_kuangdianBox = 0;
        this.ryw_box = 0;
        this.ryw_weiyi = 0;
        this.ryw_qqversions = "";
    }
    return ryw_QQCfg;
}());
exports.ryw_QQCfg = ryw_QQCfg;
var ryw_TTCfg = /** @class */ (function () {
    function ryw_TTCfg() {
        this.ryw_moreGameSwitch = 0;
        this.ryw_kuangdianBanner = 0;
        this.ryw_luping = 0;
        this.ryw_ttversions = "";
    }
    return ryw_TTCfg;
}());
exports.ryw_TTCfg = ryw_TTCfg;
var ryw_AppSwitchConfig = /** @class */ (function () {
    function ryw_AppSwitchConfig() {
        this.ryw__data = new Array();
    }
    ryw_AppSwitchConfig.ryw_getInstance = function () {
        if (null == ryw_AppSwitchConfig.ryw__instance) {
            ryw_AppSwitchConfig.ryw__instance = ryw_AppSwitchConfig.ryw_load();
        }
        return ryw_AppSwitchConfig.ryw__instance;
    };
    ryw_AppSwitchConfig.ryw_load = function () {
        var config = new ryw_AppSwitchConfig();
        var json = Laya.loader.getRes(AppConfig_1.default.ryw_ResServer + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new ryw_AppSwitchData();
                rowData.ryw_version = String(row["version"]);
                rowData.ryw_banner = Number(row["banner"]);
                rowData.ryw_wudian = Number(row["wudian"]);
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.ryw_mailiang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.ryw_mailianglist.push(flag);
                    }
                }
                var mailiangScenelist = row["mailiangScenelist"];
                if (null != mailiangScenelist) {
                    for (var j = 0; j < mailiangScenelist.length; ++j) {
                        var sceneValue = Number(mailiangScenelist[j]);
                        rowData.ryw_mailiangSceneList.push(sceneValue);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.ryw_wxWuDianBanners.push(bannerid);
                    }
                }
                var recreateBannerIDList = row["recreateBannerIDList"];
                if (null != recreateBannerIDList) {
                    for (var j = 0; j < recreateBannerIDList.length; ++j) {
                        var bannerid = String(recreateBannerIDList[j]);
                        rowData.ryw_recreateBannerIDList.push(bannerid);
                    }
                }
                rowData.ryw_bannerRecreateTime = null != row["bannerRecreateTime"] ? Number(row["bannerRecreateTime"]) : rowData.ryw_bannerRecreateTime;
                rowData.ryw_kuangdianjiange = null != row["kuangdianjiange"] ? Number(row["kuangdianjiange"]) : rowData.ryw_kuangdianjiange;
                rowData.ryw_btnMoveTimer = Number(row["btnMoveTimer"]);
                rowData.ryw_bannerMoveTimer = Number(row["bannerMoveTimer"]);
                rowData.ryw_bannerCreateFailNum = Number(row["createFailNum"]);
                rowData.ryw_bannerFreshTimer = Number(row["bannerFreshTimer"]);
                rowData.ryw_bannerTodayBannerMax = Number(row["todayBannerMax"]);
                rowData.ryw_adSwitch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.ryw_wudianSceneList.push(wudianSceneValue);
                    }
                }
                rowData.ryw_continueBtnDelayTime = Number(row["continueBtnDelayTime"]);
                rowData.ryw_bannerShowTime = Number(row["bannerShowTime"]);
                rowData.fakeBtn = null != row["fakeBtn"] ? Number(row["fakeBtn"]) : rowData.fakeBtn;
                if (null != row["oppocfg"]) {
                    var cfg = row["oppocfg"];
                    rowData.ryw_oppocfg.ryw_yuansheng = Number(cfg["yuansheng"]);
                    rowData.ryw_oppocfg.ryw_yuanshengSwitch = Number(cfg["yuanshengSwitch"]);
                    rowData.ryw_oppocfg.ryw_addToDesktop = Number(cfg["addToDesktop"]);
                    rowData.ryw_oppocfg.ryw_oppoversions = String(cfg["oppoversions"]);
                    rowData.ryw_oppocfg.ryw_btnShowTimer = Number(cfg["btnShowTimer"]);
                    rowData.ryw_oppocfg.ryw_indexAdSwitch = Number(cfg["indexAdSwitch"]);
                    rowData.ryw_oppocfg.ryw_endAdSwitch = Number(cfg["endAdSwitch"]);
                    rowData.ryw_oppocfg.ryw_yuansheng2 = null != cfg["yuansheng2"] ? Number(cfg["yuansheng2"]) : rowData.ryw_oppocfg.ryw_yuansheng2;
                    rowData.ryw_oppocfg.ryw_yuanshengSwitch2 = null != cfg["yuanshengSwitch2"] ? Number(cfg["yuanshengSwitch2"]) : rowData.ryw_oppocfg.ryw_yuanshengSwitch2;
                }
                if (null != row["qqcfg"]) {
                    var cfg = row["qqcfg"];
                    rowData.ryw_qqcfg.ryw_kuangdianBanner = Number(cfg["kuangdianBanner"]);
                    rowData.ryw_qqcfg.ryw_kuangdianBox = Number(cfg["kuangdianBox"]);
                    rowData.ryw_qqcfg.ryw_box = Number(cfg["box"]);
                    rowData.ryw_qqcfg.ryw_weiyi = Number(cfg["weiyi"]);
                    rowData.ryw_qqcfg.ryw_qqversions = String(cfg["qqversions"]);
                }
                if (null != row["ttcfg"]) {
                    var cfg = row["ttcfg"];
                    rowData.ryw_ttcfg.ryw_moreGameSwitch = Number(cfg["moreGameSwitch"]);
                    rowData.ryw_ttcfg.ryw_kuangdianBanner = Number(cfg["kuangdianBanner"]);
                    rowData.ryw_ttcfg.ryw_luping = Number(cfg["luping"]);
                    rowData.ryw_ttcfg.ryw_ttversions = String(cfg["ttversions"]);
                }
                config.ryw__data.push(rowData);
            }
            return config;
        }
        else {
            config.ryw__data.push(new ryw_AppSwitchData());
            return config;
        }
    };
    ryw_AppSwitchConfig.prototype.ryw_getAppSwitchData = function () {
        return this.ryw__data[0];
    };
    return ryw_AppSwitchConfig;
}());
exports.default = ryw_AppSwitchConfig;
},{"../AppConfig":2}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_EventDef;
(function (ryw_EventDef) {
    ryw_EventDef[ryw_EventDef["ryw_None"] = 0] = "ryw_None";
    ryw_EventDef[ryw_EventDef["ryw_App_CloseFirstLoadingView"] = 500] = "ryw_App_CloseFirstLoadingView";
    ryw_EventDef[ryw_EventDef["ryw_AD_OnShareAdFail"] = 501] = "ryw_AD_OnShareAdFail";
    //当界面打开
    ryw_EventDef[ryw_EventDef["ryw_Game_OnViewOpen"] = 600] = "ryw_Game_OnViewOpen";
    //当界面关闭
    ryw_EventDef[ryw_EventDef["ryw_Game_OnViewClose"] = 601] = "ryw_Game_OnViewClose";
    //当玩家金币变动
    ryw_EventDef[ryw_EventDef["ryw_Game_OnUserMoneyChange"] = 701] = "ryw_Game_OnUserMoneyChange";
    //当玩家钻石变动
    ryw_EventDef[ryw_EventDef["ryw_Game_OnUserCrystalChange"] = 702] = "ryw_Game_OnUserCrystalChange";
    //当关卡开始
    ryw_EventDef[ryw_EventDef["ryw_Game_OnLevelStart"] = 1000] = "ryw_Game_OnLevelStart";
    //当关卡结束
    ryw_EventDef[ryw_EventDef["ryw_Game_OnLevelComplate"] = 1001] = "ryw_Game_OnLevelComplate";
    //误点预加载完毕
    ryw_EventDef[ryw_EventDef["ryw_AD_WudianBanner_LoadComplete"] = 2217] = "ryw_AD_WudianBanner_LoadComplete";
    //显示误点Banner
    ryw_EventDef[ryw_EventDef["ryw_AD_WudianBanner_Show"] = 2218] = "ryw_AD_WudianBanner_Show";
    //影藏误点Banner
    ryw_EventDef[ryw_EventDef["ryw_AD_WudianBanner_Hide"] = 2219] = "ryw_AD_WudianBanner_Hide";
    //预加载Banner
    ryw_EventDef[ryw_EventDef["ryw_AD_WudianBanner_PreLoad"] = 2220] = "ryw_AD_WudianBanner_PreLoad";
    //当IP屏蔽状态更新
    ryw_EventDef[ryw_EventDef["ryw_App_OnUpdateIpBlockState"] = 2221] = "ryw_App_OnUpdateIpBlockState";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
})(ryw_EventDef = exports.ryw_EventDef || (exports.ryw_EventDef = {}));
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = Laya.EventDispatcher;
var ryw_EventMgr = /** @class */ (function (_super) {
    __extends(ryw_EventMgr, _super);
    function ryw_EventMgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    ryw_EventMgr.prototype.ryw_dispatch = function (InName, agv) {
        ryw_EventMgr.ryw_eventDispatcher.event(InName, agv);
    };
    //注册事件
    ryw_EventMgr.prototype.ryw_regEvemt = function (InName, caller, listener, arg) {
        ryw_EventMgr.ryw_eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    ryw_EventMgr.prototype.ryw_regOnceEvent = function (InName, caller, listener, arg) {
        ryw_EventMgr.ryw_eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    ryw_EventMgr.prototype.ryw_removeEvent = function (InName, caller, listener, arg) {
        ryw_EventMgr.ryw_eventDispatcher.off(InName, caller, listener);
    };
    ryw_EventMgr.ryw_eventDispatcher = new EventDispatcher();
    ryw_EventMgr.ryw_instance = new ryw_EventMgr();
    return ryw_EventMgr;
}(EventDispatcher));
exports.default = ryw_EventMgr;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var KRQ_LoopAdBox_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox");
var KRQ_VLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_Banner_1 = require("./KRQ/Com/KRQ_Banner");
var KRQ_Export_1 = require("./KRQ/ViewCom/KRQ_Export");
var KRQ_HistoryBox_1 = require("./KRQ/Com/KRQ_History/KRQ_HistoryBox");
var KRQ_History_1 = require("./KRQ/Com/KRQ_History/KRQ_History");
var KRQ_RockSingleAd_1 = require("./KRQ/Com/KRQ_RockSingleAd");
var KRQ_Floating_1 = require("./KRQ/ViewCom/KRQ_Floating");
var KRQ_RollSingleAd_1 = require("./KRQ/Com/KRQ_RollSingleAd");
var KRQ_GameOver_1 = require("./KRQ/ViewCom/KRQ_GameOver");
var KRQ_SidePull_1 = require("./KRQ/ViewCom/KRQ_SidePull");
var KRQ_HLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd");
var KRQ_Main_1 = require("./KRQ/ViewCom/KRQ_Main");
var KRQ_SingleAd_1 = require("./KRQ/Com/KRQ_SingleAd");
var KRQ_GamingBanner_1 = require("./KRQ/Com/KRQ_GamingBanner");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var LogoAni_1 = require("./View/LoadingView/LogoAni");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var MouseInput_1 = require("./MyScript/Game/MouseInput");
var Funmgr_1 = require("./MyScript/Game/Funmgr");
var ButtonAnim_1 = require("./View/ButtonAnim");
var ExprotView_1 = require("./MyScript/Game/ExprotView");
var ExportViewTemplate_1 = require("./View/TemplateViews/Export/ExportViewTemplate");
var gameFail_1 = require("./MyScript/Game/gameFail");
var gameWin_1 = require("./MyScript/Game/gameWin");
var InGameViewTemplate_1 = require("./View/TemplateViews/InGame/InGameViewTemplate");
var MiniGameViewTemplate_1 = require("./View/TemplateViews/MiniGame/MiniGameViewTemplate");
var OPPONativeAdViewTemplate_1 = require("./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate");
var QQCrazyClick_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick");
var QQCrazyClick2_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick2");
var QQGameFailViewTemplate_1 = require("./View/QQTemplate/GameFail/QQGameFailViewTemplate");
var QQGameWinViewTemplate_1 = require("./View/QQTemplate/GameWin/QQGameWinViewTemplate");
var QQInGameViewTemplate_1 = require("./View/QQTemplate/InGame/QQInGameViewTemplate");
var QQMainViewTemplate_1 = require("./View/QQTemplate/Main/QQMainViewTemplate");
var RewardViewTemplate_1 = require("./View/TemplateViews/Reward/RewardViewTemplate");
var TTCrazyClick_1 = require("./View/TTTemplate/TTCrazyClick/TTCrazyClick");
var TTGameFailViewTemplate_1 = require("./View/TTTemplate/GameFail/TTGameFailViewTemplate");
var TTGameWinViewTemplate_1 = require("./View/TTTemplate/GameWin/TTGameWinViewTemplate");
var TTMainViewTemplate_1 = require("./View/TTTemplate/Main/TTMainViewTemplate");
var TipsView_1 = require("./View/TipsView/TipsView");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox.ts", KRQ_LoopAdBox_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd.ts", KRQ_VLoopAd_1.default);
        reg("KRQ/Com/KRQ_Banner.ts", KRQ_Banner_1.default);
        reg("KRQ/ViewCom/KRQ_Export.ts", KRQ_Export_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_HistoryBox.ts", KRQ_HistoryBox_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_History.ts", KRQ_History_1.default);
        reg("KRQ/Com/KRQ_RockSingleAd.ts", KRQ_RockSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_Floating.ts", KRQ_Floating_1.default);
        reg("KRQ/Com/KRQ_RollSingleAd.ts", KRQ_RollSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_GameOver.ts", KRQ_GameOver_1.default);
        reg("KRQ/ViewCom/KRQ_SidePull.ts", KRQ_SidePull_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd.ts", KRQ_HLoopAd_1.default);
        reg("KRQ/ViewCom/KRQ_Main.ts", KRQ_Main_1.default);
        reg("KRQ/Com/KRQ_SingleAd.ts", KRQ_SingleAd_1.default);
        reg("KRQ/Com/KRQ_GamingBanner.ts", KRQ_GamingBanner_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("View/LoadingView/LogoAni.ts", LogoAni_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("MyScript/Game/MouseInput.ts", MouseInput_1.default);
        reg("MyScript/Game/Funmgr.ts", Funmgr_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("MyScript/Game/ExprotView.ts", ExprotView_1.default);
        reg("View/TemplateViews/Export/ExportViewTemplate.ts", ExportViewTemplate_1.default);
        reg("MyScript/Game/gameFail.ts", gameFail_1.default);
        reg("MyScript/Game/gameWin.ts", gameWin_1.default);
        reg("View/TemplateViews/InGame/InGameViewTemplate.ts", InGameViewTemplate_1.default);
        reg("View/TemplateViews/MiniGame/MiniGameViewTemplate.ts", MiniGameViewTemplate_1.default);
        reg("View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate.ts", OPPONativeAdViewTemplate_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick.ts", QQCrazyClick_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick2.ts", QQCrazyClick2_1.default);
        reg("View/QQTemplate/GameFail/QQGameFailViewTemplate.ts", QQGameFailViewTemplate_1.default);
        reg("View/QQTemplate/GameWin/QQGameWinViewTemplate.ts", QQGameWinViewTemplate_1.default);
        reg("View/QQTemplate/InGame/QQInGameViewTemplate.ts", QQInGameViewTemplate_1.default);
        reg("View/QQTemplate/Main/QQMainViewTemplate.ts", QQMainViewTemplate_1.default);
        reg("View/TemplateViews/Reward/RewardViewTemplate.ts", RewardViewTemplate_1.default);
        reg("View/TTTemplate/TTCrazyClick/TTCrazyClick.ts", TTCrazyClick_1.default);
        reg("View/TTTemplate/GameFail/TTGameFailViewTemplate.ts", TTGameFailViewTemplate_1.default);
        reg("View/TTTemplate/GameWin/TTGameWinViewTemplate.ts", TTGameWinViewTemplate_1.default);
        reg("View/TTTemplate/Main/TTMainViewTemplate.ts", TTMainViewTemplate_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./KRQ/Com/KRQ_Banner":9,"./KRQ/Com/KRQ_GamingBanner":11,"./KRQ/Com/KRQ_History/KRQ_History":12,"./KRQ/Com/KRQ_History/KRQ_HistoryBox":13,"./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd":14,"./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox":15,"./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"./KRQ/Com/KRQ_RockSingleAd":17,"./KRQ/Com/KRQ_RollSingleAd":18,"./KRQ/Com/KRQ_SingleAd":19,"./KRQ/ViewCom/KRQ_Export":20,"./KRQ/ViewCom/KRQ_Floating":21,"./KRQ/ViewCom/KRQ_GameOver":22,"./KRQ/ViewCom/KRQ_Main":23,"./KRQ/ViewCom/KRQ_SidePull":24,"./Mgr/GameMgr":28,"./MyScript/Game/ExprotView":36,"./MyScript/Game/Funmgr":38,"./MyScript/Game/MouseInput":39,"./MyScript/Game/gameFail":42,"./MyScript/Game/gameWin":43,"./ShareAd/View/BannerAdView":51,"./ShareAd/View/HorizontalLoopAdView":52,"./ShareAd/View/LoopAdBox":53,"./View/ButtonAnim":57,"./View/ClickGetPrize/ClickGetPrize":58,"./View/Common/UniversalBottomZone":59,"./View/LoadingView/LoadingView":61,"./View/LoadingView/LogoAni":62,"./View/QQTemplate/GameFail/QQGameFailViewTemplate":63,"./View/QQTemplate/GameWin/QQGameWinViewTemplate":64,"./View/QQTemplate/InGame/QQInGameViewTemplate":65,"./View/QQTemplate/Main/QQMainViewTemplate":66,"./View/QQTemplate/QQCrazyClick/QQCrazyClick":67,"./View/QQTemplate/QQCrazyClick/QQCrazyClick2":68,"./View/TTTemplate/GameFail/TTGameFailViewTemplate":70,"./View/TTTemplate/GameWin/TTGameWinViewTemplate":71,"./View/TTTemplate/Main/TTMainViewTemplate":72,"./View/TTTemplate/TTCrazyClick/TTCrazyClick":73,"./View/TemplateViews/Export/ExportViewTemplate":76,"./View/TemplateViews/InGame/InGameViewTemplate":79,"./View/TemplateViews/MiniGame/MiniGameViewTemplate":81,"./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate":82,"./View/TemplateViews/Reward/RewardViewTemplate":83,"./View/TipsView/TipsView":85,"./View/TwinkleSprite":86}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var ryw_KRQ_Banner = /** @class */ (function (_super) {
    __extends(ryw_KRQ_Banner, _super);
    function ryw_KRQ_Banner() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__wxBanner = null;
        _this.ryw__onLoad = null;
        _this.ryw__onError = null;
        _this.ryw__onResize = null;
        _this.ryw__isCreating = false;
        _this.ryw__isDestroyed = false;
        _this.ryw__isHide = false;
        return _this;
    }
    Object.defineProperty(ryw_KRQ_Banner.prototype, "ryw_Clip", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    ryw_KRQ_Banner.prototype.onAwake = function () {
        this.ryw_AdPosID = ShareAd_1.default.ryw_BannerAdLocationID;
    };
    ryw_KRQ_Banner.prototype.onStart = function () {
        this.ryw_refresh();
    };
    ryw_KRQ_Banner.prototype.onEnable = function () {
        this.ryw_Sprite.on(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_Banner.prototype.onDisable = function () {
        this.ryw_Sprite.off(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_Banner.prototype.ryw_onClickAd = function () {
        this.ryw_navigateToMiniProgram();
    };
    ryw_KRQ_Banner.prototype.ryw_refresh = function (onComplate) {
        if (this.ryw__isDestroyed)
            return;
        var banner = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_banner;
        if (1 == banner) {
            this.ryw_refreshWXBanner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.ryw_GetIpBlocked()) {
                var launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
                var noEnterBySearch = true;
                var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
                for (var i = 0; i < wudianSceneList.length; ++i) {
                    var wudianSceneValue = wudianSceneList[i];
                    if (launchScene == wudianSceneValue) {
                        noEnterBySearch = false;
                    }
                }
                if (noEnterBySearch) {
                    var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
                    Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshWXBanner);
                }
            }
        }
        else {
            this.ryw_refreshBanner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.ryw_GetIpBlocked()) {
                var launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
                var noEnterBySearch = true;
                var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
                for (var i = 0; i < wudianSceneList.length; ++i) {
                    var wudianSceneValue = wudianSceneList[i];
                    if (launchScene == wudianSceneValue) {
                        noEnterBySearch = false;
                    }
                }
                if (noEnterBySearch) {
                    var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
                    Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshWXBanner);
                }
            }
        }
    };
    ryw_KRQ_Banner.prototype.ryw_refreshBanner = function () {
        var _this = this;
        if (null == this.ryw_Sprite || !this.ryw_Sprite.visible)
            return;
        if (this.ryw__isCreating || this.ryw__isDestroyed)
            return;
        this.ryw__isCreating = true;
        _super.prototype.ryw_refresh.call(this, function () {
            if (null != _this.ryw__data) {
                var self_1 = _this;
                _this.ryw_Sprite.loadImage(_this.ryw__data.logo, Laya.Handler.create(_this, function () {
                    if (null != self_1.ryw_Sprite && !self_1.ryw_Sprite.destroyed) {
                        self_1.ryw_Sprite.width = 600;
                        self_1.ryw_Sprite.height = 205;
                    }
                }));
            }
            _this.ryw__isCreating = false;
        });
    };
    ryw_KRQ_Banner.prototype.ryw_refreshWXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame) || null == this.ryw_Sprite || this.ryw_Sprite.destroyed || !this.ryw_Sprite.visible) {
            Laya.timer.clearAll(this);
            this.ryw_clearWXBaner();
            return;
        }
        if (this.ryw__isCreating || this.ryw__isDestroyed || this.ryw__isHide)
            return;
        this.ryw_clearWXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this.ryw_Sprite.localToGlobal(new Laya.Point(0, 0));
        var width = 300;
        var scale = self.ryw_Sprite.width / Laya.stage.width;
        var realWidth = sw * scale;
        var offset = (realWidth - width) / 2;
        var left = pos.x / Laya.stage.width * sw + offset;
        var top = pos.y / Laya.stage.height * sh;
        if (Laya.Browser.onMiniGame) {
            self.ryw__isCreating = true;
            var recreateBannerIDList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_recreateBannerIDList;
            var bannerAdUnitId_1 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_1) {
                bannerAdUnitId_1 = WXAPI_1.default.ryw_bannerAdUnitId;
            }
            this.ryw__wxBanner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerAdUnitId_1,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self.ryw__wxBanner) {
                self.ryw__wxBanner.onLoad(function (res) {
                    console.log("KRQ  WXBanner广告 加载完成 : ", bannerAdUnitId_1);
                    console.log(res);
                    self.ryw__isCreating = false;
                    if (self.ryw__isDestroyed || null == self.ryw__wxBanner || self.ryw__isHide) {
                        self.ryw_clearWXBaner();
                        return;
                    }
                    self.ryw__wxBanner.show();
                });
                self.ryw__wxBanner.onError(function (err) {
                    console.log("KRQ WXBanner广告 加载失败 : ", bannerAdUnitId_1);
                    console.log(err);
                    self.ryw__isCreating = false;
                    self.ryw_clearWXBaner();
                    if (self.ryw__isDestroyed || self.ryw__isHide) {
                        return;
                    }
                    self.ryw_refreshBanner();
                });
                self.ryw__wxBanner.onResize(function (res) {
                });
            }
            else {
                self.ryw_refreshBanner();
            }
        }
        else if (Laya.Browser.onQQMiniGame) {
            self.ryw__isCreating = true;
            var recreateBannerIDList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_recreateBannerIDList;
            var bannerAdUnitId_2 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_2) {
                bannerAdUnitId_2 = QQMiniGameAPI_1.default.ryw_bannerAdUnitId;
            }
            self.ryw__wxBanner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerAdUnitId_2,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self.ryw__wxBanner) {
                self.ryw__onLoad = function (res) {
                    console.log("KRQ QQBanner广告 加载完成 : ", bannerAdUnitId_2);
                    console.log(res);
                    self.ryw__isCreating = false;
                    if (self.ryw__isDestroyed || null == self.ryw__wxBanner || self.ryw__isHide) {
                        self.ryw_clearWXBaner();
                        return;
                    }
                    self.ryw__wxBanner.show();
                };
                self.ryw__wxBanner.onLoad(self.ryw__onLoad);
                self.ryw__onError = function (err) {
                    console.log("KRQ QQBanner广告 加载失败 : ", bannerAdUnitId_2);
                    console.log(err);
                    self.ryw__isCreating = false;
                    self.ryw_clearWXBaner();
                    if (self.ryw__isDestroyed || null == self.ryw__wxBanner || self.ryw__isHide) {
                        return;
                    }
                    self.ryw_refreshBanner();
                };
                self.ryw__wxBanner.onError(self.ryw__onError);
                self.ryw__onResize = function (res) {
                };
                self.ryw__wxBanner.onResize(self.ryw__onResize);
            }
            else {
                self.ryw_refreshBanner();
            }
        }
    };
    ryw_KRQ_Banner.prototype.ryw_clearWXBaner = function () {
        if (this.ryw__wxBanner) {
            this.ryw__wxBanner.hide();
            this.ryw__wxBanner.offLoad(this.ryw__onLoad);
            this.ryw__wxBanner.offError(this.ryw__onError);
            this.ryw__wxBanner.offResize(this.ryw__onResize);
            this.ryw__wxBanner.destroy();
        }
        this.ryw__wxBanner = null;
    };
    ryw_KRQ_Banner.prototype.onViewShow = function () {
        this.ryw__isHide = false;
        var banner = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_banner;
        if (1 == banner) {
            if (null == this.ryw__wxBanner) {
                this.ryw_refreshWXBanner();
                if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.ryw_GetIpBlocked()) {
                    var launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
                    var noEnterBySearch = true;
                    var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
                    for (var i = 0; i < wudianSceneList.length; ++i) {
                        var wudianSceneValue = wudianSceneList[i];
                        if (launchScene == wudianSceneValue) {
                            noEnterBySearch = false;
                        }
                    }
                    if (noEnterBySearch) {
                        var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
                        Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshWXBanner);
                    }
                }
            }
        }
        else {
            this.ryw_refreshBanner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.ryw_GetIpBlocked()) {
                var launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
                var noEnterBySearch = true;
                var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
                for (var i = 0; i < wudianSceneList.length; ++i) {
                    var wudianSceneValue = wudianSceneList[i];
                    if (launchScene == wudianSceneValue) {
                        noEnterBySearch = false;
                    }
                }
                if (noEnterBySearch) {
                    var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
                    Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshWXBanner);
                }
            }
        }
    };
    ryw_KRQ_Banner.prototype.onViewHide = function () {
        this.ryw_clearWXBaner();
        Laya.timer.clearAll(this);
        this.ryw__isHide = true;
    };
    ryw_KRQ_Banner.prototype.onDestroy = function () {
        this.ryw_clearWXBaner();
        Laya.timer.clearAll(this);
        this.ryw__isDestroyed = true;
    };
    ryw_KRQ_Banner.prototype.ryw_show = function () {
        _super.prototype.ryw_show.call(this);
        this.onViewShow();
    };
    ryw_KRQ_Banner.prototype.ryw_hide = function () {
        _super.prototype.ryw_hide.call(this);
        this.onViewHide();
    };
    return ryw_KRQ_Banner;
}(KRQ_ComBase_1.default));
exports.default = ryw_KRQ_Banner;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/WudianMgr":32,"../../QQMiniGameAPI":49,"../../ShareAd/ShareAd":50,"../../WXAPI":88,"./KRQ_ComBase":10}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppConfig_1 = require("../../AppConfig");
var TTAPI_1 = require("../../TTAPI");
var ryw_KRQ_ComBase = /** @class */ (function (_super) {
    __extends(ryw_KRQ_ComBase, _super);
    function ryw_KRQ_ComBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_AdPosID = -10086;
        _this.ryw__datas = [];
        _this.ryw__data = null;
        return _this;
    }
    Object.defineProperty(ryw_KRQ_ComBase.prototype, "ryw_Sprite", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_KRQ_ComBase.prototype, "ryw_Data", {
        get: function () {
            return this.ryw__data;
        },
        enumerable: true,
        configurable: true
    });
    ryw_KRQ_ComBase.prototype.ryw_refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.ryw_getADVs(this.ryw_AdPosID, function (datas) {
            if (null != datas) {
                self.ryw__datas = datas;
                self.ryw__data = self.ryw__datas[Math.floor(Math.random() * datas.length)];
                if (null != onComplate) {
                    onComplate();
                }
            }
        }, false);
    };
    ryw_KRQ_ComBase.prototype.ryw_navigateToMiniProgram = function (d) {
        var data = null == d ? this.ryw__data : d;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                    ALD_1.default.ryw_aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ryw_aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (AppConfig_1.default.onTTMiniGame) {
                TTAPI_1.default.ryw_showMoreGamesModal(function () {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function () {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                });
            }
        }
    };
    ryw_KRQ_ComBase.prototype.ryw_show = function () {
        this.ryw_Sprite.visible = true;
    };
    ryw_KRQ_ComBase.prototype.ryw_hide = function () {
        this.ryw_Sprite.visible = false;
    };
    ryw_KRQ_ComBase.prototype.ryw_autoScrollText = function (text) {
        if (text.overflow != Laya.Text.SCROLL)
            return;
        var forward = true;
        var deltaDis = 0;
        Laya.timer.frameLoop(1, text, function () {
            var d = Laya.timer.delta / 1000 * 10;
            deltaDis += d;
            if (deltaDis >= text.textWidth / 2) {
                forward = !forward;
                deltaDis = 0;
            }
            if (forward) {
                text.scrollX += d;
            }
            else {
                text.scrollX -= d;
            }
        });
    };
    return ryw_KRQ_ComBase;
}(Laya.Script));
exports.default = ryw_KRQ_ComBase;
},{"../../ALD":1,"../../AppConfig":2,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":48,"../../QQMiniGameAPI":49,"../../ShareAd/ShareAd":50,"../../TTAPI":54,"../../WXAPI":88}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("./KRQ_Banner");
var WXAPI_1 = require("../../WXAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var ryw_KRQ_GamingBanner = /** @class */ (function (_super) {
    __extends(ryw_KRQ_GamingBanner, _super);
    function ryw_KRQ_GamingBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ryw_KRQ_GamingBanner.prototype.ryw_refresh = function (onComplate) {
        var _this = this;
        var launchScene = null;
        if (Laya.Browser.onMiniGame) {
            launchScene = WXAPI_1.default.ryw_getLaunchOptionsSync().scene;
        }
        else if (Laya.Browser.onQQMiniGame) {
            launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
        }
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.ryw_GetIpBlocked();
        if (!ipBlocked || !noEnterBySearch) {
            this.ryw_Sprite.visible = false;
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var banner = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_banner;
        if (1 == banner) {
            this.ryw_refreshWXBanner();
        }
        else {
            _super.prototype.ryw_refresh.call(this, function () {
                _this.ryw_refreshBanner();
                if (null != onComplate) {
                    onComplate();
                }
            });
        }
    };
    return ryw_KRQ_GamingBanner;
}(KRQ_Banner_1.default));
exports.default = ryw_KRQ_GamingBanner;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/WudianMgr":32,"../../QQMiniGameAPI":49,"../../WXAPI":88,"./KRQ_Banner":9}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HistoryBox_1 = require("./KRQ_HistoryBox");
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var ryw_KRQ_History = /** @class */ (function (_super) {
    __extends(ryw_KRQ_History, _super);
    function ryw_KRQ_History() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_OnBackBtnClick = null;
        _this.ryw__topZone = null;
        _this.ryw__backBtn = null;
        _this.ryw__startList = new Array();
        return _this;
    }
    ryw_KRQ_History.prototype.onAwake = function () {
        this.ryw_AdPosID = ShareAd_1.default.ryw_HistoryLocationID;
        this.ryw__topZone = this.ryw_Sprite.getChildByName("TopZone");
        this.ryw__backBtn = this.ryw__topZone.getChildByName("BackBtn");
        this.ryw__list = this.ryw_Sprite.getChildByName("List");
        this.ryw__list.renderHandler = Laya.Handler.create(this, this.ryw_onListRender, null, false);
        this.ryw__list.vScrollBarSkin = "";
    };
    ryw_KRQ_History.prototype.onStart = function () {
        this.ryw_refresh();
    };
    ryw_KRQ_History.prototype.onEnable = function () {
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);
    };
    ryw_KRQ_History.prototype.onDisable = function () {
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
    };
    ryw_KRQ_History.prototype.ryw_refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.ryw_getADVs(this.ryw_AdPosID, function (datas) {
            if (null != datas) {
                self.ryw__datas = datas;
                self.ryw__startList.splice(0);
                for (var i = 0; i < self.ryw__datas.length; ++i) {
                    self.ryw__startList.push(false);
                }
                var num = Math.floor(self.ryw__startList.length * 0.33);
                while (num > 0) {
                    var index = Math.floor(Math.random() * self.ryw__startList.length);
                    if (false == self.ryw__startList[index]) {
                        self.ryw__startList[index] = true;
                        --num;
                    }
                }
                self.ryw__list.array = self.ryw__datas;
            }
        }, false);
    };
    ryw_KRQ_History.prototype.ryw_onListRender = function (cell, index) {
        var data = this.ryw__list.array[index];
        var star = this.ryw__startList[index];
        var historyBox = cell.getComponent(KRQ_HistoryBox_1.default);
        historyBox.ryw_setData(data, star);
    };
    ryw_KRQ_History.prototype.ryw_onBackBtn = function () {
        this.ryw_hide();
        if (null != this.ryw_OnBackBtnClick) {
            this.ryw_OnBackBtnClick();
        }
    };
    ryw_KRQ_History.prototype.ryw_show = function () {
        _super.prototype.ryw_show.call(this);
        this.ryw_refresh();
    };
    return ryw_KRQ_History;
}(KRQ_ComBase_1.default));
exports.default = ryw_KRQ_History;
},{"../../../ShareAd/ShareAd":50,"../KRQ_ComBase":10,"./KRQ_HistoryBox":13}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../../Com/KRQ_ComBase");
var ryw_KRQ_HistoryBox = /** @class */ (function (_super) {
    __extends(ryw_KRQ_HistoryBox, _super);
    function ryw_KRQ_HistoryBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__icon = null;
        _this.ryw__text = null;
        _this.ryw__mark = null;
        return _this;
    }
    ryw_KRQ_HistoryBox.prototype.onAwake = function () {
        this.ryw__icon = this.ryw_Sprite.getChildByName("Icon");
        this.ryw__text = this.ryw_Sprite.getChildByName("Text");
        this.ryw__text.overflow = Laya.Text.SCROLL;
        this.ryw__text.text = "";
        this.ryw__mark = this.ryw_Sprite.getChildByName("Mark");
        this.ryw__mark.visible = false;
    };
    ryw_KRQ_HistoryBox.prototype.onStart = function () {
        this.ryw_autoScrollText(this.ryw__text);
    };
    ryw_KRQ_HistoryBox.prototype.onEnable = function () {
        this.ryw_Sprite.on(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_HistoryBox.prototype.onDisable = function () {
        this.ryw_Sprite.off(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_HistoryBox.prototype.ryw_onClickAd = function () {
        this.ryw_navigateToMiniProgram();
    };
    ryw_KRQ_HistoryBox.prototype.ryw_setData = function (data, star) {
        this.ryw__data = data;
        if (null != this.ryw__data) {
            var self = this;
            this.ryw__icon.loadImage(this.ryw__data.logo, Laya.Handler.create(this, function () {
                if (!self.ryw__icon.destroyed) {
                    self.ryw__icon.width = 100;
                    self.ryw__icon.height = 100;
                }
            }));
            var str = String(this.ryw__data.title);
            this.ryw__text.text = str;
            this.ryw__mark.visible = star;
        }
    };
    return ryw_KRQ_HistoryBox;
}(KRQ_ComBase_1.default));
exports.default = ryw_KRQ_HistoryBox;
},{"../../Com/KRQ_ComBase":10}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_LoopAdBox_1 = require("./KRQ_LoopAdBox");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var ryw_KRQ_HLoopAd = /** @class */ (function (_super) {
    __extends(ryw_KRQ_HLoopAd, _super);
    function ryw_KRQ_HLoopAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_isEnable = true;
        _this.ryw_useMovePause = true;
        _this.ryw_useLocalRandom = true;
        _this.ryw_useRandom = true;
        _this.ryw_sortDatas = null;
        _this.ryw__scrollForward = true;
        _this.ryw__cellSize = new Laya.Point();
        return _this;
    }
    Object.defineProperty(ryw_KRQ_HLoopAd.prototype, "ryw_Clip", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    ryw_KRQ_HLoopAd.prototype.onAwake = function () {
        this.ryw_AdPosID = ShareAd_1.default.ryw_LoopAdLocationID;
        this.ryw__list = this.owner.getChildByName("List");
        this.ryw__list.renderHandler = Laya.Handler.create(this, this.ryw_onListRender, null, false);
        this.ryw__list.hScrollBarSkin = "";
    };
    ryw_KRQ_HLoopAd.prototype.onStart = function () {
        var self = this;
        this.ryw__list.width = self.ryw_Clip.width;
        this.ryw__list.height = self.ryw_Clip.height;
        self.ryw_refresh(function () {
            if (null != self.ryw__list.cells && self.ryw__list.cells.length > 0) {
                var box = self.ryw__list.cells[0];
                self.ryw__cellSize.x = box.width;
                self.ryw__cellSize.y = box.height;
                if (self.ryw_useMovePause) {
                    setTimeout(function () {
                        if (self.ryw__list.scrollBar) {
                            self.ryw__list.scrollBar.value = 0;
                            self.ryw_move();
                        }
                    }, 2000);
                }
            }
        });
    };
    ryw_KRQ_HLoopAd.prototype.ryw_refresh = function (onComplate) {
        if (!this.ryw_isEnable) {
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var self = this;
        ShareAd_1.default.ryw_getADVs(this.ryw_AdPosID, function (datas) {
            if (null != datas && datas.length > 0) {
                self.ryw__datas = datas;
                self.ryw__list.array = self.ryw__datas;
                if (null != self.ryw_Sprite && !self.ryw_Sprite.destroyed) {
                    self.ryw_Sprite.visible = true;
                }
                if (null != onComplate) {
                    onComplate();
                }
            }
            else {
                if (null != self.ryw_Sprite && !self.ryw_Sprite.destroyed) {
                    self.ryw_Sprite.visible = false;
                }
            }
        }, this.ryw_useRandom, this.ryw_useLocalRandom, this.ryw_sortDatas);
    };
    ryw_KRQ_HLoopAd.prototype.ryw_onListRender = function (cell, index) {
        var data = this.ryw__list.array[index];
        var loopAdBox = cell.getComponent(KRQ_LoopAdBox_1.default);
        loopAdBox.ryw_setData(data);
    };
    ryw_KRQ_HLoopAd.prototype.ryw_move = function () {
        var tonum = this.ryw__cellSize.x + this.ryw__list.spaceX;
        var left = 0;
        if (!this.ryw__scrollForward) {
            tonum *= -1;
            left = (this.ryw__list.scrollBar.max - this.ryw__list.scrollBar.value) % tonum * -1;
        }
        else {
            left = this.ryw__list.scrollBar.value % tonum;
        }
        if (this.ryw__list.scrollBar) {
            this.ryw__list.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1.ryw__list.scrollBar, { value: self_1.ryw__list.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1.ryw__list.scrollBar.value >= self_1.ryw__list.scrollBar.max) {
                    self_1.ryw__scrollForward = false;
                }
                else if (self_1.ryw__list.scrollBar.value <= 0) {
                    self_1.ryw__scrollForward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1.ryw__list.scrollBar) {
                        self_1.ryw_move();
                    }
                });
            });
        }
    };
    ryw_KRQ_HLoopAd.prototype.onUpdate = function () {
        if (this.ryw_useMovePause)
            return;
        if (this.ryw__scrollForward) {
            this.ryw__list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this.ryw__list.scrollBar.value >= this.ryw__list.scrollBar.max) {
                this.ryw__scrollForward = false;
            }
        }
        else {
            this.ryw__list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this.ryw__list.scrollBar.value <= 0) {
                this.ryw__scrollForward = true;
            }
        }
    };
    return ryw_KRQ_HLoopAd;
}(KRQ_ComBase_1.default));
exports.default = ryw_KRQ_HLoopAd;
},{"../../../ShareAd/ShareAd":50,"../KRQ_ComBase":10,"./KRQ_LoopAdBox":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var ryw_KRQ_LoopAdBox = /** @class */ (function (_super) {
    __extends(ryw_KRQ_LoopAdBox, _super);
    function ryw_KRQ_LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__originW = 170;
        _this.ryw__originH = 170;
        return _this;
    }
    ryw_KRQ_LoopAdBox.prototype.onAwake = function () {
        this.ryw__displaySp = this.owner.getChildByName("Display");
        this.ryw__originW = this.ryw__displaySp.width;
        this.ryw__originH = this.ryw__displaySp.height;
        this.ryw__disText = this.owner.getChildByName("TitelText");
        this.ryw__disText.overflow = Laya.Text.SCROLL;
        this.ryw__disText.text = "";
    };
    ryw_KRQ_LoopAdBox.prototype.onStart = function () {
        this.ryw_autoScrollText(this.ryw__disText);
    };
    ryw_KRQ_LoopAdBox.prototype.onEnable = function () {
        this.ryw_Sprite.on(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_LoopAdBox.prototype.onDisable = function () {
        this.ryw_Sprite.off(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_LoopAdBox.prototype.ryw_onClickAd = function () {
        this.ryw_navigateToMiniProgram();
    };
    ryw_KRQ_LoopAdBox.prototype.ryw_setData = function (data) {
        this.ryw__data = data;
        if (null != this.ryw__data) {
            var self_1 = this;
            this.ryw__displaySp.loadImage(this.ryw__data.logo, Laya.Handler.create(this, function () {
                if (!self_1.ryw__displaySp.destroyed) {
                    self_1.ryw__displaySp.width = self_1.ryw__originW;
                    self_1.ryw__displaySp.height = self_1.ryw__originH;
                }
            }));
            var str = String(this.ryw__data.title);
            this.ryw__disText.text = str;
        }
    };
    return ryw_KRQ_LoopAdBox;
}(KRQ_ComBase_1.default));
exports.default = ryw_KRQ_LoopAdBox;
},{"../KRQ_ComBase":10}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HLoopAd_1 = require("./KRQ_HLoopAd");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var ryw_KRQ_VLoopAd = /** @class */ (function (_super) {
    __extends(ryw_KRQ_VLoopAd, _super);
    function ryw_KRQ_VLoopAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ryw_KRQ_VLoopAd.prototype.onAwake = function () {
        this.ryw_AdPosID = ShareAd_1.default.ryw_LoopAdLocationID;
        this.ryw__list = this.owner.getChildByName("List");
        this.ryw__list.renderHandler = Laya.Handler.create(this, this.ryw_onListRender, null, false);
        this.ryw__list.vScrollBarSkin = "";
    };
    ryw_KRQ_VLoopAd.prototype.ryw_move = function () {
        var tonum = this.ryw__cellSize.y + this.ryw__list.spaceY;
        var left = 0;
        if (!this.ryw__scrollForward) {
            tonum *= -1;
            left = (this.ryw__list.scrollBar.max - this.ryw__list.scrollBar.value) % tonum * -1;
        }
        else {
            left = this.ryw__list.scrollBar.value % tonum;
        }
        if (this.ryw__list.scrollBar) {
            this.ryw__list.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1.ryw__list.scrollBar, { value: self_1.ryw__list.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1.ryw__list.scrollBar.value >= self_1.ryw__list.scrollBar.max) {
                    self_1.ryw__scrollForward = false;
                }
                else if (self_1.ryw__list.scrollBar.value <= 0) {
                    self_1.ryw__scrollForward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1.ryw__list.scrollBar) {
                        self_1.ryw_move();
                    }
                });
            });
        }
    };
    return ryw_KRQ_VLoopAd;
}(KRQ_HLoopAd_1.default));
exports.default = ryw_KRQ_VLoopAd;
},{"../../../ShareAd/ShareAd":50,"./KRQ_HLoopAd":14}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var ryw_KRQ_RockSingleAd = /** @class */ (function (_super) {
    __extends(ryw_KRQ_RockSingleAd, _super);
    function ryw_KRQ_RockSingleAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ryw_KRQ_RockSingleAd.prototype.ryw_playAni = function (onComplate) {
        var self = this;
        self.ryw_Sprite.rotation = 0;
        Laya.Tween.to(self.ryw_Sprite, {
            rotation: 20,
        }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
            Laya.Tween.to(self.ryw_Sprite, {
                rotation: 0,
            }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                self.ryw_Sprite.rotation = 0;
                if (null != onComplate) {
                    onComplate();
                }
            }));
        }));
    };
    return ryw_KRQ_RockSingleAd;
}(KRQ_SingleAd_1.default));
exports.default = ryw_KRQ_RockSingleAd;
},{"./KRQ_SingleAd":19}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var ryw_KRQ_RollSingleAd = /** @class */ (function (_super) {
    __extends(ryw_KRQ_RollSingleAd, _super);
    function ryw_KRQ_RollSingleAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originX = null;
        return _this;
    }
    ryw_KRQ_RollSingleAd.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._originX = this.ryw_Sprite.x;
        this.ryw_Sprite.x -= Laya.stage.width;
    };
    ryw_KRQ_RollSingleAd.prototype.ryw_playAni = function (onComplate) {
        var _this = this;
        var cur = this._originX;
        var next = cur - Laya.stage.width;
        this.ryw_Sprite.x = next;
        Laya.Tween.to(this.ryw_Sprite, {
            rotation: 360,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this.ryw_Sprite.rotation = 0;
        }));
        Laya.Tween.to(this.ryw_Sprite, {
            x: cur,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this.ryw_Sprite.x = cur;
            if (null != onComplate) {
                onComplate();
            }
        }));
    };
    return ryw_KRQ_RollSingleAd;
}(KRQ_SingleAd_1.default));
exports.default = ryw_KRQ_RollSingleAd;
},{"./KRQ_SingleAd":19}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ryw_KRQ_SingleAd = /** @class */ (function (_super) {
    __extends(ryw_KRQ_SingleAd, _super);
    function ryw_KRQ_SingleAd() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__originW = 300;
        _this.ryw__originH = 300;
        return _this;
    }
    ryw_KRQ_SingleAd.prototype.onAwake = function () {
        this.ryw_AdPosID = ShareAd_1.default.ryw_LoopAdLocationID;
        this.ryw__display = this.ryw_Sprite.getChildByName("Display");
        this.ryw__text = this.ryw_Sprite.getChildByName("Text");
        this.ryw__text.overflow = Laya.Text.SCROLL;
        this.ryw__text.text = "";
    };
    ryw_KRQ_SingleAd.prototype.onEnable = function () {
        this.ryw_Sprite.on(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_SingleAd.prototype.onDisable = function () {
        this.ryw_Sprite.off(Laya.Event.CLICK, this, this.ryw_onClickAd);
    };
    ryw_KRQ_SingleAd.prototype.onStart = function () {
        this.ryw_autoScrollText(this.ryw__text);
        this.ryw_refresh();
    };
    ryw_KRQ_SingleAd.prototype.ryw_refresh = function (onComplate) {
        var self = this;
        ShareAd_1.default.ryw_getADVs(this.ryw_AdPosID, function (datas) {
            if (null != datas) {
                self.ryw__datas = datas;
                if (self.ryw_Sprite && !self.ryw_Sprite.destroyed) {
                    for (var i = 0; i < self.ryw__datas.length; ++i) {
                        var find = false;
                        var data = self.ryw__datas[i];
                        for (var j = 0; j < ryw_KRQ_SingleAd.ryw__repeatCheckList.length; ++j) {
                            var appid = ryw_KRQ_SingleAd.ryw__repeatCheckList[j];
                            if (appid == data.appid) {
                                find = true;
                                break;
                            }
                        }
                        if (!find) {
                            self.ryw_clearRepeat();
                            self.ryw__data = data;
                            break;
                        }
                    }
                    if (null == self.ryw__data) {
                        self.ryw__data = self.ryw__datas[Math.floor(Math.random() * datas.length)];
                    }
                    if (null != self.ryw__data) {
                        self.ryw__display.loadImage(self.ryw__data.logo, Laya.Handler.create(self, function () {
                            if (null != self.ryw_Sprite && !self.ryw_Sprite.destroy) {
                                self.ryw_Sprite.visible = true;
                                if (onComplate) {
                                    onComplate();
                                }
                            }
                        }));
                        var str = self.ryw__data.title;
                        self.ryw__text.text = str;
                        var isHas = false;
                        for (var j = 0; j < ryw_KRQ_SingleAd.ryw__repeatCheckList.length; ++j) {
                            var appid = ryw_KRQ_SingleAd.ryw__repeatCheckList[j];
                            if (appid == self.ryw__data.appid) {
                                isHas = true;
                                break;
                            }
                        }
                        if (!isHas) {
                            ryw_KRQ_SingleAd.ryw__repeatCheckList.push(self.ryw__data.appid);
                        }
                    }
                    else {
                        if (null != self.ryw_Sprite && !self.ryw_Sprite.destroy) {
                            self.ryw_Sprite.visible = false;
                        }
                        if (onComplate) {
                            onComplate();
                        }
                    }
                }
            }
            else {
                // self.ryw_Sprite.visible = false;
                // if (onComplate) {
                //     onComplate();
                // }
            }
        });
    };
    ryw_KRQ_SingleAd.prototype.ryw_hide = function () {
        this.ryw_Sprite.visible = false;
        this.ryw_clearRepeat();
    };
    ryw_KRQ_SingleAd.prototype.ryw_clearRepeat = function () {
        if (null != this.ryw__data) {
            for (var i = 0; i < ryw_KRQ_SingleAd.ryw__repeatCheckList.length; ++i) {
                var appid = ryw_KRQ_SingleAd.ryw__repeatCheckList[i];
                if (appid == this.ryw__data.appid) {
                    ryw_KRQ_SingleAd.ryw__repeatCheckList.splice(i, 1);
                    break;
                }
            }
        }
    };
    ryw_KRQ_SingleAd.prototype.ryw_onClickAd = function () {
        this.ryw_navigateToMiniProgram();
        this.ryw_refresh();
    };
    ryw_KRQ_SingleAd.prototype.onDestroy = function () {
        this.ryw_clearRepeat();
    };
    ryw_KRQ_SingleAd.ryw__repeatCheckList = new Array();
    return ryw_KRQ_SingleAd;
}(KRQ_ComBase_1.default));
exports.default = ryw_KRQ_SingleAd;
},{"../../ShareAd/ShareAd":50,"./KRQ_ComBase":10}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var Utilit_1 = require("../../Utilit");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var ryw_KRQ_Export = /** @class */ (function (_super) {
    __extends(ryw_KRQ_Export, _super);
    function ryw_KRQ_Export() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_onContinueBtnClick = null;
        _this.ryw__topZone = null;
        _this.ryw__backBtn = null;
        _this.ryw__centerZone = null;
        _this.ryw__continueBtn = null;
        _this.ryw__krqHistory = null;
        _this.ryw__krqBanner = null;
        return _this;
    }
    Object.defineProperty(ryw_KRQ_Export.prototype, "ryw_BackBtn", {
        get: function () {
            if (null == this.ryw__backBtn) {
                this.ryw__backBtn = this.ryw_Sprite.getChildByName("TopZone").getChildByName("BackBtn");
            }
            return this.ryw__backBtn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_KRQ_Export.prototype, "ryw_ContinueBtn", {
        get: function () {
            if (null == this.ryw__continueBtn) {
                this.ryw__continueBtn = this.ryw_Sprite.getChildByName("CenterZone").getChildByName("ContinueBtn");
            }
            return this.ryw__continueBtn;
        },
        enumerable: true,
        configurable: true
    });
    ryw_KRQ_Export.prototype.onAwake = function () {
        this.ryw__topZone = this.ryw_Sprite.getChildByName("TopZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__topZone.top = this.ryw__topZone.top + 75;
        }
        this.ryw__backBtn = this.ryw__topZone.getChildByName("BackBtn");
        this.ryw__centerZone = this.ryw_Sprite.getChildByName("CenterZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
        }
        this.ryw__continueBtn = this.ryw__centerZone.getChildByName("ContinueBtn");
        this.ryw__krqHistory = this.owner.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        this.ryw__krqBanner = this.owner.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        var self = this;
        this.ryw__krqHistory.ryw_OnBackBtnClick = function () {
            self.ryw__krqBanner.ryw_show();
        };
    };
    ryw_KRQ_Export.prototype.onEnable = function () {
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);

        this.ryw__continueBtn.on(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_KRQ_Export.prototype.onDisable = function () {
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__continueBtn.off(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_KRQ_Export.prototype.ryw_onBackBtn = function () {
        this.ryw__krqHistory.ryw_show();
        this.ryw__krqBanner.ryw_hide();
    };
    ryw_KRQ_Export.prototype.ryw_onContinueBtn = function () {
        if (null != this.ryw_onContinueBtnClick) {
            this.ryw_onContinueBtnClick();
        }
    };
    return ryw_KRQ_Export;
}(KRQ_ViewComBase_1.default));
exports.default = ryw_KRQ_Export;
},{"../../Utilit":56,"../Com/KRQ_Banner":9,"../Com/KRQ_History/KRQ_History":12,"./KRQ_ViewComBase":25}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RockSingleAd_1 = require("../Com/KRQ_RockSingleAd");
var ryw_KRQ_Floating = /** @class */ (function (_super) {
    __extends(ryw_KRQ_Floating, _super);
    function ryw_KRQ_Floating() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__rockSingleAds = new Array();
        _this.ryw__aniSpaceing = 3000;
        return _this;
    }
    ryw_KRQ_Floating.prototype.onAwake = function () {
        this.ryw__centerZone = this.ryw_Sprite.getChildByName("CenterZone");
        for (var i = 0; i < this.ryw__centerZone.numChildren; ++i) {
            var child = this.ryw__centerZone.getChildAt(i);
            if (child.visible) {
                var rockAd = child.getComponent(KRQ_RockSingleAd_1.default);
                this.ryw__rockSingleAds.push(rockAd);
            }
        }
    };
    ryw_KRQ_Floating.prototype.onStart = function () {
        var self = this;
        self.ryw_playAni();
        Laya.timer.loop(this.ryw__rockSingleAds.length * (this.ryw__aniSpaceing + 500), this, function () {
            self.ryw_playAni(function () {
                self.ryw_refreshAd();
            });
        });
    };
    ryw_KRQ_Floating.prototype.ryw_refreshAd = function () {
        for (var i = 0; i < this.ryw__rockSingleAds.length; ++i) {
            var ad = this.ryw__rockSingleAds[i];
            if (null == ad.ryw_Data) {
                ad.ryw_Sprite.visible = false;
            }
            ad.ryw_refresh();
        }
    };
    ryw_KRQ_Floating.prototype.ryw_playAni = function (onComplate) {
        var len = this.ryw__rockSingleAds.length;
        var _loop_1 = function (i) {
            var index = i;
            var ad = this_1.ryw__rockSingleAds[index];
            Laya.timer.once(this_1.ryw__aniSpaceing * i, ad, function () {
                if (index == len - 1) {
                    ad.ryw_playAni(onComplate);
                }
                else {
                    ad.ryw_playAni();
                }
            });
        };
        var this_1 = this;
        for (var i = 0; i < this.ryw__rockSingleAds.length; ++i) {
            _loop_1(i);
        }
    };
    return ryw_KRQ_Floating;
}(KRQ_ViewComBase_1.default));
exports.default = ryw_KRQ_Floating;
},{"../Com/KRQ_RockSingleAd":17,"./KRQ_ViewComBase":25}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RollSingleAd_1 = require("../Com/KRQ_RollSingleAd");
var ryw_KRQ_GameOver = /** @class */ (function (_super) {
    __extends(ryw_KRQ_GameOver, _super);
    function ryw_KRQ_GameOver() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__rollSingleAds = new Array();
        return _this;
    }
    ryw_KRQ_GameOver.prototype.onAwake = function () {
        this.ryw__centerZone = this.ryw_Sprite.getChildByName("CenterZone");
        for (var i = 0; i < this.ryw__centerZone.numChildren; ++i) {
            var ad = this.ryw__centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            this.ryw__rollSingleAds.push(ad);
        }
    };
    ryw_KRQ_GameOver.prototype.onStart = function () {
        var _loop_1 = function (i) {
            var ad = this_1.ryw__rollSingleAds[i];
            Laya.timer.once((this_1.ryw__rollSingleAds.length - i) * 150, this_1, function () {
                ad.ryw_playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this.ryw__rollSingleAds.length; ++i) {
            _loop_1(i);
        }
    };
    return ryw_KRQ_GameOver;
}(KRQ_ViewComBase_1.default));
exports.default = ryw_KRQ_GameOver;
},{"../Com/KRQ_RollSingleAd":18,"./KRQ_ViewComBase":25}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_HLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_HLoopAd");
var Utilit_1 = require("../../Utilit");
var ryw_KRQ_MainState;
(function (ryw_KRQ_MainState) {
    ryw_KRQ_MainState[ryw_KRQ_MainState["Normal"] = 0] = "Normal";
    ryw_KRQ_MainState[ryw_KRQ_MainState["NoLoopAd"] = 1] = "NoLoopAd";
    ryw_KRQ_MainState[ryw_KRQ_MainState["NoBannerAd"] = 2] = "NoBannerAd";
})(ryw_KRQ_MainState = exports.ryw_KRQ_MainState || (exports.ryw_KRQ_MainState = {}));
var ryw_KRQ_Main = /** @class */ (function (_super) {
    __extends(ryw_KRQ_Main, _super);
    function ryw_KRQ_Main() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__topZone = null;
        _this.ryw__historyBtn = null;
        _this.ryw__krqLoopAd = null;
        _this.ryw__bottomZone = null;
        _this.ryw__krqBanner = null;
        _this.ryw__krqHistory = null;
        return _this;
    }
    ryw_KRQ_Main.prototype.onAwake = function () {
        this.ryw__topZone = this.ryw_Sprite.getChildByName("TopZone");
        this.ryw__historyBtn = this.ryw__topZone.getChildByName("HistoryBtn");
        this.ryw__historyBtn.visible = false;
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__topZone.top = this.ryw__topZone.top + 75;
        }
        this.ryw__krqLoopAd = this.ryw_Sprite.getChildByName("KRQ_HLoopAd").getComponent(KRQ_HLoopAd_1.default);
        this.ryw__krqBanner = this.ryw_Sprite.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        this.ryw__krqHistory = this.ryw_Sprite.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        this.ryw__krqHistory.ryw_OnBackBtnClick = function () {
            if (aspectRatio < 0.5) {
                self.ryw__krqBanner.ryw_show();
            }
        };
        this.ryw__krqLoopAd.ryw_Sprite.visible = false;
        if (aspectRatio < 0.5) {
            this.ryw__krqLoopAd.ryw_Clip.top = 100;
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__krqLoopAd.ryw_Clip.top = this.ryw__krqLoopAd.ryw_Clip.top + 75;
            }
            this.ryw__krqBanner.ryw_Sprite.visible = true;
        }
        else {
            this.ryw__krqLoopAd.ryw_Clip.top = Laya.stage.height - 280;
            this.ryw__krqBanner.ryw_Sprite.visible = false;
        }
    };
    ryw_KRQ_Main.prototype.ryw_switchState = function (state) {
        if (state == ryw_KRQ_MainState.Normal) {
            var aspectRatio = Laya.stage.width / Laya.stage.height;
            if (aspectRatio < 0.5) {
                this.ryw__krqLoopAd.ryw_Clip.top = 100;
                if (Utilit_1.default.ryw_isIphoneX()) {
                    this.ryw__krqLoopAd.ryw_Clip.top = this.ryw__krqLoopAd.ryw_Clip.top + 75;
                }
                this.ryw__krqBanner.ryw_Sprite.visible = true;
            }
            else {
                this.ryw__krqLoopAd.ryw_Clip.top = Laya.stage.height - 280;
                this.ryw__krqBanner.ryw_Sprite.visible = false;
            }
        }
        else if (state == ryw_KRQ_MainState.NoLoopAd) {
            this.ryw__krqLoopAd.ryw_isEnable = false;
            this.ryw__krqLoopAd.ryw_Sprite.visible = false;
            this.ryw__krqBanner.ryw_Sprite.visible = true;
        }
        else if (state == ryw_KRQ_MainState.NoBannerAd) {
            this.ryw__krqLoopAd.ryw_Clip.top = Laya.stage.height - 280;
            this.ryw__krqBanner.ryw_AdPosID = -1;
            this.ryw__krqBanner.ryw_Sprite.visible = false;
        }
    };
    ryw_KRQ_Main.prototype.onEnable = function () {
        this.ryw__historyBtn.on(Laya.Event.CLICK, this, this.ryw_onHistoryBtn);
    };
    ryw_KRQ_Main.prototype.onDisable = function () {
        this.ryw__historyBtn.off(Laya.Event.CLICK, this, this.ryw_onHistoryBtn);
    };
    ryw_KRQ_Main.prototype.ryw_onHistoryBtn = function () {
        this.ryw__krqHistory.ryw_show();
        this.ryw__krqBanner.ryw_hide();
    };
    return ryw_KRQ_Main;
}(KRQ_ViewComBase_1.default));
exports.default = ryw_KRQ_Main;
},{"../../Utilit":56,"../Com/KRQ_Banner":9,"../Com/KRQ_History/KRQ_History":12,"../Com/KRQ_LoopAd/KRQ_HLoopAd":14,"./KRQ_ViewComBase":25}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_VLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_VLoopAd");
var ryw_KRQ_SidePull = /** @class */ (function (_super) {
    __extends(ryw_KRQ_SidePull, _super);
    function ryw_KRQ_SidePull() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__krqVLoopAd = null;
        _this.ryw__pullBtn = null;
        return _this;
    }
    ryw_KRQ_SidePull.prototype.onAwake = function () {
        this.ryw__krqVLoopAd = this.ryw_Sprite.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this.ryw__pullBtn = this.ryw__krqVLoopAd.ryw_Sprite.getChildByName("PullBtn");
        this.ryw__krqVLoopAd.ryw_Sprite.x = -this.ryw__krqVLoopAd.ryw_Sprite.width;
    };
    ryw_KRQ_SidePull.prototype.onEnable = function () {
        this.ryw__pullBtn.on(Laya.Event.CLICK, this, this.ryw_onPullBtn);
    };
    ryw_KRQ_SidePull.prototype.onDisable = function () {
        this.ryw__pullBtn.off(Laya.Event.CLICK, this, this.ryw_onPullBtn);
    };
    ryw_KRQ_SidePull.prototype.ryw_onPullBtn = function () {
        if (this.ryw__krqVLoopAd.ryw_Sprite.x < 0) {
            this.ryw_pull();
        }
        else {
            this.ryw_push();
        }
    };
    ryw_KRQ_SidePull.prototype.ryw_pull = function () {
        Laya.Tween.to(this.ryw__krqVLoopAd.ryw_Sprite, {
            x: 0
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    ryw_KRQ_SidePull.prototype.ryw_push = function () {
        Laya.Tween.to(this.ryw__krqVLoopAd.ryw_Sprite, {
            x: -this.ryw__krqVLoopAd.ryw_Sprite.width
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    ryw_KRQ_SidePull.prototype.ryw_onShareAdFail = function () {
        this.ryw_pull();
    };
    return ryw_KRQ_SidePull;
}(KRQ_ViewComBase_1.default));
exports.default = ryw_KRQ_SidePull;
},{"../Com/KRQ_LoopAd/KRQ_VLoopAd":16,"./KRQ_ViewComBase":25}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_KRQ_ViewComBase = /** @class */ (function (_super) {
    __extends(ryw_KRQ_ViewComBase, _super);
    function ryw_KRQ_ViewComBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_onShow = null;
        _this.ryw_onHide = null;
        return _this;
    }
    Object.defineProperty(ryw_KRQ_ViewComBase.prototype, "ryw_Sprite", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    ryw_KRQ_ViewComBase.prototype.ryw_show = function () {
        this.ryw_Sprite.visible = true;
        if (null != this.ryw_onShow) {
            this.ryw_onShow();
        }
    };
    ryw_KRQ_ViewComBase.prototype.ryw_hide = function () {
        this.ryw_Sprite.visible = false;
        if (null != this.ryw_onHide) {
            this.ryw_onHide();
        }
    };
    return ryw_KRQ_ViewComBase;
}(Laya.Script));
exports.default = ryw_KRQ_ViewComBase;
},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
var OPPOAPI_1 = require("../OPPOAPI");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var ryw_MaiLiang = /** @class */ (function () {
    function ryw_MaiLiang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {ryw_requestData} req
     * @memberof MaiLiang
     */
    ryw_MaiLiang.ryw_request = function (req) {
        if (req.ryw_url.indexOf("https://") > -1 ||
            req.ryw_url.indexOf("http://") > -1) {
            req.ryw_url = req.ryw_url;
        }
        else {
            req.ryw_url = ryw_MaiLiang.ryw_mainUrl + req.ryw_url;
        }
        var completeFunc = function (res) {
        };
        var errorFunc = function (res) {
        };
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    ryw_MaiLiang.ryw_GetMaiLiangOpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.ryw_getLaunchOptionsSync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.ryw_openId != "") {
                    ryw_MaiLiang.ryw_key = key;
                    var req = new HttpUnit_1.ryw_requestData();
                    req.ryw_url = ryw_MaiLiang.ryw_uclick;
                    req.ryw_onSuccess = onSuccess;
                    req.ryw_onFail = onFail;
                    req.ryw_data.appid = AppConfig_1.default.ryw_AppID;
                    req.ryw_data.openid = "";
                    var time = new Date().getTime() / 1000;
                    req.ryw_data.posttime = time;
                    req.ryw_data.auth = 0;
                    req.ryw_data.key = key;
                    req.ryw_data.wxopenid = User_1.default.ryw_openId;
                    req.ryw_meth = "POST";
                    console.log("发送买量数据接口");
                    ryw_MaiLiang.ryw_request(req);
                }
            }
            else {
                console.log("上报买量数据失败");
                onFail(null);
            }
        }
        else if (Laya.Browser.onQGMiniGame) {
            var option = OPPOAPI_1.default.ryw_getLaunchOptionsSync();
            HttpUnit_1.default.ryw_reportImport(option.referrerInfo.package, option.referrerInfo.extraData.appid, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 上报买量数据成功");
                }
                else {
                    console.log("OPPO 上报买量数据失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 上报买量数据失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    ryw_MaiLiang.ryw_ReportStayTime = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (ryw_MaiLiang.ryw_MaiLiangOpenId != "") {
                var req = new HttpUnit_1.ryw_requestData();
                req.ryw_url = ryw_MaiLiang.ryw_stay;
                req.ryw_onSuccess = onSuccess;
                req.ryw_onFail = onFail;
                req.ryw_data.appid = AppConfig_1.default.ryw_AppID;
                req.ryw_data.openid = ryw_MaiLiang.ryw_MaiLiangOpenId;
                var time = new Date().getTime() / 1000;
                req.ryw_data.posttime = time;
                var staytime = ryw_MaiLiang.ryw_time != 0 ? time - ryw_MaiLiang.ryw_time : 0;
                req.ryw_data.time = staytime;
                req.ryw_meth = "POST";
                console.log("发送停留时间至买量接口");
                ryw_MaiLiang.ryw_request(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    ryw_MaiLiang.ryw_mainUrl = "https://swtj.mrkzx.cn";
    ryw_MaiLiang.ryw_uclick = "/v1.1/api/Activity/uclick.html";
    ryw_MaiLiang.ryw_stay = "/v1.1/api/Activity/stay.html";
    ryw_MaiLiang.ryw_key = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    ryw_MaiLiang.ryw_MaiLiangOpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    ryw_MaiLiang.ryw_time = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return ryw_MaiLiang;
}());
exports.default = ryw_MaiLiang;
},{"../AppConfig":2,"../Net/HttpUnit":45,"../OPPOAPI":48,"../User/User":55,"../WXAPI":88}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var QQMiniGameAPI_1 = require("./QQMiniGameAPI");
var TTAPI_1 = require("./TTAPI");
var ALD_1 = require("./ALD");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (true == AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.onMiniGame = false;
        }
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame
            && !AppConfig_1.default.onTTMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            AppConfig_1.default.ryw_ResServer = AppConfig_1.default.ryw_LocalTestReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.ryw_ResServer + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.ryw_instance.ryw_regOnceEvent(EventDef_1.ryw_EventDef.ryw_App_CloseFirstLoadingView, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        // this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        // Laya.stage.addChild(this._loadingUI);
        // this._loadingUI.width = Laya.stage.width;
        // this._loadingUI.height = Laya.stage.height;
        // this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        //this._loadingView.ryw_setProcess(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        //this._preLoadRes.push({ url: AppConfig.ResServer + "/json/example.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
         //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    //self._loadingView.ryw_setProcess(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
    };
    Main.prototype.onLoadResComplate = function () {
        var _this = this;
        var self = this;
        //this._loadingView.ryw_setProcess(1);
            User_1.default.ryw_testInitUser(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./ALD":1,"./AppConfig":2,"./Event/EventDef":6,"./Event/EventMgr":7,"./GameConfig":8,"./Net/HttpUnit":45,"./OPPOAPI":48,"./QQMiniGameAPI":49,"./TTAPI":54,"./User/User":55,"./View/LoadingView/LoadingView":61,"./WXAPI":88,"./ui/layaMaxUI":89}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var WudianMgr_1 = require("./WudianMgr");
var ALD_1 = require("../ALD");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var WXADMgr_1 = require("./WXADMgr");
var CachedQQBannerAd_1 = require("../CachedQQBannerAd");
var AppRun_1 = require("../MyScript/AppRun");
var SoundMgr_1 = require("./SoundMgr");
//游戏管理器，游戏代码的入口
var ryw_GameMgr = /** @class */ (function (_super) {
    __extends(ryw_GameMgr, _super);
    function ryw_GameMgr() {
        var _this = _super.call(this) || this;
        ryw_GameMgr.ryw__instance = _this;
        return _this;
    }
    ryw_GameMgr.ryw_getInstance = function () { return ryw_GameMgr.ryw__instance; };
    ryw_GameMgr.prototype.onAwake = function () {
        MaiLiang_1.default.ryw_GetMaiLiangOpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.ryw_GetMaiLiangOpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.ryw_ReportStayTime(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.ryw_SetShareMenu("", "", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.ryw_UpdateIpBlockState();
        this.ryw_reportLaunchOptions();
        if (Laya.Browser.onMiniGame) {
            //ryw_CachedWXBannerAd.ryw_preloadBanner(); 如果是老项目使用了 CachedWXBannerAd 这个类，请打开这一行注释
            WXADMgr_1.default.ryw_init(); //如果不是老项目，没有使用 WXADMgr 这个类, 请注释这一行。
        }
        else if (Laya.Browser.onQQMiniGame) {
            CachedQQBannerAd_1.default.preloadBanner();
            QQMiniGameAPI_1.default.ryw_LoadAppBoxAd(function () { }, function () { });
        }
        else if (Laya.Browser.onQGMiniGame) {
            if (null != Laya.Browser.window["qg"].reportMonitor && typeof (Laya.Browser.window["qg"].reportMonitor) == 'function') {
                Laya.Browser.window["qg"].reportMonitor('game_scene', 0);
            }
        }
    };
    ryw_GameMgr.prototype.onStart = function () {
        this.ryw_preCreateGame();
    };
    ryw_GameMgr.prototype.ryw_preCreateGame = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        Laya.MouseManager.multiTouchEnabled = false;
        AppRun_1.default.Instance.init(function () {
            console.log('游戏准备就绪');
            //loadView.Instance.sceneLoad()
            // SoundMgr_1.default.ryw_instance.ryw_playBGM("bg");
            ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_App_CloseFirstLoadingView); //关卡回调
            });
        }, User_1.default.ryw_getLeveNum());
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    ryw_GameMgr.prototype.ryw_saveGameData = function () {
        HttpUnit_1.default.ryw_saveGameData(User_1.default.ryw_getSaveData(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    ryw_GameMgr.prototype.ryw_reportLaunchOptions = function () {
        HttpUnit_1.default.ryw_Getuserip(function (res) {
            if (1 == res.code) {
                console.log("获取玩家ip,地区成功 ：", res.data.dqip, res.data.ipxq);
                var opt = null;
                if (Laya.Browser.onMiniGame) {
                    opt = WXAPI_1.default.ryw_getLaunchOptionsSync();
                }
                else if (Laya.Browser.onQQMiniGame) {
                    opt = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync();
                }
                if (null != opt) {
                    ALD_1.default.ryw_aldSendReportLaunchOptions(opt.scene, res.data.dqip, res.data.ipxq);
                }
            }
        }, function (res) {
            console.log("获取玩家ip,地区失败");
            var opt = null;
            if (Laya.Browser.onMiniGame) {
                opt = WXAPI_1.default.ryw_getLaunchOptionsSync();
            }
            else if (Laya.Browser.onQQMiniGame) {
                opt = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync();
            }
            if (null != opt) {
                ALD_1.default.ryw_aldSendReportLaunchOptions(opt.scene, "", "");
            }
        });
    };
    ryw_GameMgr.ryw__instance = null;
    return ryw_GameMgr;
}(Laya.Script));
exports.default = ryw_GameMgr;
},{"../ALD":1,"../CachedQQBannerAd":3,"../Event/EventDef":6,"../Event/EventMgr":7,"../MaiLiangAPI/MaiLiang":26,"../MyScript/AppRun":33,"../Net/HttpUnit":45,"../QQMiniGameAPI":49,"../User/User":55,"../WXAPI":88,"./SoundMgr":29,"./ViewMgr":30,"./WXADMgr":31,"./WudianMgr":32}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_SoundMgr = /** @class */ (function () {
    function ryw_SoundMgr() {
        this.ryw__enabled = true;
    }
    Object.defineProperty(ryw_SoundMgr.prototype, "ryw_Enabled", {
        get: function () {
            return this.ryw__enabled;
        },
        set: function (e) {
            if (!e) {
                this.ryw_stopBGM();
            }
            this.ryw__enabled = e;
        },
        enumerable: true,
        configurable: true
    });
    ryw_SoundMgr.prototype.ryw_getSoundUrl = function (name) {
        var url = ryw_SoundMgr.ryw_soundResPath + name + ".mp3";
        return url;
    };
    ryw_SoundMgr.prototype.ryw_playSound = function (name) {
        if (!this.ryw__enabled)
            return;
        var url = this.ryw_getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = ryw_SoundMgr.ryw_soundResPath + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    ryw_SoundMgr.prototype.ryw_playBGM = function (name) {
        if (!this.ryw__enabled)
            return;
        var url = this.ryw_getSoundUrl(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.ryw_bgm) {
                this.ryw_bgm = wx.createInnerAudioContext();
            }
            this.ryw_bgm.pause();
            this.ryw_bgm.src = url;
            this.ryw_bgm.loop = true;
            this.ryw_bgm.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    ryw_SoundMgr.prototype.ryw_stopBGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.ryw_bgm) {
                this.ryw_bgm.pause();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    ryw_SoundMgr.ryw_soundResPath = "subRes/sound/";
    ryw_SoundMgr.ryw_instance = new ryw_SoundMgr();
    return ryw_SoundMgr;
}());
exports.default = ryw_SoundMgr;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_ViewDef;
(function (ryw_ViewDef) {
    ryw_ViewDef["ryw_None"] = "";
    ryw_ViewDef["ryw_TipsView"] = "View/TipsView.json";
    ryw_ViewDef["ryw_ClickGetPrize"] = "View/ClickGetPrize.json";
    ryw_ViewDef["ryw_MainView"] = "View/Template/MainViewTemplate.json";
    ryw_ViewDef["ryw_MiniGameView"] = "View/Template/MiniGameViewTemplate.json";
    ryw_ViewDef["ryw_RewardView"] = "View/Template/RewardViewTemplate.json";
    ryw_ViewDef["ryw_InGameView"] = "View/Template/InGameViewTemplate.json";
    ryw_ViewDef["ryw_GameWinView"] = "View/Template/GameWinViewTemplate.json";
    ryw_ViewDef["ryw_GameFailView"] = "View/Template/GameFailViewTemplate.json";
    ryw_ViewDef["ryw_ExportView"] = "View/Template/ExportViewTemplate.json";
    ryw_ViewDef["ryw_Export2View"] = "View/Template/Export2ViewTemplate.json";
    ryw_ViewDef["ryw_OPPONativeView"] = "View/Template/OPPONativeViewTemplate.json";
    ryw_ViewDef["ryw_QQCrazyClickView"] = "View/Template/QQ/QQCrazyClick.json";
    ryw_ViewDef["ryw_QQCrazyClickView2"] = "View/Template/QQ/QQCrazyClick2.json";
    //todo:添加你的界面
    ryw_ViewDef["MainScene"] = "View/MianScene.json";
})(ryw_ViewDef = exports.ryw_ViewDef || (exports.ryw_ViewDef = {}));
//界面管理器
var ryw_ViewMgr = /** @class */ (function () {
    function ryw_ViewMgr() {
        this.ryw__views = {};
        this.ryw__loadingList = new Array();
    }
    ryw_ViewMgr.prototype.ryw_openView = function (viewType, data, oncomplate) {
        if (this.ryw__views[viewType]) {
            var view = this.ryw__views[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.ryw_openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        for (var i = 0; i < this.ryw__loadingList.length; ++i) {
            var def = this.ryw__loadingList[i];
            if (def == viewType) {
                console.log("界面 : " + String(def) + " 正在加载中，请不要重复加载");
                return;
            }
        }
        var viewUrl = String(viewType);
        var self = this;
        this.ryw__loadingList.push(viewType);
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self.ryw__views[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.ryw_openView(data);
                        break;
                    }
                }
            }
            for (var i = 0; i < self.ryw__loadingList.length; ++i) {
                var def = self.ryw__loadingList[i];
                if (def == viewType) {
                    self.ryw__loadingList.splice(i, 1);
                    break;
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    ryw_ViewMgr.prototype.ryw_closeView = function (viewType) {
        var view = this.ryw__views[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this.ryw__views[viewType] = null;
        }
    };
    ryw_ViewMgr.prototype.ryw_ShowView = function (viewType) {
        var view = this.ryw__views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.ryw_show();
                        break;
                    }
                }
            }
        }
    };
    ryw_ViewMgr.prototype.ryw_hideView = function (viewType) {
        var view = this.ryw__views[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.ryw_hide();
                        break;
                    }
                }
            }
        }
    };
    ryw_ViewMgr.prototype.ryw_getView = function (viewType) {
        return this.ryw__views[viewType];
    };
    ryw_ViewMgr.prototype.ryw_showTips = function (msg) {
        this.ryw_openView(ryw_ViewDef.ryw_TipsView, msg);
    };
    ryw_ViewMgr.ryw_instance = new ryw_ViewMgr();
    return ryw_ViewMgr;
}());
exports.default = ryw_ViewMgr;
},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var ryw_WXBannderAd = /** @class */ (function () {
    function ryw_WXBannderAd(bannerid) {
        this.ryw__id = null;
        this.ryw__banner = null;
        this.ryw__createTime = 0;
        this.ryw__destroyed = false;
        this.ryw__error = null;
        this.ryw__loading = false;
        this.ryw__retryCount = 0;
        this.ryw__bannerTotalShowTime = 0;
        this.ryw__lastShowTime = 0;
        this.ryw__id = bannerid;
    }
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_Id", {
        get: function () {
            return this.ryw__id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_CreateTime", {
        get: function () {
            return this.ryw__createTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_Destroyed", {
        get: function () {
            return this.ryw__destroyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_isReady", {
        get: function () {
            return null != this.ryw__banner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_isError", {
        get: function () {
            return null != this.ryw__error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_Error", {
        get: function () {
            return this.ryw__error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_Loading", {
        get: function () {
            return this.ryw__loading;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_RetryCount", {
        get: function () {
            return this.ryw__retryCount;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXBannderAd.prototype, "ryw_BannerTotalShowTime", {
        get: function () {
            return this.ryw__bannerTotalShowTime;
        },
        enumerable: true,
        configurable: true
    });
    ryw_WXBannderAd.prototype.ryw_show = function () {
        if (this.ryw_isReady) {
            this.ryw__banner.hide();
            var self_1 = this;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var pos = new Laya.Point(0, 0);
            var width = 300;
            var left = sw / 2 - width / 2;
            var top_1 = sh - 130;
            this.ryw__banner.style.left = left;
            this.ryw__banner.style.top = top_1;
            this.ryw__lastShowTime = Laya.timer.currTimer;
            this.ryw__banner.show();
        }
    };
    ryw_WXBannderAd.prototype.ryw_hide = function () {
        if (this.ryw_isReady) {
            this.ryw__banner.hide();
            this.ryw__bannerTotalShowTime += (Laya.timer.currTimer - this.ryw__lastShowTime);
        }
    };
    ryw_WXBannderAd.prototype.ryw_destroy = function () {
        if (this.ryw__destroyed) {
            console.log("BannerAd 已经被销毁");
            return;
        }
        if (this.ryw__loading) {
            console.log("BannerAd 正在加载中，无法进行销毁");
            return;
        }
        if (null != this.ryw__banner) {
            this.ryw__banner.destroy();
        }
        this.ryw__banner = null;
        this.ryw__destroyed = true;
    };
    ryw_WXBannderAd.prototype.ryw_retry = function (callBack) {
        if (this.ryw__destroyed) {
            console.log("BannerAd 已被销毁，无法重试");
            return;
        }
        if (this.ryw_isReady) {
            console.log("BannerAd 已创建成功，无需重试");
            return;
        }
        if (this.ryw__loading) {
            console.log("BannerAd 正在创建中");
            return;
        }
        if (this.ryw__retryCount >= ryw_WXBannderAd.ryw_MAX_RETRY_COUNT) {
            console.log("此 BannerAd 重试次数已达最大");
            return;
        }
        var self = this;
        this.ryw__create(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
            ++self.ryw__retryCount;
        });
    };
    ryw_WXBannderAd.prototype.ryw__create = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var banner = null;
        if (Laya.Browser.onMiniGame) {
            banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: this.ryw__id,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            banner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: this.ryw__id,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        if (null != banner) {
            var self_2 = this;
            this.ryw__loading = true;
            banner.onLoad(function (res) {
                console.log("BannderAd 加载完成", self_2.ryw__id, res);
                self_2.ryw__banner = banner;
                self_2.ryw__createTime = Laya.timer.currTimer;
                self_2.ryw__loading = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            banner.onError(function (err) {
                console.log("BannderAd 加载失败", self_2.ryw__id, err);
                self_2.ryw__error = err;
                self_2.ryw__loading = false;
                banner.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    ryw_WXBannderAd.ryw_MAX_RETRY_COUNT = 3;
    return ryw_WXBannderAd;
}());
exports.ryw_WXBannderAd = ryw_WXBannderAd;
var ryw_WXGridAd = /** @class */ (function () {
    function ryw_WXGridAd(bannerid) {
        this.ryw__id = null;
        this.ryw__gridAd = null;
        this.ryw__createTime = 0;
        this.ryw__destroyed = false;
        this.ryw__error = null;
        this.ryw__loading = false;
        this.ryw__id = bannerid;
    }
    Object.defineProperty(ryw_WXGridAd.prototype, "ryw_CreateTime", {
        get: function () {
            return this.ryw__createTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXGridAd.prototype, "ryw_Destroyed", {
        get: function () {
            return this.ryw__destroyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXGridAd.prototype, "ryw_isReady", {
        get: function () {
            return null != this.ryw__gridAd;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXGridAd.prototype, "ryw_isError", {
        get: function () {
            return null != this.ryw__error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXGridAd.prototype, "ryw_Error", {
        get: function () {
            return this.ryw__error;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WXGridAd.prototype, "ryw_Loading", {
        get: function () {
            return this.ryw__loading;
        },
        enumerable: true,
        configurable: true
    });
    ryw_WXGridAd.prototype.ryw_show = function () {
        if (this.ryw_isReady) {
            this.ryw__gridAd.show();
        }
    };
    ryw_WXGridAd.prototype.ryw_hide = function () {
        if (this.ryw_isReady) {
            this.ryw__gridAd.hide();
        }
    };
    ryw_WXGridAd.prototype.ryw_destroy = function () {
        if (this.ryw__destroyed) {
            console.log("GridAD 已经被销毁");
            return;
        }
        if (this.ryw__loading) {
            console.log("GridAD 正在加载中，无法进行销毁");
            return;
        }
        if (null != this.ryw__gridAd) {
            this.ryw__gridAd.destroy();
        }
        this.ryw__gridAd = null;
        this.ryw__destroyed = true;
    };
    ryw_WXGridAd.prototype.ryw_retry = function (callBack) {
        if (this.ryw__destroyed) {
            console.log("GridAD 已被销毁，无法重试");
            return;
        }
        if (this.ryw_isReady) {
            console.log("GridAD 已创建成功，无需重试");
            return;
        }
        if (this.ryw__loading) {
            console.log("GridAD 正在创建中");
            return;
        }
        var self = this;
        this.ryw__create(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
        });
    };
    ryw_WXGridAd.prototype.ryw__create = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var gridAd = Laya.Browser.window["wx"].createGridAd({
            adUnitId: this.ryw__id,
            adIntervals: 30,
            style: {
                left: 0,
                top: 0,
                width: 300,
                height: 150,
            }
        });
        if (null != gridAd) {
            var self_3 = this;
            this.ryw__loading = true;
            gridAd.onLoad(function (res) {
                console.log("GridAD 加载完成", self_3.ryw__id, res);
                self_3.ryw__gridAd = gridAd;
                self_3.ryw__createTime = Laya.timer.currTimer;
                self_3.ryw__loading = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            gridAd.onError(function (err) {
                console.log("GridAD 加载失败", self_3.ryw__id, err);
                self_3.ryw__error = err;
                self_3.ryw__loading = false;
                gridAd.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    return ryw_WXGridAd;
}());
exports.ryw_WXGridAd = ryw_WXGridAd;
var ryw_WXADMgr = /** @class */ (function () {
    function ryw_WXADMgr() {
    }
    ryw_WXADMgr.ryw_init = function () {
        if (ryw_WXADMgr.ryw__inited)
            return;
        var banners = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wxWuDianBanners;
        for (var i = 0; i < banners.length; ++i) {
            ryw_WXADMgr.ryw__bannerIds.push(banners[i]);
        }
        for (var i = 0; i < ryw_WXADMgr.ryw__bannerIds.length; ++i) {
            var cur = ryw_WXADMgr.ryw__bannerIds[i];
            ryw_WXADMgr.ryw__bannerIds[i] = banners[Math.floor(Math.random() * banners.length)];
        }
        ryw_WXADMgr.ryw__createBannerAd();
        var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerCreateFailNum * 1000;
        Laya.timer.loop(bannerRecreateTime, ryw_WXADMgr, function () {
            ryw_WXADMgr.ryw__checkBannerAd();
            ryw_WXADMgr.ryw__createBannerAd();
        });
        //WXADMgr._createGirdAd();
        ryw_WXADMgr.ryw__inited = true;
    };
    ryw_WXADMgr.ryw_getBanner = function (callBack) {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < ryw_WXADMgr.ryw__banners.length; ++i) {
            var bannerAd_1 = ryw_WXADMgr.ryw__banners[i];
            if (!bannerAd_1.ryw_Destroyed) {
                if (bannerAd_1.ryw_isReady) {
                    readyBannerAd.push(bannerAd_1);
                }
                else {
                    UnreadyBannerAd.push(bannerAd_1);
                }
            }
        }
        if (ryw_WXADMgr.ryw__curBannerGetIndex >= readyBannerAd.length) {
            ryw_WXADMgr.ryw__curBannerGetIndex = 0;
        }
        var bannerAd = readyBannerAd[ryw_WXADMgr.ryw__curBannerGetIndex];
        ++ryw_WXADMgr.ryw__curBannerGetIndex;
        if (null != bannerAd) {
            callBack(bannerAd);
        }
        else {
            bannerAd = ryw_WXADMgr.ryw__createBannerAd();
            if (null == bannerAd) {
                bannerAd = ryw_WXADMgr.ryw__banners[Math.floor(Math.random() * ryw_WXADMgr.ryw__banners.length)];
            }
            if (null == bannerAd) {
                callBack(null);
            }
            else {
                bannerAd.ryw_retry(function (ok) {
                    if (ok) {
                        callBack(bannerAd);
                    }
                    else {
                        callBack(null);
                    }
                });
            }
        }
    };
    ryw_WXADMgr.ryw__createBannerAd = function () {
        if (ryw_WXADMgr.ryw__curBannerCreateIndex >= ryw_WXADMgr.ryw__bannerIds.length)
            return null;
        var bannerAd = new ryw_WXBannderAd(ryw_WXADMgr.ryw__bannerIds[ryw_WXADMgr.ryw__curBannerCreateIndex]);
        ryw_WXADMgr.ryw__banners.push(bannerAd);
        bannerAd.ryw_retry();
        ++ryw_WXADMgr.ryw__curBannerCreateIndex;
        return bannerAd;
    };
    ryw_WXADMgr.ryw__checkBannerAd = function () {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < ryw_WXADMgr.ryw__banners.length; ++i) {
            var bannerAd = ryw_WXADMgr.ryw__banners[i];
            if (!bannerAd.ryw_Destroyed) {
                if (bannerAd.ryw_isReady) {
                    readyBannerAd.push(bannerAd);
                }
                else {
                    UnreadyBannerAd.push(bannerAd);
                }
            }
        }
        for (var i = 0; i < ryw_WXADMgr.ryw__banners.length; ++i) {
            var bannerAd = ryw_WXADMgr.ryw__banners[i];
            var bannerShowTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerShowTime;
            if (!bannerAd.ryw_isReady) {
                if (bannerAd.ryw_RetryCount >= ryw_WXBannderAd.ryw_MAX_RETRY_COUNT) {
                    console.log("BannerAd 超过重试次数，销毁 : ", bannerAd.ryw_Id);
                    bannerAd.ryw_destroy();
                }
                else {
                    bannerAd.ryw_retry();
                }
            }
            else if (readyBannerAd.length >= 2 && bannerAd.ryw_BannerTotalShowTime >= bannerShowTime * 1000) {
                console.log("BannerAd 展示时间超过限制，销毁 : ", bannerAd.ryw_Id);
                bannerAd.ryw_destroy();
            }
        }
    };
    ryw_WXADMgr.ryw_getBoxAd = function (callBack) {
        if (ryw_WXADMgr.ryw__wxGridAd.ryw_isReady) {
            callBack(ryw_WXADMgr.ryw__wxGridAd);
        }
        else {
            var gridAd_1 = ryw_WXADMgr.ryw__wxGridAd;
            gridAd_1.ryw_retry(function (isOk) {
                if (isOk) {
                    callBack(gridAd_1);
                }
                else {
                    callBack(null);
                }
            });
        }
    };
    ryw_WXADMgr.ryw__createGirdAd = function () {
        if (null != ryw_WXADMgr.ryw__wxGridAd)
            return;
        var gridAd = new ryw_WXGridAd("");
        gridAd.ryw_retry();
        ryw_WXADMgr.ryw__wxGridAd = gridAd;
    };
    ryw_WXADMgr.ryw__inited = false;
    ryw_WXADMgr.ryw__bannerIds = new Array();
    ryw_WXADMgr.ryw__banners = new Array();
    ryw_WXADMgr.ryw__curBannerCreateIndex = 0;
    ryw_WXADMgr.ryw__curBannerGetIndex = 0;
    ryw_WXADMgr.ryw__wxGridAd = null;
    return ryw_WXADMgr;
}());
exports.default = ryw_WXADMgr;
},{"../Config/AppSwitchConfig":5}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var ryw_WudianMgr = /** @class */ (function () {
    function ryw_WudianMgr() {
    }
    ryw_WudianMgr.ryw_IpBlockFlag = function () {
        return ryw_WudianMgr.ryw__ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    ryw_WudianMgr.ryw_UpdateIpBlockState = function () {
        HttpUnit_1.default.ryw_GetIpBlock(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            ryw_WudianMgr.ryw__ipBlockFlag = res.code;
            EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_App_OnUpdateIpBlockState, { ipBlockFlag: ryw_WudianMgr.ryw__ipBlockFlag });
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    ryw_WudianMgr.ryw_GetIpBlocked = function () {
        return ryw_WudianMgr.ryw__ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    ryw_WudianMgr.ryw_GetEntryScene = function () {
        return WXAPI_1.default.ryw_getLaunchOptionsSync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    ryw_WudianMgr.ryw_IsSwitchOpen = function () {
        alert()
        var mainSwitch = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudian == 1;
        var isOpenTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().wudianTimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(ryw_WudianMgr, "ryw_WudianFlag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var isOpenTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().wudianTimeAvaliable;
            var ipnotBlock = ryw_WudianMgr.ryw__ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock, "打开时间", isOpenTime);
            return mainSwitch && noEnterBySearch && ipnotBlock && isOpenTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_WudianMgr, "ryw_NoTimeWudianFlag", {
        /**
         * 没有涉及到定时开关的wudianFlag,自行整合按照时间开关的效果
         *
         * @static
         * @returns {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = ryw_WudianMgr.ryw__ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽");
            return mainSwitch && noEnterBySearch && ipnotBlock;
        },
        enumerable: true,
        configurable: true
    });
    ryw_WudianMgr.ryw__ipBlockFlag = -1;
    return ryw_WudianMgr;
}());
exports.default = ryw_WudianMgr;
},{"../Config/AppSwitchConfig":5,"../Event/EventDef":6,"../Event/EventMgr":7,"../Net/HttpUnit":45,"../QQMiniGameAPI":49,"../WXAPI":88}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fiy_1 = require("./Game/Fiy");
var AppRun = /** @class */ (function (_super) {
    __extends(AppRun, _super);
    function AppRun() {
        var _this = _super.call(this) || this;
        _this.index = 1;
        _this.CheckpointIndex = 1;
        _this._TK0 = "subRes/Scener3D/LayaScene_00011/Conventional/Assets/Materials/sc_tk_03.lmat";
        _this._TK1 = "subRes/Scener3D/LayaScene_00011/Conventional/Assets/Materials/sc_tk_05.lmat";
        _this._TK2 = "subRes/Scener3D/LayaScene_00011/Conventional/Assets/Materials/sc_zi_01.lmat";
        _this.cjType = 0;
        return _this;
    }
    Object.defineProperty(AppRun, "Instance", {
        get: function () {
            if (!AppRun._instance) {
                AppRun._instance = new AppRun();
            }
            return AppRun._instance;
        },
        enumerable: true,
        configurable: true
    });
    AppRun.prototype.init = function (cb, Checkpoint) {
        var _this = this;
        this.createrGame(function (scene) {
            //开启雾化效果
            scene.enableFog = false;
            //设置雾化的颜色
            scene.fogColor = new Laya.Vector3(65 / 255, 87 / 255, 233 / 255);
            //设置雾化的起始位置，相对于相机的距离
            scene.fogStart = 15;
            //设置雾化最浓处的距离。
            scene.fogRange = 20;
            var url = "";
            _this.cjType = _this.getRndInteger(1, 3);
            _this.cjType == 1 ? url = _this._TK0 : _this.cjType == 2 ? url = _this._TK1 : url = _this._TK2;
            Laya.BaseMaterial.load(url, Laya.Handler.create(_this, function (mat) {
                //获取场景的天空渲染器
                var skyRenderer = scene.skyRenderer;
                //附上天空盒
                skyRenderer.mesh = Laya.SkyBox.instance;
                //设置材质
                skyRenderer.material = mat;
                Laya.stage.addChildAt(scene, 0);
                scene.addComponent(Fiy_1.default); //添加脚本进场景
                cb && cb();
            }));
        }, Checkpoint, false);
    };
    AppRun.prototype.initScene = function (cb, Checkpoint) {
        this.createrGame(function (scene) {
            Laya.stage.addChildAt(scene, 0);
            scene.addComponent(Fiy_1.default); //添加脚本进场景
            cb && cb();
        }, Checkpoint, true);
    };
    AppRun.prototype.createrGame = function (completed, Checkpoint, isbool) {
        if (isbool === void 0) { isbool = false; }
        //首页场景加载
        var url = "subRes/Scener3D/LayaScene_00011/Conventional/Scenes_03.ls";
        Laya.Scene3D.load(url, Laya.Handler.create(this, function (scene) {
            //console.log('首页场景加载完成')
            completed && completed(scene);
        }));
    };
    //返回 min（包含）～ max（包含）之间的数字
    AppRun.prototype.getRndInteger = function (min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    };
    AppRun._instance = null;
    return AppRun;
}(Laya.Script));
exports.default = AppRun;
},{"./Game/Fiy":37}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _playerType;
(function (_playerType) {
    _playerType[_playerType["_Start"] = 0] = "_Start";
    _playerType[_playerType["_Mobile"] = 1] = "_Mobile";
    _playerType[_playerType["_Jump"] = 2] = "_Jump";
    _playerType[_playerType["_End"] = 3] = "_End";
})(_playerType = exports._playerType || (exports._playerType = {}));
var FiyData = /** @class */ (function (_super) {
    __extends(FiyData, _super);
    function FiyData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FiyData, "Instance", {
        get: function () {
            if (FiyData.instance == null)
                FiyData.instance = new FiyData();
            return FiyData.instance;
        },
        enumerable: true,
        configurable: true
    });
    /**正常速度 每帧 */
    FiyData._speed = 0.23;
    /**加速速度 每帧 */
    FiyData._JSspeed = 0.28;
    /**跳跃移动灵敏度 每帧 */
    FiyData._jumpMoveSpeed = 0.09;
    /**在板上灵敏度 每帧 */
    FiyData._moveSpeed = 0.04;
    FiyData._section = 1.3;
    FiyData._iniesection = 4.5;
    FiyData._boundary = 4;
    FiyData._dividing = 12;
    FiyData._interval = 6;
    /**变色块数量 */
    FiyData._color = {
        /** 关卡数      最小值   最大值 */
        1: [3, 5],
        2: [2, 4],
        3: [5, 7],
        4: [3, 6],
        5: [3, 7],
    };
    /**变色块之间数量 */
    FiyData._jump = {
        /** 关卡数      最小值   最大值 */
        1: [3, 5],
        2: [3, 5],
        3: [2, 5],
        4: [1, 6],
        5: [1, 5],
    };
    FiyData._props = {
        1: [1, 2],
        2: [0, 1],
        3: [1, 3],
        4: [1, 2],
        5: [1, 2],
    };
    FiyData.instance = null; //单例
    return FiyData;
}(Laya.Script));
exports.default = FiyData;
},{}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fiy_1 = require("./Fiy");
var Funmgr_1 = require("./Funmgr");
var CameraMove = /** @class */ (function (_super) {
    __extends(CameraMove, _super);
    function CameraMove() {
        var _this = _super.call(this) || this;
        _this._pointY = 0;
        _this._pointZ = 0;
        return _this;
    }
    Object.defineProperty(CameraMove, "Instance", {
        get: function () {
            return CameraMove.instance;
        },
        enumerable: true,
        configurable: true
    });
    CameraMove.prototype.onAwake = function () {
        CameraMove.instance = this;
    };
    CameraMove.prototype.onStart = function () {
        this._camera = this.owner;
        this._maincamera = this._camera.getChildByName("Main Camera");
        this._maincamera.transform.localPosition = new Laya.Vector3(0, 2, 5);
    };
    CameraMove.prototype.onMove = function () {
        //let p: Laya.Vector3 = new Laya.Vector3(this._camera.transform.position.x, this._player.transform.position.y + 1.5, this._player.transform.position.z);
        //this._camera.transform.lookAt(p, Laya.Vector3._Up, false); 
        if (!Fiy_1.default.instance.gameStart)
            this._camera.transform.position = new Laya.Vector3(this._player.transform.localPositionX, this._player.transform.localPositionY + this._pointY, this._player.transform.localPositionZ + this._pointZ);
        else
            this._camera.transform.position = new Laya.Vector3(0, this._player.transform.localPositionY + this._pointY, this._player.transform.localPositionZ + this._pointZ);
    };
    CameraMove.prototype.CameraMove = function () {
        var _this = this;
        this.tween_0 = Laya.Tween.to(this._maincamera.transform, { localRotationEulerX: -25, localPositionY: 12, localPositionZ: 17 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            Laya.Tween.clear(_this.tween_0);
            _this.tween_1 = Laya.Tween.to(_this._maincamera.transform, { localRotationEulerX: -17, localPositionY: 5, localPositionZ: 10 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(_this, function () {
                Laya.Tween.clear(_this.tween_1);
            }));
        }));
    };
    CameraMove.prototype.overMove = function () {
        var _this = this;
        this.tween_7 = Laya.Tween.to(Fiy_1.default.instance._light.transform, { localRotationEulerX: -143.66, localRotationEulerY: 0 }, 2000);
        this.tween_2 = Laya.Tween.to(this._camera.transform, { localPositionX: this._player.transform.localPositionX, localRotationEulerY: 0 }, 2000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            Laya.Tween.clear(_this.tween_2);
            _this.tween_3 = Laya.Tween.to(_this._maincamera.transform, { localPositionY: 2, localPositionZ: 5 }, 500, Laya.Ease.linearIn, Laya.Handler.create(_this, function () {
                Laya.Tween.clear(_this.tween_3);
                Funmgr_1.default.instance.onGamewinOver();
            }));
        }));
    };
    CameraMove.prototype.onStartGame = function () {
        var _this = this;
        this.tween_6 = Laya.Tween.to(Fiy_1.default.instance._light.transform, { localRotationEulerX: -143.66, localRotationEulerY: -161.57 }, 2000);
        this.tween_4 = Laya.Tween.to(this._camera.transform, { localRotationEulerY: 180 }, 2000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            Laya.Tween.clear(_this.tween_4);
            _this.tween_5 = Laya.Tween.to(_this._maincamera.transform, { localRotationEulerX: -17, localPositionY: 5, localPositionZ: 10 }, 500, Laya.Ease.linearIn, Laya.Handler.create(_this, function () {
                Laya.Tween.clear(_this.tween_5);
                Fiy_1.default.Instance.gameStart = true;
                Fiy_1.default.Instance.onpropsMove();
                Fiy_1.default.Instance._playerAnim.play("Run");
            }));
        }));
    };
    CameraMove.prototype.onParagliderAin = function () {
        var _this = this;
        this.tween_9 = Laya.Tween.to(this._maincamera.transform, { localRotationEulerX: -30, localPositionY: 8, localPositionZ: 15 }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            Laya.Tween.clear(_this.tween_9);
            /*this.tween_10 = Laya.Tween.to(this._maincamera.transform, { localRotationEulerX: -17, localPositionY: 5, localPositionZ: 10 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, () => {
                Laya.Tween.clear(this.tween_10)
            }))*/
        }));
    };
    CameraMove.instance = null; //单例
    return CameraMove;
}(Laya.Script));
exports.default = CameraMove;
},{"./Fiy":37,"./Funmgr":38}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Exprot2ViewTemplate_1 = require("../../View/TemplateViews/Export2/Exprot2ViewTemplate");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var ExprotView = /** @class */ (function (_super) {
    __extends(ExprotView, _super);
    function ExprotView() {
        return _super.call(this) || this;
    }
    ExprotView.prototype.ryw_onContinueBtn = function () {
        _super.prototype.ryw_onContinueBtn.call(this);
        ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
            ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_Export2View); //关闭面板
        });
    };
    return ExprotView;
}(Exprot2ViewTemplate_1.default));
exports.default = ExprotView;
},{"../../Mgr/ViewMgr":30,"../../View/TemplateViews/Export2/Exprot2ViewTemplate":75}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraMove_1 = require("./CameraMove");
var FiyData_1 = require("../Data/FiyData");
var Funmgr_1 = require("./Funmgr");
var Radish_1 = require("./Radish");
var User_1 = require("../../User/User");
var AppRun_1 = require("../AppRun");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var Fiy = /** @class */ (function (_super) {
    __extends(Fiy, _super);
    function Fiy() {
        var _this = _super.call(this) || this;
        _this._endHeight = .8; //块的高度
        _this.gameStart = false;
        _this._isJump = false;
        _this._isJumpNull = false;
        _this._isAccelerate = false;
        _this._isparaglider = false;
        _this._isFound = false;
        _this._isColor = true;
        _this._isprop = null;
        _this._allBlocks = [[], []]; //所有的包括起点终点变色板
        _this._block = [[], []]; //只有跳跃板
        _this._nextPoint = new Laya.Vector3(0, 0, 0); //下一个点的最小xyz值
        _this._heightSrray = [];
        _this._colorID = [];
        _this._scsjObj = [];
        _this._redUrl = "";
        _this._greenUrl = "";
        _this._blueUrl = "";
        _this._currentColor = new Laya.Vector4(255 / 255, 255 / 255, 255 / 255, 255 / 255);
        _this._redColor = new Laya.Vector4(251 / 255, 127 / 255, 195 / 255, 255 / 255);
        _this._greenColor = new Laya.Vector4(24 / 255, 203 / 255, 32 / 255, 255 / 255);
        _this._blueColor = new Laya.Vector4(65 / 255, 87 / 255, 233 / 255, 255 / 255);
        _this._diffuseColor = new Laya.Vector4(65 / 255, 87 / 255, 233 / 255, 255 / 255);
        _this._SpecColor = new Laya.Vector4(65 / 255, 87 / 255, 233 / 255, 255 / 255);
        _this._moveOffiseX = 0;
        _this._section = 1;
        _this.angle = 10;
        _this._speed = 0;
        _this._jsStaID = -5;
        _this._HxsStaID = 0;
        _this._HxsEndID = 0;
        _this._batter = 0;
        _this._sensitivity = 10; //灵敏度
        _this._space = 0;
        return _this;
    }
    Object.defineProperty(Fiy, "Instance", {
        get: function () {
            return Fiy.instance;
        },
        enumerable: true,
        configurable: true
    });
    Fiy.prototype.onAwake = function () {
        Fiy.instance = this;
        this.scene = this.owner;
        this.player = this.owner.getChildByName("player");
        this._playerAnim = this.player.getComponent(Laya.Animator);
        this.playerColor = this.player.getChildByName("body_1");
        this._light = this.owner.getChildByName("Directional Light");
        this._light.transform.localRotationEulerY = 0;
        this._TXyun = this.player.getChildByName("TX_yan");
        this._TX = this.owner.getChildByName("TX_qiu");
        this._TXQiu = this._TX.getChildByName("eff_qiu");
        this._TXQiu.particleSystem.startColorConstant = this._blueColor;
        this._TXJS = this.player.getChildByName("TX_jiasu_1");
        if (this._TX.active)
            this._TX.active = false;
        if (this._TXyun.active)
            this._TXyun.active = false;
        if (this._TXJS.active)
            this._TXJS.active = false;
        this.type_0 = this.owner.getChildByName("sc_yp_03");
        this.type_1 = this.owner.getChildByName("sc_cf_01");
        this.type_2 = this.owner.getChildByName("sc_pd_01");
        this.sc_ls_01 = this.owner.getChildByName("sc_tb_01");
        this.sc_tb_02 = this.owner.getChildByName("sc_tb_02");
        this.sc_sj = this.owner.getChildByName("sc_sj_01");
        this.sc_qpg_01 = this.owner.getChildByName("sc_qpg_01");
        this._sc_gd_03 = this.owner.getChildByName("sc_gd_03");
        this._sc_gd_02 = this.owner.getChildByName("sc_gd_02");
        this._sc_gd_01 = this.owner.getChildByName("sc_gd_01");
        this._radish_2 = this.owner.getChildByName("sc_lb_01c");
        this._radish_1 = this.owner.getChildByName("sc_lb_02");
        this._shoes = this.owner.getChildByName("pr_xz_01");
        this._lightning = this.owner.getChildByName("pr_sd_01");
        this._paraglider = this.owner.getChildByName("pr_hxs_01");
        this._paragliderD = this.owner.getChildByName("sc_dhxs_01");
        this._san = this.owner.getChildByName("sc_cj_01");
        this._san_01 = this.owner.getChildByName("sc_cj_03");
        this._san_02 = this.owner.getChildByName("sc_cj_02");
        this._radishFun = new Radish_1.default();
        this._radishFun.setPrpos(this._shoes, this._lightning, this._paraglider, this.player, this._paragliderD);
        this._blocks = 0;
        this._allBlocks[this._blocks][0] = this.sc_ls_01;
        this._blocks++;
        this.camera = this.owner.getChildByName("Main Camera").addComponent(CameraMove_1.default);
        this._through = 0;
        this._speed = FiyData_1.default._speed;
        this._colorID = [];
        this.camera._player = this.player;
        this._greenUrl = "subRes/Scener3D/LayaScene_00011/Conventional/Assets/Materials/sc_fg_03.lmat";
        this._redUrl = "subRes/Scener3D/LayaScene_00011/Conventional/Assets/Materials/sc_fg_02.lmat";
        this._blueUrl = "subRes/Scener3D/LayaScene_00011/Conventional/Assets/Materials/sc_fg_01.lmat";
        var _endColor = this.playerColor.skinnedMeshRenderer.material;
        var colorred = this._radishFun.getRndInteger(1, 3);
        this._radishFun.InitMaterial(this.playerColor);
        colorred == 1 ? this._currentColor = this._redColor : colorred == 2 ? this._currentColor = this._greenColor : colorred == 3 ? this._currentColor = this._blueColor : this._currentColor = this._redColor;
        var endColor = this.playerColor.skinnedMeshRenderer.material;
        endColor.diffuseColor = this._currentColor;
        this.JumpMove(this.angle, false, true);
        this._sensitivity = FiyData_1.default._moveSpeed;
        this._sceneType = AppRun_1.default.Instance.cjType;
    };
    Fiy.prototype.onStart = function () {
        this._currentPoint = new Laya.Vector3(this.sc_ls_01.transform.position.x, this.sc_ls_01.transform.position.y - 5, this.sc_ls_01.transform.position.z);
        var level = User_1.default.ryw_getLeveNum();
        if (level % 5 == 0)
            level = 5;
        else
            level = level % 5;
        this._color = this._radishFun.getRndInteger(FiyData_1.default._color[level][0], FiyData_1.default._color[level][1]); //2, 6)
        this._jump = this._radishFun.getRndInteger(FiyData_1.default._jump[level][0], FiyData_1.default._jump[level][1]); //3, 8)
        this._scsjObj = [];
        this._heightSrray = [];
        this._radishFun.setCJ(this._san, this._san_01, this._san_02);
        for (var i = 0; i < this._color; i++) { //几块变色区
            this._type = this._radishFun.getRndInteger(0, 2);
            for (var j = 0; j < this._jump; j++) { //区块之间有多少个数量
                this._column = this.RanInteger(this._column, 1, 3);
                this.ColumnInstantiate(this._column);
            }
            this._colorID.push(this._blocks);
            this._allBlocks[this._blocks] = [];
            if (i < this._color - 1) {
                this._cube = Laya.Sprite3D.instantiate(this.sc_tb_02, this.owner, false, new Laya.Vector3(0, this._currentPoint.y + 1, this._currentPoint.z + 20));
                this._allBlocks[this._blocks][0] = this._cube;
                this._scsjObj[i] = Laya.Sprite3D.instantiate(this.sc_sj, this.owner, false, new Laya.Vector3(this._allBlocks[this._blocks][0].transform.position.x - .1, this._allBlocks[this._blocks][0].transform.position.y + 0.5, this._allBlocks[this._blocks][0].transform.position.z + 4.31));
                this._scsjObj[i].transform.localRotationEuler = new Laya.Vector3(0, 0, 0);
            }
            else {
                this._cube = Laya.Sprite3D.instantiate(this.sc_qpg_01, this.owner, false, new Laya.Vector3(0, this._currentPoint.y + 1, this._currentPoint.z + 20));
                this._allBlocks[this._blocks][0] = this._cube;
            }
            this._blocks++;
            this._currentPoint = new Laya.Vector3(0, this._currentPoint.y - 7, this._currentPoint.z + 30);
        }
        this._space = Math.abs(this._allBlocks[0][0].transform.position.z - this._allBlocks[this._colorID[this._colorID.length - 1]][0].transform.position.z);
        this.setRed();
        this.setPlayerColor();
        this.gameStart = false;
        this._playerAnim.play("Idle");
        this.nextPoint();
        this._radishFun.generateProps(this._allBlocks, this._colorID, this.owner, this.playerColor);
        this._radishFun.setColor(this._redColor, this._greenColor, this._blueColor);
    };
    Fiy.prototype.onpropsMove = function () {
        this._radishFun.propMovemax();
    };
    Fiy.prototype.setGreen = function () {
        var _this = this;
        Laya.BaseMaterial.load(this._greenUrl, Laya.Handler.create(this, function (mat) {
            for (var i = 0; i < _this._color - 1; i++) {
                _this._scsjObj[i].meshRenderer.material = mat;
            }
            _this._currentColor = _this._greenColor;
            Laya.timer.once(200, _this, _this.setBlue);
        }));
    };
    Fiy.prototype.setBlue = function () {
        var _this = this;
        Laya.BaseMaterial.load(this._blueUrl, Laya.Handler.create(this, function (mat) {
            for (var i = 0; i < _this._color - 1; i++) {
                _this._scsjObj[i].meshRenderer.material = mat;
            }
            _this._currentColor = _this._blueColor;
            Laya.timer.once(200, _this, _this.setRed);
        }));
    };
    Fiy.prototype.setRed = function () {
        var _this = this;
        Laya.BaseMaterial.load(this._redUrl, Laya.Handler.create(this, function (mat) {
            for (var i = 0; i < _this._color - 1; i++) { //排除终点
                _this._scsjObj[i].meshRenderer.material = mat;
            }
            _this._currentColor = _this._redColor;
            Laya.timer.once(200, _this, _this.setGreen);
        }));
    };
    /**避免下个与当前相同 */
    Fiy.prototype.RanInteger = function (_temp, x, y) {
        var isbool = true;
        var _trmpcolumn = 0;
        while (isbool) {
            _trmpcolumn = this._radishFun.getRndInteger(x, y);
            if (_trmpcolumn == _temp)
                isbool = true;
            else
                isbool = false;
        }
        return _trmpcolumn;
    };
    /**计算跳跃幅度 */
    Fiy.prototype.JumpMove = function (_angle, isEnd, isSater) {
        var _this = this;
        if (isEnd === void 0) { isEnd = false; }
        if (isSater === void 0) { isSater = false; }
        if (_angle == 45)
            this.CameraMove();
        var blockspoint = this._allBlocks[this._through][0].transform.position.z;
        this.height = this._allBlocks[this._through][0].transform.position.y + ((this._allBlocks[this._through][0].meshFilter.sharedMesh.bounds.getExtent().y * 2 * this._allBlocks[this._through][0].transform.localScaleY) / 2);
        var maxZ = blockspoint + ((this._allBlocks[this._through][0].meshFilter.sharedMesh.bounds.getExtent().x * 2 * this._allBlocks[this._through][0].transform.localScaleZ) / 2);
        var minZ = blockspoint - ((this._allBlocks[this._through][0].meshFilter.sharedMesh.bounds.getExtent().x * 2 * this._allBlocks[this._through][0].transform.localScaleZ) / 2);
        var juli = isEnd ? blockspoint : minZ; //((blockspoint - minZ < 1) && (maxZ - blockspoint < 1)) ? blockspoint : this.getRndInteger(minZ, maxZ - 1.5)
        isEnd ? this._endHeight = 0.2 : this._endHeight = 0.8;
        this._cubeMaxZ = maxZ;
        var pos = this._radishFun.GetLine(_angle, this.player
            .transform.position, new Laya.Vector3(this.player.transform.position.x, this.height, juli /* - Interval*/));
        this.a = pos.x;
        this.b = pos.y;
        this.c = pos.z;
        if (isSater)
            return;
        this._playerAnim.play("Jump 1");
        Laya.timer.frameOnce(10, this, function () {
            _this._playerAnim.play("Jump 2");
            Laya.timer.frameOnce(12, _this, function () {
                _this._playerAnim.play("Jump 3");
                Laya.timer.frameOnce(13, _this, function () {
                    _this._playerAnim.play("Loop");
                });
            });
        });
    };
    Fiy.prototype.CameraMove = function () {
        CameraMove_1.default.instance.CameraMove();
    };
    Fiy.prototype.onUpdate = function () {
        if (!this.gameStart)
            return;
        if (this._through - 1 == this._colorID[this._colorID.length - 1]) {
            console.log("结束");
            this._playerAnim.play("Victory");
            this.gameStart = false;
            return;
        }
        for (var i = 0; i < this._colorID.length; i++) {
            if (this._through == this._colorID[i]) {
                this._height = 1;
                this._section = FiyData_1.default._iniesection;
                break;
            }
            else {
                this._height = 7;
                this._section = FiyData_1.default._section;
            } //6.5
        }
        if (this._sensitivity == FiyData_1.default._JSspeed)
            this._TXJS.active = true;
        if (!this._isJump && !this._isparaglider) {
            if (this._isprop == null) {
                this.player.transform.localPositionY = this.height + this._endHeight;
                if (this._playerAnim.getControllerLayer()._currentPlayState.name.indexOf("Run") == -1)
                    this._playerAnim.play("Run");
            }
            this._radishFun.playMove(this._speed);
            this.Prop();
            this.Edge();
        }
        else if (!this._isparaglider && this._isJump)
            this.isJump();
        else
            this.Paraglider();
        Funmgr_1.default.instance.onschedule(this.player.transform.position.z, Math.floor(this._space));
        if (this.gameStart)
            CameraMove_1.default.instance.onMove();
        this.onPlayMoveX();
    };
    Fiy.prototype.Prop = function () {
        var _this = this;
        if (this._isprop != null) {
            if (this._radishFun.getDistance(this._isprop.transform.position, this.player.transform.position, 1.2, 2) && !this._isFound) {
                if (this._radishFun.getProp(this._isprop) == -1) {
                    console.log("道具错误");
                    return;
                }
                this._isFound = true;
                if (this._radishFun.getProp(this._isprop) == 1) {
                    this._speed = FiyData_1.default._JSspeed;
                    this._jsStaID = this._through;
                    if (!this._TXJS.active)
                        this._TXJS.active = true;
                    this._isAccelerate = true;
                    SoundMgr_1.default.ryw_instance.ryw_playSound("accelerate");
                }
                else if (this._radishFun.getProp(this._isprop) == 2) {
                    /**避免捡到滑翔伞时加速特效还在 */
                    this._isAccelerate = false;
                    if (this._TXJS.active)
                        this._TXJS.active = false;
                    this._sensitivity = FiyData_1.default._jumpMoveSpeed;
                    this._isparaglider = true;
                    this._speed = 0;
                    this._radishFun.ParagliderAin();
                    this._HxsStaID = this._through;
                    for (var i = 0; i < this._colorID.length; i++) {
                        if (this._colorID[i] > this._HxsStaID) {
                            this._HxsEndID = this._colorID[i] - 1;
                            break;
                        }
                    }
                    SoundMgr_1.default.ryw_instance.ryw_playSound("Paraglider");
                    setTimeout(function () {
                        _this._speed = FiyData_1.default._speed;
                    }, 550);
                }
            }
        }
    };
    Fiy.prototype.Edge = function () {
        if (Math.abs(this.player.transform.position.z - this._cubeMaxZ) < .5) {
            this._isJump = true;
            this._through++;
            for (var i = 0; i < this._colorID.length; i++) {
                if (this._through - 1 == this._colorID[i] && this._isColor) {
                    this._through == this._colorID[this._colorID.length - 1] ? this.JumpMove(45, true) : this.JumpMove(45);
                    var endColor = this.playerColor.skinnedMeshRenderer.material;
                    endColor.diffuseColor = this._currentColor;
                    this.setPlayerColor();
                    this._radishFun.setPropPoint(this._allBlocks, this.playerColor);
                    break;
                }
                else if (i == this._colorID.length - 1 && this._through - 1 != this._colorID[i]) {
                    this._through == this._colorID[this._colorID.length - 1] ? this.JumpMove(this.angle, true) : this.JumpMove(this.angle);
                }
            }
            if (this._allBlocks[this._through - 1][0].name.indexOf("sc_yp_03") != -1) {
                this._radishFun.pyScaleMax(this._allBlocks[this._through - 1][this.getPlayerID(this._through - 1)]);
                SoundMgr_1.default.ryw_instance.ryw_playSound("Dislike");
            }
            if (this._allBlocks[this._through - 1][0].name.indexOf("sc_cf_01") != -1 || this._allBlocks[this._through - 1][0].name.indexOf("sc_pd_01") != -1)
                SoundMgr_1.default.ryw_instance.ryw_playSound("Dislike2");
        }
    };
    Fiy.prototype.isJump = function () {
        this._sensitivity = FiyData_1.default._jumpMoveSpeed;
        if (this._isJumpNull)
            this.JumpNull();
        else
            this.Jump();
    };
    Fiy.prototype.Jump = function () {
        var _this = this;
        if (this.player.transform.position.y < this.height + this._endHeight) {
            this.player.transform.localPositionY = this.height + this._endHeight;
            for (var i = 0; i < this._allBlocks[this._through - 1].length; i++) {
                this._allBlocks[this._through - 1][i].active = false;
            }
            if (this._through == this._colorID[this._colorID.length - 1]) {
                CameraMove_1.default.instance.overMove();
                this._playerAnim.play("Victory");
                this.gameStart = false;
                return;
            }
            this._isJump = false;
            this._playerAnim.play("Run");
            this._sensitivity = FiyData_1.default._moveSpeed;
            if (this._jsStaID + 3 == this._through) {
                setTimeout(function () {
                    if (_this._TXJS.active)
                        _this._TXJS.active = false;
                }, 300);
            }
            this._isFound = false;
            if (this._jsStaID + 4 == this._through) {
                this._speed = FiyData_1.default._speed;
                this._isAccelerate = false;
                if (this._TXJS.active)
                    this._TXJS.active = false;
                this._isFound = false;
            }
            if (Math.abs(this.subPoint(this.player.transform.position, this._allBlocks[this._through][this.getPlayerID(this._through)].transform.position).x) > this._section && !this._isAccelerate) {
                for (var i = 0; i < this._allBlocks[this._through].length; i++) {
                    if (i != this.getPlayerID(this._through)) {
                        if (Math.abs(this.subPoint(this.player.transform.position, this._allBlocks[this._through][i].transform.position).x) < this._section) {
                            this.txQiuColor();
                            this._TX.transform.position = this.player.transform.position;
                            if (!this._TX.active)
                                this._TX.active = true;
                            this.player.active = false;
                            Laya.timer.once(500, this, this.txQiu);
                            this.gameStart = false;
                            Funmgr_1.default.instance.onGameOver();
                        }
                    }
                }
                this._isJumpNull = true;
                this._isJump = true;
                this._nextPoint = this.nextPoint();
                this._playerAnim.play("Loop");
                return;
            }
            var isbools = false;
            if (this._isAccelerate) {
                for (var i = 0; i < this._allBlocks[this._through].length; i++) {
                    if (Math.abs(this.subPoint(this.player.transform.position, this._allBlocks[this._through][i].transform.position).x) < this._section) {
                        isbools = true;
                    }
                }
                if (!isbools) {
                    this._isJumpNull = true;
                    this._isJump = true;
                    this._nextPoint = this.nextPoint();
                    this._playerAnim.play("Loop");
                    return;
                }
            }
            this._isColor = true;
            this._radishFun.playPoint(this._allBlocks[this._through][0]);
            this._isprop = this._radishFun.getPropsPoint(this._through, this._allBlocks);
            if (this._playerAnim.getControllerLayer()._currentPlayState.name.indexOf("Run") == -1)
                this._playerAnim.play("Run");
            if (!this._TXyun.active)
                this._TXyun.active = true;
            if (this._allBlocks[this._through][0].name.indexOf("sc_yp_03") != -1)
                this._radishFun.pyScaleMin(this._allBlocks[this._through][this.getPlayerID(this._through)]);
            this._radishFun.setBatter();
            Laya.timer.once(350, this, this.txYun);
            // this.gameStart = false
        }
        var z = this.player.transform.position.z + this._speed;
        var y = this.a * z * z + this.b * z + this.c;
        this.player.transform.position = new Laya.Vector3(this.player.transform.position.x, y, z);
    };
    Fiy.prototype.Paraglider = function () {
        if (this._playerAnim.getControllerLayer()._currentPlayState.name.indexOf("Fly") == -1)
            this._playerAnim.play("Fly");
        this._radishFun.playMove(this._speed, true);
        this._radishFun.setParagliderPoint();
        if (this._radishFun.ParagliderAims(this._HxsStaID, this._HxsEndID, this._allBlocks) != -1) {
            this._isparaglider = false;
            this._isFound = false;
            this._through = this._radishFun.ParagliderAims(this._HxsStaID, this._HxsEndID, this._allBlocks);
            for (var i = 0; i < this._colorID.length; i++) {
                if (this._through - 1 == this._colorID[i] && this._isColor)
                    this._isColor = false;
            }
            this.JumpMove(45, true);
        }
    };
    Fiy.prototype.subPoint = function (a, b) {
        var sub = new Laya.Vector3(-1000, -1000, -1000);
        Laya.Vector3.subtract(a, b, sub);
        return sub;
    };
    Fiy.prototype.txYun = function () {
        if (this._TXyun.active)
            this._TXyun.active = false;
    };
    Fiy.prototype.txQiu = function () {
        if (this._TX.active)
            this._TXQiu.active = false;
    };
    Fiy.prototype.txQiuColor = function () {
        if (this.onPlayerColor() == this._redColor) {
            this._TXQiu.particleSystem.startColorConstant = this._redColor;
            console.log("红色");
            return;
        }
        if (this.onPlayerColor() == this._greenColor) {
            this._TXQiu.particleSystem.startColorConstant = this._greenColor;
            console.log("绿色");
            return;
        }
        if (this.onPlayerColor() == this._blueColor) {
            this._TXQiu.particleSystem.startColorConstant = this._blueColor;
            console.log("蓝色");
            return;
        }
        this._TXQiu.particleSystem.startColorConstant = this._blueColor;
        return;
    };
    Fiy.prototype.nextPoint = function () {
        var blockspointZ = this._allBlocks[this._through + 1][0].transform.position.z;
        var minZ = blockspointZ - ((this._allBlocks[this._through + 1][0].meshFilter.sharedMesh.bounds.getExtent().z * 2 * this._allBlocks[this._through + 1][0].transform.localScaleZ) / 2);
        var blockspointY = this._allBlocks[this._through + 1][0].transform.position.y;
        var minY = blockspointY - ((this._allBlocks[this._through + 1][0].meshFilter.sharedMesh.bounds.getExtent().y * 2 * this._allBlocks[this._through + 1][0].transform.localScaleZ) / 2);
        var blockspointX = this._allBlocks[this._through + 1][0].transform.position.x;
        var minX = blockspointX - ((this._allBlocks[this._through + 1][0].meshFilter.sharedMesh.bounds.getExtent().x * 2 * this._allBlocks[this._through + 1][0].transform.localScaleZ) / 2);
        return new Laya.Vector3(minX, minY, minZ);
    };
    Fiy.prototype.JumpNull = function () {
        if ((this.player.transform.position.z > this._nextPoint.z && this.player.transform.position.y < this._nextPoint.y) || (this.player.transform.position.z > this._nextPoint.z && this.player.transform.position.y > this._nextPoint.y)) {
            this._TX.transform.position = this.player.transform.position;
            if (!this._TX.active)
                this._TX.active = true;
            this.txQiuColor();
            this.player.active = false;
            Laya.timer.once(500, this, this.txQiu);
            this.gameStart = false;
            Funmgr_1.default.instance.onGameOver();
            return;
        }
        var z = this.player.transform.position.z + this._speed;
        var _edge = this._radishFun.getPlayEdge(this._allBlocks[this._radishFun.getPlayPointEdge(this._allBlocks)]);
        if ((this.player.transform.position.x < _edge[0] && this.player.transform.position.x < _edge[1]) || (this.player.transform.position.x > _edge[0] && this.player.transform.position.x > _edge[1])) {
            this.onMoveRes();
        }
        var y1 = this.player.transform.position.y - this._speed;
        this.player.transform.position = new Laya.Vector3(this.player.transform.position.x, y1, z);
    };
    Fiy.prototype.ColumnInstantiate = function (column) {
        var obj = null;
        if (this._type == 0)
            obj = this.type_0;
        else if (this._type == 1)
            obj = this.type_1;
        else if (this._type == 2)
            obj = this.type_2;
        else
            obj = this.type_1;
        this._allBlocks[this._blocks] = [];
        this._typeheight = this._radishFun.getRndInteger(5, 7);
        this._heightSrray.push(this._typeheight);
        this._distance = this._radishFun.getRndInteger(22, 25);
        switch (column) {
            case 1:
                this._cube = Laya.Sprite3D.instantiate(obj, this.owner, false, new Laya.Vector3(0, this._currentPoint.y - this._typeheight, this._currentPoint.z + this._distance));
                this._allBlocks[this._blocks][0] = this._cube;
                this._sceneType == 1 ? this._radishFun.setSceneLB(this._cube.transform.position, this.owner) : this._sceneType == 2 ? this._radishFun.setSceneSan(this._cube.transform.position, this.owner, 1) : this._radishFun.setSceneSan(this._cube.transform.position, this.owner, 2);
                this._blocks++;
                this._currentPoint = new Laya.Vector3(0, this._currentPoint.y - 5, this._currentPoint.z + 20);
                break;
            case 2:
                this._cube = Laya.Sprite3D.instantiate(obj, this.owner, false, new Laya.Vector3(1.5, this._currentPoint.y - this._typeheight, this._currentPoint.z + this._distance));
                this._allBlocks[this._blocks][0] = this._cube;
                this._cube = Laya.Sprite3D.instantiate(obj, this.owner, false, new Laya.Vector3(-1.5, this._currentPoint.y - this._typeheight, this._currentPoint.z + this._distance));
                this._allBlocks[this._blocks][1] = this._cube;
                this._sceneType == 1 ? this._radishFun.setSceneLB(this._cube.transform.position, this.owner) : this._sceneType == 2 ? this._radishFun.setSceneSan(this._cube.transform.position, this.owner, 1) : this._radishFun.setSceneSan(this._cube.transform.position, this.owner, 2);
                this._blocks++;
                this._currentPoint = new Laya.Vector3(0, this._currentPoint.y - 5, this._currentPoint.z + 20);
                break;
            case 3:
                this._cube = Laya.Sprite3D.instantiate(obj, this.owner, false, new Laya.Vector3(3, this._currentPoint.y - this._typeheight, this._currentPoint.z + this._distance));
                this._allBlocks[this._blocks][0] = this._cube;
                this._cube = Laya.Sprite3D.instantiate(obj, this.owner, false, new Laya.Vector3(0, this._currentPoint.y - this._typeheight, this._currentPoint.z + this._distance));
                this._allBlocks[this._blocks][1] = this._cube;
                this._cube = Laya.Sprite3D.instantiate(obj, this.owner, false, new Laya.Vector3(-3, this._currentPoint.y - this._typeheight, this._currentPoint.z + this._distance));
                this._allBlocks[this._blocks][2] = this._cube;
                this._sceneType == 1 ? this._radishFun.setSceneLB(this._cube.transform.position, this.owner) : this._sceneType == 2 ? this._radishFun.setSceneSan(this._cube.transform.position, this.owner, 1) : this._radishFun.setSceneSan(this._cube.transform.position, this.owner, 2);
                this._blocks++;
                this._currentPoint = new Laya.Vector3(0, this._currentPoint.y - 5, this._currentPoint.z + 20);
                break;
        }
    };
    /**必须要的材质 */
    Fiy.prototype.onlyColorMat = function (obj) {
        var _this = this;
        var py = obj.numChildren != -1 ? obj.getChildByName("yp") : null;
        var endColor = py != null ? py.meshRenderer.material : null;
        if (this.onPlayerColor() == this._redColor) {
            Laya.BaseMaterial.load(this._redUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._redColor : null;
            }));
        }
        if (this.onPlayerColor() == this._greenColor) {
            Laya.BaseMaterial.load(this._greenUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._greenColor : null;
            }));
        }
        if (this.onPlayerColor() == this._blueColor) {
            Laya.BaseMaterial.load(this._blueUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._blueColor : null;
            }));
        }
    };
    /**剩余的材质随机 */
    Fiy.prototype.onExclude = function (obj, obj_) {
        var _this = this;
        if (obj_ === void 0) { obj_ = null; }
        var py = obj.numChildren != -1 ? obj.getChildByName("yp") : null;
        var endColor = py != null ? py.meshRenderer.material : null;
        var _py = obj_ != null ? obj_.numChildren != -1 ? obj_.getChildByName("yp") : null : null;
        var _endColor = _py != null ? _py.meshRenderer.material : null;
        if (this.onPlayerColor() == this._redColor) {
            this._radishFun.getRndInteger(1, 2) == 1 ? Laya.BaseMaterial.load(this._greenUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._greenColor : null;
                if (obj_ != null) {
                    Laya.BaseMaterial.load(_this._blueUrl, Laya.Handler.create(_this, function (mat) {
                        obj_.meshRenderer.material = mat;
                        _endColor != null ? _endColor.albedoColor = _this._blueColor : null;
                    }));
                }
            })) : Laya.BaseMaterial.load(this._blueUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._blueColor : null;
                if (obj_ != null) {
                    Laya.BaseMaterial.load(_this._greenUrl, Laya.Handler.create(_this, function (mat) {
                        obj_.meshRenderer.material = mat;
                        _endColor != null ? _endColor.albedoColor = _this._greenColor : null;
                    }));
                }
            }));
        }
        if (this.onPlayerColor() == this._greenColor) {
            this._radishFun.getRndInteger(1, 2) == 1 ? Laya.BaseMaterial.load(this._redUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._redColor : null;
                if (obj_ != null) {
                    Laya.BaseMaterial.load(_this._blueUrl, Laya.Handler.create(_this, function (mat) {
                        obj_.meshRenderer.material = mat;
                        _endColor != null ? _endColor.albedoColor = _this._blueColor : null;
                    }));
                }
            })) : Laya.BaseMaterial.load(this._blueUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._blueColor : null;
                if (obj_ != null) {
                    Laya.BaseMaterial.load(_this._redUrl, Laya.Handler.create(_this, function (mat) {
                        obj_.meshRenderer.material = mat;
                        _endColor != null ? _endColor.albedoColor = _this._redColor : null;
                    }));
                }
            }));
        }
        if (this.onPlayerColor() == this._blueColor) {
            this._radishFun.getRndInteger(1, 2) == 1 ? Laya.BaseMaterial.load(this._greenUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._blueColor : null;
                if (obj_ != null) {
                    Laya.BaseMaterial.load(_this._redUrl, Laya.Handler.create(_this, function (mat) {
                        obj_.meshRenderer.material = mat;
                        _endColor != null ? _endColor.albedoColor = _this._redColor : null;
                    }));
                }
            })) : Laya.BaseMaterial.load(this._redUrl, Laya.Handler.create(this, function (mat) {
                obj.meshRenderer.material = mat;
                endColor != null ? endColor.albedoColor = _this._redColor : null;
                if (obj_ != null) {
                    Laya.BaseMaterial.load(_this._greenUrl, Laya.Handler.create(_this, function (mat) {
                        obj_.meshRenderer.material = mat;
                        _endColor != null ? _endColor.albedoColor = _this._greenColor : null;
                    }));
                }
            }));
        }
    };
    Fiy.prototype.getPlayerID = function (_through) {
        for (var i = 0; i < this._allBlocks[_through].length; i++) {
            if (this._allBlocks[_through][i].meshRenderer.material.name.indexOf("sc_fg_01") != -1 && this.onPlayerColor() == this._blueColor) {
                return i;
            }
            if (this._allBlocks[_through][i].meshRenderer.material.name.indexOf("sc_fg_02") != -1 && this.onPlayerColor() == this._redColor) {
                return i;
            }
            if (this._allBlocks[_through][i].meshRenderer.material.name.indexOf("sc_fg_03") != -1 && this.onPlayerColor() == this._greenColor) {
                return i;
            }
        }
        return 0;
    };
    Fiy.prototype.setPlayerColor = function () {
        for (var i = 0; i < this._allBlocks.length; i++) {
            var isbool = false;
            for (var j = 0; j < this._colorID.length; j++) {
                if (i == this._colorID[j] && i <= this._colorID[j]) {
                    isbool = true;
                }
            }
            if (isbool)
                continue;
            if (this._allBlocks[i].length == 1) {
                this.onlyColorMat(this._allBlocks[i][0]);
            }
            if (this._allBlocks[i].length == 2) {
                var _trmpcolumn = this._radishFun.getRndInteger(1, 2);
                _trmpcolumn == 1 ? this.onlyColorMat(this._allBlocks[i][0]) : this.onlyColorMat(this._allBlocks[i][1]);
                _trmpcolumn == 1 ? this.onExclude(this._allBlocks[i][1]) : this.onExclude(this._allBlocks[i][0]);
            }
            if (this._allBlocks[i].length == 3) {
                var _trmpcolumn = this._radishFun.getRndInteger(0, 2);
                this.onlyColorMat(this._allBlocks[i][_trmpcolumn]);
                _trmpcolumn == 0 ? this.onExclude(this._allBlocks[i][1], this._allBlocks[i][2]) :
                    _trmpcolumn == 1 ? this.onExclude(this._allBlocks[i][0], this._allBlocks[i][2]) :
                        _trmpcolumn == 2 ? this.onExclude(this._allBlocks[i][0], this._allBlocks[i][1]) : this.onExclude(this._allBlocks[i][1], this._allBlocks[i][2]);
            }
        }
    };
    Fiy.prototype.onPlayMoveX = function () {
        if (this._moveOffiseX > 0) {
            if (this.player.transform.position.x >= FiyData_1.default._boundary)
                return;
            this.player.transform.position.x += this._sensitivity;
        }
        else if (this._moveOffiseX < 0) {
            if (this.player.transform.position.x <= -FiyData_1.default._boundary)
                return;
            this.player.transform.position.x -= this._sensitivity;
        }
        else {
            return;
        }
    };
    Fiy.prototype.onMoving = function (para) {
        this._moveOffiseX -= para / 100;
        //判断移动后是否到了上线
        if (this._moveOffiseX < 0 && this.player.transform.position.x + this._moveOffiseX < -3.2) {
            this._moveOffiseX = -3.2 - this.player.transform.position.x;
        }
        else if (this._moveOffiseX > 0 && this.player.transform.position.x + this._moveOffiseX > 3.2) {
            this._moveOffiseX = -this.player.transform.position.x + 3.2;
        }
    };
    Fiy.prototype.onMoveRes = function () {
        this._moveOffiseX = 0;
    };
    Fiy.prototype.onPlayerColor = function () {
        if (this.playerColor.skinnedMeshRenderer.material.name.indexOf("hm_body_01(Instance)") != -1) {
            var endColor = this.playerColor.skinnedMeshRenderer.material;
            if (this.ColorApproximate(endColor.diffuseColor, this._redColor)) {
                return this._redColor;
            }
            if (this.ColorApproximate(endColor.diffuseColor, this._greenColor)) {
                return this._greenColor;
            }
            if (this.ColorApproximate(endColor.diffuseColor, this._blueColor)) {
                return this._blueColor;
            }
        }
        console.log("色值错误");
        return new Laya.Vector4(1, 1, 1, 1);
    };
    Fiy.prototype.ColorApproximate = function (color_B, color_A) {
        var subVec = new Laya.Vector4(0, 0, 0, 0);
        Laya.Vector4.subtract(color_A, color_B, subVec);
        if (subVec.x < 0.002 && subVec.w < 0.002 && subVec.y < 0.002 && subVec.z < 0.002)
            return true;
        return false;
    };
    Fiy.prototype.ondestroyScene = function () {
        Fiy.instance = null;
        Laya.timer.clear(this, this.setBlue);
        Laya.timer.clear(this, this.setGreen);
        Laya.timer.clear(this, this.setRed);
        Laya.timer.clear(this, this.txYun);
        Laya.timer.clear(this, this.txQiu);
        if (Funmgr_1.default.instance.Tween_0 != null)
            Laya.Tween.clear(Funmgr_1.default.instance.Tween_0);
        if (Funmgr_1.default.instance.Tween_1 != null)
            Laya.Tween.clear(Funmgr_1.default.instance.Tween_1);
        if (CameraMove_1.default.instance.tween_5 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_5);
        if (CameraMove_1.default.instance.tween_6 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_6);
        if (CameraMove_1.default.instance.tween_7 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_7);
        if (CameraMove_1.default.instance.tween_8 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_8);
        if (CameraMove_1.default.instance.tween_1 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_1);
        if (CameraMove_1.default.instance.tween_2 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_2);
        if (CameraMove_1.default.instance.tween_3 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_3);
        if (CameraMove_1.default.instance.tween_4 != null)
            Laya.Tween.clear(CameraMove_1.default.instance.tween_4);
        this.scene.removeSelf();
        this.scene.destroy(true);
    };
    Fiy.instance = null; //单例
    return Fiy;
}(Laya.Script));
exports.default = Fiy;
},{"../../Mgr/SoundMgr":29,"../../User/User":55,"../AppRun":33,"../Data/FiyData":34,"./CameraMove":35,"./Funmgr":38,"./Radish":40}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CameraMove_1 = require("./CameraMove");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var MainViewTemplate_1 = require("../../View/TemplateViews/Main/MainViewTemplate");
var User_1 = require("../../User/User");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var Funmgr = /** @class */ (function (_super) {
    __extends(Funmgr, _super);
    function Funmgr() {
        return _super.call(this) || this;
    }
    Object.defineProperty(Funmgr, "Instance", {
        get: function () {
            return Funmgr.instance;
        },
        enumerable: true,
        configurable: true
    });
    Funmgr.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        Funmgr.instance = this;
        this.batter = this.ryw__centerZone.getChildByName("batter");
        this.nudge = this.owner.getChildByName("Nudge");
        this.batterEndText = this.batter.getChildByName("EndText");
        this.schedule = this.ryw__centerZone.getChildByName("schedule");
        this.scheduleH = this.schedule.getChildByName("scheduleH");
        this.scheduleH.width = 1;
        this.schedule_sta = this.schedule.getChildByName("sta").getChildByName("staText");
        this.schedule_end = this.schedule.getChildByName("End").getChildByName("EndText");
        this.end = this.schedule.getChildByName("End").getChildByName("end");
        this.schedule_sta.value = String(User_1.default.ryw_getLeveNum());
        this.schedule_end.value = String(User_1.default.ryw_getLeveNum() + 1);
        this.sho = this.nudge.getChildByName("sho");
        this.money = this.ryw__centerZone.getChildByName("MoneyInfo");
        this.money.visible = false;
        this.Tween_0 = Laya.Tween.to(this.sho, { x: 350 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            this.Tween_1 = Laya.Tween.to(this.sho, { x: 80 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                this.onShoMove();
            }));
        }));
    };
    Funmgr.prototype.onUpdate = function (){
        if(sessionStorage.getItem("NudgeDel") == 1){
            sessionStorage.removeItem("NudgeDel");
            if(this.owner != null)
            this.owner.getChildByName("Nudge").visible=false;
        }
    }
    Funmgr.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this.onShoMove();
    };
    Funmgr.prototype.onShoMove = function () {
        var _this = this;
            this.Tween_0 = Laya.Tween.to(this.sho, { x: 350 }, 500, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            _this.Tween_1 = Laya.Tween.to(_this.sho, { x: 80 }, 500, Laya.Ease.linearIn, Laya.Handler.create(_this, function () {
                _this.onShoMove();
            }));
        }));
        
    };
    Funmgr.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__startBtn.on(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        EventMgr_1.default.ryw_instance.ryw_regEvemt(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
    };
    Funmgr.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__startBtn.off(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        EventMgr_1.default.ryw_instance.ryw_removeEvent(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
    };
    Funmgr.prototype.ryw_onStartBtn = function () {
        _super.prototype.ryw_onStartBtn.call(this);
        this.ryw__startBtn.visible = false;
        this.owner.getChildByName("Nudge").visible=true;
        if (Funmgr.instance.Tween_0 != null)
            Laya.Tween.clear(Funmgr.instance.Tween_0);
        if (Funmgr.instance.Tween_1 != null)
            Laya.Tween.clear(Funmgr.instance.Tween_1);
        CameraMove_1.default.instance.onStartGame();
    };
    Funmgr.prototype.onGameOver = function () {
        SoundMgr_1.default.ryw_instance.ryw_playSound("death");
        setTimeout(function () {
            ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView, null, function () {
                ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_MainView);
            });
        }, 500);
    };
    Funmgr.prototype.onGamewinOver = function () {
        setTimeout(function () {
            ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_GameWinView, null, function () {
                ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_MainView);
            });
        }, 500);
    };
    Funmgr.prototype.onbatter = function (value) {
        if (this.batter.visible == false)
            this.batter.visible = true;
        this.batterEndText.value = "x" + String(value);
    };
    Funmgr.prototype.onschedule = function (current, TotalLength) {
        this.scheduleH.width = (current / TotalLength) * 250;
        if (current / TotalLength > 0.98)
            this.end.visible = false;
    };
    Funmgr.instance = null; //单例
    return Funmgr;
}(MainViewTemplate_1.default));
exports.default = Funmgr;
},{"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../Mgr/SoundMgr":29,"../../Mgr/ViewMgr":30,"../../User/User":55,"../../View/TemplateViews/Main/MainViewTemplate":80,"./CameraMove":35}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fiy_1 = require("./Fiy");
var MouseInput = /** @class */ (function (_super) {
    __extends(MouseInput, _super);
    function MouseInput() {
        var _this = _super.call(this) || this;
        _this._centerPoint = new Laya.Vector2(0, 0);
        _this._isBool = false;
        return _this;
    }
    MouseInput.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        console.log("启动");
        this._ownerSp.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this._ownerSp.on(Laya.Event.MOUSE_UP, this, this.onUp);
        //this._ownerSp.on(Laya.Event.MOUSE_MOVE, this, this.onMove)
    };
    MouseInput.prototype.onUpdate = function () {
        if (!this._isBool || Fiy_1.default.instance == null)
            return;
        var mouseLocalPoint = this._ownerSp.globalToLocal(new Laya.Point(this._ownerSp.mouseX, this._ownerSp.mouseY));
        var moveX = mouseLocalPoint.x - this._centerPoint.x;
        if (moveX != 0 && this._centerPoint.x != 0) {
            this._centerPoint.x = mouseLocalPoint.x;
            Fiy_1.default.instance.onMoving(moveX);
        }
        else {
            Fiy_1.default.instance.onMoveRes();
        }
    };
    MouseInput.prototype.onDestroy = function () {
        this._ownerSp.off(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this._ownerSp.off(Laya.Event.MOUSE_UP, this, this.onUp);
    };
    MouseInput.prototype.onUp = function () {
        sessionStorage.setItem("NudgeDel",1);
        Fiy_1.default.instance.onMoveRes();
        this._isBool = false;
    };
    MouseInput.prototype.onDown = function () {
        sessionStorage.setItem("NudgeDel",1);
        var point = this._ownerSp.globalToLocal(new Laya.Point(this._ownerSp.mouseX, this._ownerSp.mouseY));
        this._centerPoint = new Laya.Vector2(point.x, point.y);
        this._isBool = true;
    };
    return MouseInput;
}(Laya.Script));
exports.default = MouseInput;
},{"./Fiy":37}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Fiy_1 = require("./Fiy");
var CameraMove_1 = require("./CameraMove");
var Funmgr_1 = require("./Funmgr");
var ToonShadingMaterial_1 = require("./ToonShadingMaterial");
var blockMatEnum;
(function (blockMatEnum) {
    blockMatEnum["_red"] = "sc_fg_02";
    blockMatEnum["_green"] = "sc_fg_03";
    blockMatEnum["_blue"] = "sc_fg_01";
})(blockMatEnum || (blockMatEnum = {}));
var Radish = /** @class */ (function (_super) {
    __extends(Radish, _super);
    function Radish() {
        var _this = _super.call(this) || this;
        _this._batter = 0;
        _this._redColor = new Laya.Vector4(251 / 255, 127 / 255, 195 / 255, 255 / 255);
        _this._greenColor = new Laya.Vector4(24 / 255, 203 / 255, 32 / 255, 255 / 255);
        _this._blueColor = new Laya.Vector4(65 / 255, 87 / 255, 233 / 255, 255 / 255);
        _this._allprops = new Array();
        return _this;
    }
    Radish.prototype.setPrpos = function (_shoes, _lightning, _paraglider, _player, _paragliderD) {
        this._shoes = _shoes;
        this._lightning = _lightning;
        this._paraglider = _paraglider;
        this._player = _player;
        this._paragliderD = _paragliderD;
    };
    Radish.prototype.setColor = function (_redColor, _greenColor, _blueColor) {
        this._redColor = _redColor;
        this._greenColor = _greenColor;
        this._blueColor = _blueColor;
    };
    Radish.prototype.setCJ = function (_san, _san1, _san2) {
        this._san = _san;
        this._san_01 = _san1;
        this._san_02 = _san2;
    };
    Radish.prototype.getAllBlocksLeght = function (_allBlocks, _colorID) {
        var leght = 0;
        for (var i = 0; i < _allBlocks.length; i++) {
            var isbool = false;
            for (var j = 0; j < _colorID.length; j++) {
                if (i == _colorID[j] || i == 0)
                    isbool = true;
            }
            if (!isbool)
                leght++;
        }
        return leght;
    };
    Radish.prototype.getBlockID = function (_allBlocks, _colorID) {
        var leght = [];
        for (var i = 0; i < _allBlocks.length; i++) {
            var isbool = false;
            for (var j = 0; j < _colorID.length; j++) {
                if (i == _colorID[j] || i == 0)
                    isbool = true;
            }
            if (!isbool)
                leght.push(i);
        }
        return leght;
    };
    Radish.prototype.generateProps = function (_allBlocks, _colorID, parentNode, playerColor) {
        var leght = this.getBlockID(_allBlocks, _colorID);
        var diff = 0;
        var propid = 0;
        for (var i = 0; i < _colorID.length - 1; i++) {
            var propsPoint = 0;
            if (_colorID[i + 1] - _colorID[i] >= 5)
                propsPoint = this.ranInteger(diff, 1, 3);
            else if (_colorID[i + 1] - _colorID[i] <= 4 && _colorID[i + 1] - _colorID[i] != 1)
                propsPoint = this.ranInteger(diff, 1, 2);
            if (propsPoint == 0)
                continue;
            propsPoint >= leght.length ? propsPoint = leght.length - 1 : propsPoint = propsPoint;
            diff = propsPoint;
            var propsId = this.ranInteger(propid, 1, 2);
            propid = propsId;
            var point = _allBlocks[_colorID[i] + propsPoint][0].transform.position;
            var _blockBox = this.getBlockMinMax(_allBlocks[_colorID[i] + propsPoint][0]);
            var obj = null;
            switch (propsId) {
                case 1:
                    obj = Laya.Sprite3D.instantiate(this._shoes, parentNode, false, new Laya.Vector3(point.x, _blockBox[1].y + .3, point.z));
                    break;
                case 3:
                    obj = Laya.Sprite3D.instantiate(this._lightning, parentNode, false, new Laya.Vector3(point.x, _blockBox[1].y + .3, point.z));
                    break;
                case 2:
                    obj = Laya.Sprite3D.instantiate(this._paraglider, parentNode, false, new Laya.Vector3(point.x, _blockBox[1].y + .3, point.z));
                    break;
                default: break;
            }
            this._allprops.push(obj);
        }
        this.setPropPoint(_allBlocks, playerColor);
        this.propMovemax();
    };
    Radish.prototype.setPropPoint = function (_allBlocks, playerColor) {
        for (var i = 0; i < _allBlocks.length; i++) {
            for (var j = 0; j < this._allprops.length; j++) {
                if (this.getDistanceDiff(_allBlocks[i][0].transform.position, this._allprops[j].transform.position)) {
                    for (var k = 0; k < _allBlocks[i].length; k++) {
                        if (_allBlocks[i][k].meshRenderer.material.name.indexOf(this.getBlockMatStr(playerColor)) != -1) {
                            this._allprops[j].transform.position = new Laya.Vector3(_allBlocks[i][k].transform.position.x, this._allprops[j].transform.position.y, this._allprops[j].transform.position.z);
                        }
                    }
                }
            }
        }
    };
    Radish.prototype.getBlockMatStr = function (playerColor) {
        if (playerColor.skinnedMeshRenderer.material.name.indexOf("hm_body_01(Instance)") != -1) {
            var endColor = playerColor.skinnedMeshRenderer.material;
            if (this.ColorApproximate(endColor.diffuseColor, this._redColor)) {
                return blockMatEnum._red;
            }
            if (this.ColorApproximate(endColor.diffuseColor, this._greenColor)) {
                return blockMatEnum._green;
            }
            if (this.ColorApproximate(endColor.diffuseColor, this._blueColor)) {
                return blockMatEnum._blue;
            }
        }
        blockMatEnum._red;
    };
    Radish.prototype.ColorApproximate = function (color_B, color_A) {
        var subVec = new Laya.Vector4(0, 0, 0, 0);
        Laya.Vector4.subtract(color_A, color_B, subVec);
        if (subVec.x < 0.002 && subVec.w < 0.002 && subVec.y < 0.002 && subVec.z < 0.002)
            return true;
        return false;
    };
    Radish.prototype.setSceneSan = function (point, parentNode, id) {
        var p = new Laya.Vector3(0, 19.75, -66.62); //方块1.5 -16.6  66.62 
        this._san_0 == null ? p = new Laya.Vector3(0, 19.75, -66.62) : p = this._san_0.transform.position;
        id == 1 ? this._san_0 = Laya.Sprite3D.instantiate(this._san_01, parentNode, false, new Laya.Vector3(1.5, p.y - 16.6, p.z + 66.62)) : this._san_0 = Laya.Sprite3D.instantiate(this._san_02, parentNode, false, new Laya.Vector3(1.5, p.y - 16.6, p.z + 66.62));
    };
    Radish.prototype.setSceneLB = function (point, parentNode) {
        var p = new Laya.Vector3(0, -15 + 16.9, 1.6 - 72.1); //new Laya.Vector3(0, 19.75, -66.62)//方块1.5 -16.6  66.62 
        this._san_0 == null ? p = new Laya.Vector3(0, -15 + 16.9, 1.6 - 72.1) : p = this._san_0.transform.position;
        this._san_0 = Laya.Sprite3D.instantiate(this._san, parentNode, false, new Laya.Vector3(0, p.y - 17.5, p.z + 72.1));
    };
    Radish.prototype.setBatter = function () {
        this._batter += 1;
        Funmgr_1.default.instance.onbatter(this._batter);
    };
    Radish.prototype.getPropsPoint = function (_through, _allBlocks) {
        for (var i = 0; i < this._allprops.length; i++) {
            if (this.getPropBlock(_allBlocks, this._allprops[i]) == _through) {
                return this._allprops[i];
            }
        }
        return null;
    };
    Radish.prototype.getPropBlock = function (_allBlocks, props) {
        for (var i = 0; i < _allBlocks.length; i++) {
            if (this.getDistanceDiff(_allBlocks[i][0].transform.position, props.transform.position)) {
                return i;
            }
        }
        return -1;
    };
    Radish.prototype.getProp = function (prop) {
        if (prop.name.indexOf("pr_xz_01") != -1)
            return 1;
        if (prop.name.indexOf("pr_hxs_01") != -1)
            return 2;
        if (prop.name.indexOf("pr_sd_01") != -1)
            return 3;
        console.log("没有道具");
        return -1;
    };
    Radish.prototype.setParagliderPoint = function () {
        this._paragliderD.transform.position = new Laya.Vector3(this._player.transform.position.x, this._player.transform.position.y + 1.027, this._player.transform.position.z + 0.967);
    };
    Radish.prototype.ParagliderAin = function () {
        CameraMove_1.default.Instance.onParagliderAin();
        Laya.Tween.to(this._player.transform, { localPositionY: this._player.transform.position.y + 8 }, 500);
    };
    Radish.prototype.playPoint = function (_block) {
        var y = this.getBlockMinMax(_block)[1].y;
        this._player.transform.position.y = y + 0.6;
    };
    Radish.prototype.playMove = function (_speed, hxs) {
        if (hxs === void 0) { hxs = false; }
        if (_speed == 0)
            return;
        var y = 0;
        if (hxs)
            y = 0.05;
        var z = this._player.transform.position.z + _speed;
        this._player.transform.position = new Laya.Vector3(this._player.transform.position.x, this._player.transform.position.y - y, z);
    };
    Radish.prototype.getPlayPointEdge = function (_allBlocks) {
        var diff = 0;
        var diffID = -1;
        for (var i = 0; i < _allBlocks.length; i++) {
            if (diff == 0) {
                diff = this.getBlockDiff(_allBlocks[i][0]).z;
                diffID = i;
            }
            else {
                if (this.getBlockDiff(_allBlocks[i][0]).z < diff) {
                    diff = this.getBlockDiff(_allBlocks[i][0]).z;
                    diffID = i;
                }
            }
        }
        return diffID;
    };
    Radish.prototype.getPlayEdge = function (_Block) {
        switch (_Block.length) {
            case 1: if (this._player.transform.position.x > this.getBlockMinMax(_Block[0])[1].x)
                return [this.getBlockMinMax(_Block[0])[1].x, -10];
            else
                return [this.getBlockMinMax(_Block[0])[0].x, -10];
            case 2: if (this._player.transform.position.x > this.getBlockMinMax(_Block[0])[1].x)
                return [this.getBlockMinMax(_Block[0])[1].x, -10];
            else if (this._player.transform.position.x > this.getBlockMinMax(_Block[1])[1].x && this._player.transform.position.x < this.getBlockMinMax(_Block[0])[0].x)
                return [this.getBlockMinMax(_Block[0])[1].x, this.getBlockMinMax(_Block[1])[0].x];
            else
                return [-10, this.getBlockMinMax(_Block[1])[0].x];
            case 3: if (this._player.transform.position.x > this.getBlockMinMax(_Block[0])[1].x)
                return [this.getBlockMinMax(_Block[0])[1].x, -10];
            else if (this._player.transform.position.x > this.getBlockMinMax(_Block[1])[1].x && this._player.transform.position.x < this.getBlockMinMax(_Block[0])[0].x)
                return [this.getBlockMinMax(_Block[0])[1].x, this.getBlockMinMax(_Block[1])[0].x];
            else if (this._player.transform.position.x > this.getBlockMinMax(_Block[2])[1].x && this._player.transform.position.x < this.getBlockMinMax(_Block[1])[0].x)
                return [this.getBlockMinMax(_Block[1])[1].x, this.getBlockMinMax(_Block[2])[0].x];
            else
                return [-10, this.getBlockMinMax(_Block[2])[0].x];
            default: break;
        }
        return [0, 0];
    };
    Radish.prototype.getBlockDiff = function (point) {
        var diffpoint = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.subtract(this._player.transform.position, point, diffpoint);
        diffpoint = new Laya.Vector3(Math.abs(diffpoint.x), Math.abs(diffpoint.y), Math.abs(diffpoint.z));
        return diffpoint;
    };
    Radish.prototype.ParagliderAims = function (staID, endID, _allBlocks) {
        if (endID >= _allBlocks.length - 1)
            endID = _allBlocks.length - 2;
        if (this.getDistanceDiff(this._player.transform.position, _allBlocks[endID][0].transform.position)) {
            return endID;
        }
        return -1;
    };
    Radish.prototype.getDistance = function (point_A, point_B, diff, diffZ) {
        var diffpoint = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.subtract(point_A, point_B, diffpoint);
        if (diffpoint.x > diff || diffpoint.x < -diff || diffpoint.y > diff || diffpoint.y < -diff || diffpoint.z > diff || diffpoint.z < -diffZ)
            return false;
        return true;
    };
    Radish.prototype.getDistanceDiff = function (point_A, point_B, differ) {
        if (differ === void 0) { differ = 0.3; }
        var diff = new Laya.Vector3(0, 0, 0);
        Laya.Vector3.subtract(point_A, point_B, diff);
        if (diff.z > differ || diff.z < -differ)
            return false;
        return true;
    };
    Radish.prototype.ranInteger = function (_temp, x, y) {
        var isbool = true;
        var _trmpcolumn = 0;
        while (isbool) {
            _trmpcolumn = this.getRndInteger(x, y);
            if (_trmpcolumn == _temp)
                isbool = true;
            else
                isbool = false;
        }
        return _trmpcolumn;
    };
    Radish.prototype.getBlockMinMax = function (_block) {
        var blockspointX = _block.transform.position.x;
        var blockspointY = _block.transform.position.y;
        var blockspointZ = _block.transform.position.z;
        var maxX = blockspointX + ((_block.meshFilter.sharedMesh.bounds.getExtent().x * 2 * _block.transform.localScaleX) / 2);
        var minX = blockspointX - ((_block.meshFilter.sharedMesh.bounds.getExtent().x * 2 * _block.transform.localScaleX) / 2);
        var maxY = blockspointY + ((_block.meshFilter.sharedMesh.bounds.getExtent().y * 2 * _block.transform.localScaleY) / 2);
        var minY = blockspointY - ((_block.meshFilter.sharedMesh.bounds.getExtent().y * 2 * _block.transform.localScaleY) / 2);
        var maxZ = blockspointZ + ((_block.meshFilter.sharedMesh.bounds.getExtent().z * 2 * _block.transform.localScaleZ) / 2);
        var minZ = blockspointZ - ((_block.meshFilter.sharedMesh.bounds.getExtent().z * 2 * _block.transform.localScaleZ) / 2);
        var min = new Laya.Vector3(minX, minY, minZ);
        var max = new Laya.Vector3(maxX, maxY, maxZ);
        return new Array(min, max);
    };
    Radish.prototype.getBlocksDis = function (_blocks, _colorID) {
        for (var i = 0; i < _colorID.length; i++) {
            if (_blocks == _colorID[i])
                return true;
        }
        return false;
    };
    Radish.prototype.GetLine = function (angle, pointA, pointB) {
        var m = pointA.z; //-49
        var n = pointA.y; //3
        var p = pointB.z; //-39
        var q = pointB.y; //7
        var x = (Math.tan(angle) / (m - p)) - ((n - q) / ((m - p) * (m - p)));
        var y = ((n - q) / (m - p)) - ((m + p) * x);
        var z = n - x * m * m - y * m;
        return new Laya.Vector3(x, y, z);
    };
    Radish.prototype.getRndInteger = function (min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    };
    Radish.prototype.pyScaleMin = function (py) {
        Laya.Tween.to(py.transform, { localScaleY: 0.9 }, 80);
    };
    Radish.prototype.pyScaleMax = function (py) {
        Laya.Tween.to(py.transform, { localScaleY: 1.02 }, 80);
    };
    Radish.prototype.propMovemax = function () {
        var _this = this;
        if (!Fiy_1.default.instance.gameStart)
            return;
        var _loop_1 = function (i) {
            obj = this_1._allprops[i].getChildByName("prop");
            Laya.Tween.to(obj.transform, { localPositionY: 0.75 }, 800, Laya.Ease.linearIn, Laya.Handler.create(this_1, function () {
                if (i == _this._allprops.length - 1)
                    _this.propMovemin();
            }));
        };
        var this_1 = this, obj;
        for (var i = 0; i < this._allprops.length; i++) {
            _loop_1(i);
        }
    };
    Radish.prototype.propMovemin = function () {
        var _this = this;
        if (!Fiy_1.default.instance.gameStart)
            return;
        var _loop_2 = function (i) {
            obj = this_2._allprops[i].getChildByName("prop");
            Laya.Tween.to(obj.transform, { localPositionY: 0 }, 800, Laya.Ease.linearIn, Laya.Handler.create(this_2, function () {
                if (i == _this._allprops.length - 1)
                    _this.propMovemax();
            }));
        };
        var this_2 = this, obj;
        for (var i = 0; i < this._allprops.length; i++) {
            _loop_2(i);
        }
    };
    Radish.prototype.InitMaterial = function (_mesh) {
        ToonShadingMaterial_1.default.initShader();
        var mat = new ToonShadingMaterial_1.default();
        mat.diffuseColor = this._redColor;
        mat.outlineColor = new Laya.Vector4(1, 1, 1, 1); //描边色
        mat.SpecColor = new Laya.Vector4(0, 0, 0, 1);
        mat.SpecColorIntensity = 0.1;
        mat.Gloss = 0.3;
        mat.outlineWidth = 0.002;
        mat.name = "hm_body_01(Instance)";
        _mesh.skinnedMeshRenderer.material = mat;
    };
    return Radish;
}(Laya.Script));
exports.default = Radish;
},{"./CameraMove":35,"./Fiy":37,"./Funmgr":38,"./ToonShadingMaterial":41}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ToonShadingMaterial = /** @class */ (function (_super) {
    __extends(ToonShadingMaterial, _super);
    function ToonShadingMaterial() {
        var _this = _super.call(this) || this;
        _this.setShaderName("ToonShadingShader");
        _this._shaderValues.setNumber(ToonShadingMaterial.OUTLINEWIDTH, 0.01581197);
        _this._shaderValues.setNumber(ToonShadingMaterial.OUTLINELIGHTNESS, 1);
        _this._shaderValues.setVector(ToonShadingMaterial.OUTLINECOLOR, new Laya.Vector4(1.0, 1.0, 1.0, 1.0));
        return _this;
    }
    ToonShadingMaterial.__init__ = function () {
        //MultiplePassOutlineMaterial.SHADERDEFINE_ALBEDOTEXTURE = MultiplePassOutlineMaterial.shaderDefines.registerDefine("ALBEDOTEXTURE");
    };
    Object.defineProperty(ToonShadingMaterial.prototype, "albedoTexture", {
        get: function () {
            return this._shaderValues.getTexture(ToonShadingMaterial.ALBEDOTEXTURE);
        },
        set: function (value) {
            // if (value)
            //     this._defineDatas.add(MultiplePassOutlineMaterial.SHADERDEFINE_ALBEDOTEXTURE);
            // else
            //     this._defineDatas.remove(MultiplePassOutlineMaterial.SHADERDEFINE_ALBEDOTEXTURE);
            this._shaderValues.setTexture(ToonShadingMaterial.ALBEDOTEXTURE, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "diffuseColor", {
        get: function () {
            return this._shaderValues.getVector(ToonShadingMaterial.DIFFUSECOLOR);
        },
        set: function (value) {
            this._shaderValues.setVector(ToonShadingMaterial.DIFFUSECOLOR, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "outlineColor", {
        get: function () {
            return this._shaderValues.getVector(ToonShadingMaterial.OUTLINECOLOR);
        },
        set: function (value) {
            this._shaderValues.setVector(ToonShadingMaterial.OUTLINECOLOR, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "outlineWidth", {
        get: function () {
            return this._shaderValues.getNumber(ToonShadingMaterial.OUTLINEWIDTH);
        },
        set: function (value) {
            value = Math.max(0.0, Math.min(0.05, value));
            this._shaderValues.setNumber(ToonShadingMaterial.OUTLINEWIDTH, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "outlineLightness", {
        get: function () {
            return this._shaderValues.getNumber(ToonShadingMaterial.OUTLINELIGHTNESS);
        },
        set: function (value) {
            value = Math.max(0.0, Math.min(1.0, value));
            this._shaderValues.setNumber(ToonShadingMaterial.OUTLINELIGHTNESS, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "SpecColor", {
        get: function () {
            return this._shaderValues.getVector(ToonShadingMaterial.SPECCOLOR);
        },
        set: function (value) {
            this._shaderValues.setVector(ToonShadingMaterial.SPECCOLOR, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "SpecColorIntensity", {
        get: function () {
            return this._shaderValues.getNumber(ToonShadingMaterial.SPECCOLORINTENSITY);
        },
        set: function (value) {
            this._shaderValues.setNumber(ToonShadingMaterial.SPECCOLORINTENSITY, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToonShadingMaterial.prototype, "Gloss", {
        get: function () {
            return this._shaderValues.getNumber(ToonShadingMaterial.GLOSS);
        },
        set: function (value) {
            this._shaderValues.setNumber(ToonShadingMaterial.GLOSS, value);
        },
        enumerable: true,
        configurable: true
    });
    ToonShadingMaterial.initShader = function () {
        ToonShadingMaterial.__init__();
        var attributeMap = {
            'a_Position': Laya.VertexMesh.MESH_POSITION0,
            'a_Normal': Laya.VertexMesh.MESH_NORMAL0,
            'a_Texcoord0': Laya.VertexMesh.MESH_TEXTURECOORDINATE0,
            'a_BoneWeights': Laya.VertexMesh.MESH_BLENDWEIGHT0,
            'a_BoneIndices': Laya.VertexMesh.MESH_BLENDINDICES0,
        };
        var uniformMap = {
            'u_Bones': Laya.Shader3D.PERIOD_CUSTOM,
            'u_MvpMatrix': Laya.Shader3D.PERIOD_SPRITE,
            'u_WorldMat': Laya.Shader3D.PERIOD_SPRITE,
            'u_OutlineWidth': Laya.Shader3D.PERIOD_MATERIAL,
            'u_OutlineColor': Laya.Shader3D.PERIOD_MATERIAL,
            'u_OutlineLightness': Laya.Shader3D.PERIOD_MATERIAL,
            'u_AlbedoTexture': Laya.Shader3D.PERIOD_MATERIAL,
            'u_DiffuseColor': Laya.Shader3D.PERIOD_MATERIAL,
            'u_CameraPos': laya.d3.shader.Shader3D.PERIOD_CAMERA,
            'u_DirectionLight.Color': laya.d3.shader.Shader3D.PERIOD_SCENE,
            'u_DirectionLight.Direction': laya.d3.shader.Shader3D.PERIOD_SCENE,
            'u_Gloss': Laya.Shader3D.PERIOD_MATERIAL,
            'u_SpecColorIntensity': Laya.Shader3D.PERIOD_MATERIAL,
            'u_SpecColor': Laya.Shader3D.PERIOD_MATERIAL,
        };
        var customShader = Laya.Shader3D.add("ToonShadingShader");
        var subShader = new Laya.SubShader(attributeMap, uniformMap, Laya.SkinnedMeshSprite3D.shaderDefines, Laya.BaseMaterial.shaderDefines);
        customShader.addSubShader(subShader);
        var vs1 = "\n        #include \"Lighting.glsl\"\n\n        attribute vec4 a_Position;\n        attribute vec3 a_Normal;\n        \n        uniform mat4 u_MvpMatrix;\n        uniform float u_OutlineWidth;\n\n        #ifdef BONE\n            attribute vec4 a_BoneIndices;\n            attribute vec4 a_BoneWeights;\n            const int c_MaxBoneCount = 24;\n            uniform mat4 u_Bones[c_MaxBoneCount];\n        #endif\n        \n        void main()\n        { \n            vec4 position = vec4(a_Position.xyz + a_Normal * u_OutlineWidth, 1.0);\n            #ifdef BONE\n                mat4 skinTransform = mat4(0.0);\n                skinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n                skinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n                skinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n                skinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n                position = skinTransform * position;\n                gl_Position = u_MvpMatrix * position;\n            #else\n                gl_Position = u_MvpMatrix * position;\n            #endif\n            gl_Position=remapGLPositionZ(gl_Position);\n        }\n\n        ";
        var ps1 = "\n        #ifdef FSHIGHPRECISION\n            precision highp float;\n        #else\n            precision mediump float;\n        #endif\n\n        uniform vec4 u_OutlineColor;\n        uniform float u_OutlineLightness;\n    \n        void main()\n        {\n           vec3 finalColor = u_OutlineColor.rgb * u_OutlineLightness;\n           gl_FragColor = vec4(finalColor,0.0);\n        }\n\n        ";
        var pass1 = subShader.addShaderPass(vs1, ps1);
        pass1.renderState.cull = Laya.RenderState.CULL_FRONT;
        var vs2 = "\n        #include \"Lighting.glsl\"\n\n        attribute vec4 a_Position;\n        attribute vec2 a_Texcoord0;\n        \n        uniform mat4 u_MvpMatrix;\n        uniform mat4 u_WorldMat;\n        \n        attribute vec3 a_Normal;\n        varying vec3 v_Normal;\n        varying vec2 v_Texcoord0;\n\n        #ifdef BONE\n            attribute vec4 a_BoneIndices;\n            attribute vec4 a_BoneWeights;\n            const int c_MaxBoneCount = 24;\n            uniform mat4 u_Bones[c_MaxBoneCount];\n        #endif\n\n        #if defined(DIRECTIONLIGHT)\n            uniform vec3 u_CameraPos;\n            varying vec3 v_PositionWorld;\n            varying vec3 v_ViewDir;\n        #endif\n\n        void main()\n        {\n            #ifdef BONE\n                mat4 skinTransform = mat4(0.0);\n                skinTransform += u_Bones[int(a_BoneIndices.x)] * a_BoneWeights.x;\n                skinTransform += u_Bones[int(a_BoneIndices.y)] * a_BoneWeights.y;\n                skinTransform += u_Bones[int(a_BoneIndices.z)] * a_BoneWeights.z;\n                skinTransform += u_Bones[int(a_BoneIndices.w)] * a_BoneWeights.w;\n                vec4 position = skinTransform * a_Position;\n                gl_Position = u_MvpMatrix * position;\n                mat3 worldMat = mat3(u_WorldMat * skinTransform);\n            #else\n                gl_Position = u_MvpMatrix * a_Position;\n                mat3 worldMat = mat3(u_WorldMat);\n            #endif\n\n            v_Normal = worldMat * a_Normal;\n            v_Texcoord0 = a_Texcoord0;\n            #if defined(DIRECTIONLIGHT)\n                #ifdef BONE\n                    v_PositionWorld = (u_WorldMat * position).xyz;\n                #else\n                    v_PositionWorld = (u_WorldMat * a_Position).xyz;\n                #endif\n                v_ViewDir = u_CameraPos - v_PositionWorld;\n            #endif\n            gl_Position=remapGLPositionZ(gl_Position);\n        }\n        ";
        var ps2 = "\n        #ifdef FSHIGHPRECISION\n            precision highp float;\n        #else\n            precision mediump float;\n        #endif\n\n        #include \"Lighting.glsl\";\n\n        varying vec2 v_Texcoord0;\n        varying vec3 v_Normal;\n        \n        uniform sampler2D u_AlbedoTexture;\n        uniform vec4 u_DiffuseColor;\n\n        #if defined(DIRECTIONLIGHT)\n            varying vec3 v_PositionWorld;\n            varying vec3 v_ViewDir; \n            uniform DirectionLight u_DirectionLight;\n\n            uniform vec4 u_SpecColor;\n            uniform float u_SpecColorIntensity;\n            uniform float u_Gloss;\n        #endif\n\n        void main()\n        {\n            // vec4 col = texture2D(u_AlbedoTexture, v_Texcoord0);\n            vec4 col = u_DiffuseColor;\n            // #if defined(DIRECTIONLIGHT)\n            //     vec3 normal = normalize(v_Normal);\n            //     vec3 lightDir = -normalize(u_DirectionLight.Direction);\n            //     vec3 viewDir = normalize(v_ViewDir);\n                \n            //     float lambert = max (0.0, dot(normal,lightDir));\n            //     lambert = lambert * 0.5 + 0.5;\n            //     lambert = smoothstep(0.45,0.55,lambert);\n\n            //     vec3 diffuseColor = col.xyz * u_DirectionLight.Color.xyz * lambert;\n            //     vec3 h = normalize(viewDir + lightDir);\n            //     float nh = max(0.0, dot (h,normal));\n            //     nh = smoothstep(0.9,0.95,nh);\n            //     vec3 specularColor = u_DirectionLight.Color.xyz * u_SpecColor.xyz * pow(nh, u_SpecColorIntensity * 128.0) * u_Gloss;\n\n            //     col.xyz = diffuseColor.xyz + specularColor.xyz;\n            // #endif\n            gl_FragColor = col;\n        }\n\n        ";
        subShader.addShaderPass(vs2, ps2);
    };
    ToonShadingMaterial.ALBEDOTEXTURE = Laya.Shader3D.propertyNameToID("u_AlbedoTexture");
    ToonShadingMaterial.DIFFUSECOLOR = Laya.Shader3D.propertyNameToID("u_DiffuseColor");
    ToonShadingMaterial.OUTLINECOLOR = Laya.Shader3D.propertyNameToID("u_OutlineColor");
    ToonShadingMaterial.OUTLINEWIDTH = Laya.Shader3D.propertyNameToID("u_OutlineWidth");
    ToonShadingMaterial.OUTLINELIGHTNESS = Laya.Shader3D.propertyNameToID("u_OutlineLightness");
    ToonShadingMaterial.ALBEDOCOLOR = Laya.Shader3D.propertyNameToID("u_albedoColor");
    ToonShadingMaterial.SPECCOLOR = Laya.Shader3D.propertyNameToID("u_SpecColor");
    ToonShadingMaterial.SPECCOLORINTENSITY = Laya.Shader3D.propertyNameToID("u_SpecColorIntensity");
    ToonShadingMaterial.GLOSS = Laya.Shader3D.propertyNameToID("u_Gloss");
    ToonShadingMaterial.shaderDefines = Laya.BlinnPhongMaterial.shaderDefines;
    return ToonShadingMaterial;
}(Laya.BaseMaterial));
exports.default = ToonShadingMaterial;
},{}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameFailViewTemplate_1 = require("../../View/TemplateViews/GameFail/GameFailViewTemplate");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var Fiy_1 = require("./Fiy");
var AppRun_1 = require("../AppRun");
var GameMgr_1 = require("../../Mgr/GameMgr");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var gameFail = /** @class */ (function (_super) {
    __extends(gameFail, _super);
    function gameFail() {
        return _super.call(this) || this;
    }
    gameFail.prototype.ryw_onContinueBtn = function () {
        // alert()
        _super.prototype.ryw_onContinueBtn.call(this);
        Fiy_1.default.instance.ondestroyScene();
        AppRun_1.default.Instance.init(function () {
            if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_adSwitch == 1) {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
                });
            }
            else {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
                });
            }
        }, User_1.default.ryw_getLeveNum());
    };
     gameFail.prototype.onUpdate = function () {
        if(sessionStorage.getItem("SkipLvl") == 1){
            sessionStorage.removeItem("SkipLvl");
            this.ryw__topZone.getChildByName("LoadingText").visible = true;
            this.ryw__centerZone.visible = false;
        this.ryw__backBtn.visible = false;
        this.ryw__continueBtn.visible = false;
        this.ryw__skipBtn.visible = false;
        this.ryw__topZone.visible = false;
        _super.prototype.ryw_onSkipBtn.call(this);
        User_1.default.ryw_setLeveNum(User_1.default.ryw_getLeveNum() + 1);
        GameMgr_1.default.ryw_getInstance().ryw_saveGameData();
        Fiy_1.default.instance.ondestroyScene();
        AppRun_1.default.Instance.init(function () {
            if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_adSwitch == 1) {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
                });
            }
            else {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
                });
            }
        }, User_1.default.ryw_getLeveNum());
    }
    };
    gameFail.prototype.ryw_onSkipBtn = function () {
        // alert()
        _super.prototype.ryw_onSkipBtn.call(this);
        User_1.default.ryw_setLeveNum(User_1.default.ryw_getLeveNum() + 1);
        GameMgr_1.default.ryw_getInstance().ryw_saveGameData();
        Fiy_1.default.instance.ondestroyScene();
        AppRun_1.default.Instance.init(function () {
            if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_adSwitch == 1) {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
                });
            }
            else {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
                });
            }
        }, User_1.default.ryw_getLeveNum());
    };
    return gameFail;
}(GameFailViewTemplate_1.default));
exports.default = gameFail;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/GameMgr":28,"../../Mgr/ViewMgr":30,"../../User/User":55,"../../View/TemplateViews/GameFail/GameFailViewTemplate":77,"../AppRun":33,"./Fiy":37}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameWinViewTemplate_1 = require("../../View/TemplateViews/GameWin/GameWinViewTemplate");
var Fiy_1 = require("./Fiy");
var AppRun_1 = require("../AppRun");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var GameMgr_1 = require("../../Mgr/GameMgr");
var gameWin = /** @class */ (function (_super) {
    __extends(gameWin, _super);
    function gameWin() {
        return _super.call(this) || this;
    }
    gameWin.prototype.ryw_onNextBtn = function () {
        _super.prototype.ryw_onNextBtn.call(this);
        User_1.default.ryw_setLeveNum(User_1.default.ryw_getLeveNum() + 1);
        GameMgr_1.default.ryw_getInstance().ryw_saveGameData();
        Fiy_1.default.instance.ondestroyScene();
        AppRun_1.default.Instance.init(function () {
            if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_adSwitch == 1) {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameWinView); //关闭面板
                });
            }
            else {
                ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
                    ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameWinView); //关闭面板
                });
            }
        }, User_1.default.ryw_getLeveNum());
    };
    return gameWin;
}(GameWinViewTemplate_1.default));
exports.default = gameWin;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/GameMgr":28,"../../Mgr/ViewMgr":30,"../../User/User":55,"../../View/TemplateViews/GameWin/GameWinViewTemplate":78,"../AppRun":33,"./Fiy":37}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var ryw_AesTools = /** @class */ (function () {
    function ryw_AesTools() {
    }
    //加密
    ryw_AesTools.ryw_encrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(ryw_AesTools.ryw_KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(ryw_AesTools.ryw_IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    ryw_AesTools.ryw_decrypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(ryw_AesTools.ryw_KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(ryw_AesTools.ryw_IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    ryw_AesTools.ryw_KEY = 'b#63fFJ6AvkK3YT*';
    ryw_AesTools.ryw_IV = 'J$f4DU%sNL73M&Go';
    return ryw_AesTools;
}());
exports.default = ryw_AesTools;
},{"./aes.js":47}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var AppConfig_1 = require("../AppConfig");
var ryw_requestData = /** @class */ (function () {
    function ryw_requestData() {
        this.ryw_meth = "post";
        this.ryw_url = "";
        this.ryw_onSuccess = null;
        this.ryw_onFail = null;
        this.ryw_data = {};
    }
    return ryw_requestData;
}());
exports.ryw_requestData = ryw_requestData;
var ryw_HttpUnit = /** @class */ (function () {
    function ryw_HttpUnit() {
    }
    ryw_HttpUnit.request = function (req) {
        if (req.ryw_url.indexOf("https://") > -1 ||
            req.ryw_url.indexOf("http://") > -1) {
            req.ryw_url = req.ryw_url;
        }
        else {
            req.ryw_url = NetConfig_1.default.ryw_serverUrl + req.ryw_url;
        }
        var completeFunc = function (res) {
        };
        var errorFunc = function (res) {
        };
    };
    //todo:这里添加你们和服务器相互的接口
    ryw_HttpUnit.ryw_login = function (onSuccess, onFail) {
        var req = new ryw_requestData();
        req.ryw_url = NetConfig_1.default.ryw_Login;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        ryw_HttpUnit.request(req);
    };
    ryw_HttpUnit.ryw_saveGameData = function (gameData, onSuccess, onFail) {
        var req = new ryw_requestData();
        req.ryw_url = NetConfig_1.default.ryw_SaveGameData;
        req.ryw_data.gameData = gameData;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        ryw_HttpUnit.request(req);
    };
    ryw_HttpUnit.ryw_getGameData = function (onSuccess, onFail) {
        var req = new ryw_requestData();
        req.ryw_url = NetConfig_1.default.ryw_GetUser;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        ryw_HttpUnit.request(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    ryw_HttpUnit.ryw_GetIpBlock = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.ryw_gameid) {
            var req = new ryw_requestData();
            req.ryw_url = NetConfig_1.default.ryw_IpBlock;
            req.ryw_onSuccess = onSuccess;
            req.ryw_onFail = onFail;
            ryw_HttpUnit.request(req);
        }
    };
    ryw_HttpUnit.ryw_reportExport = function (appid, game_name, onSuccess, onFail) {
        var req = new ryw_requestData();
        req.ryw_url = NetConfig_1.default.ryw_reportExport;
        req.ryw_data.wbappid = appid;
        req.ryw_data.game_name = game_name;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        ryw_HttpUnit.request(req);
    };
    ryw_HttpUnit.ryw_reportImport = function (appid, channel, onSuccess, onFail) {
        var req = new ryw_requestData();
        req.ryw_url = NetConfig_1.default.ryw_reportImport;
        req.ryw_data.wbappid = appid;
        req.ryw_data.channel = channel;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        ryw_HttpUnit.request(req);
    };
    ryw_HttpUnit.ryw_Getuserip = function (onSuccess, onFail) {
        var req = new ryw_requestData();
        req.ryw_url = NetConfig_1.default.ryw_getuserip;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        ryw_HttpUnit.request(req);
    };
    return ryw_HttpUnit;
}());
exports.default = ryw_HttpUnit;
},{"../AppConfig":2,"../User/User":55,"./AesTools":44,"./NetConfig":46}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_NetConfig = /** @class */ (function () {
    function ryw_NetConfig() {
    }
    ryw_NetConfig.ryw_state = 0;
    ryw_NetConfig.ryw_gameid = 106;
    ryw_NetConfig.ryw_serverUrl = "https://javaapi.renyouwangluo.cn";
    ryw_NetConfig.ryw_Login = "https://javaapi.renyouwangluo.cn/api/user/login";
    ryw_NetConfig.ryw_SaveGameData = "https://javaapi.renyouwangluo.cn/api/user/game/data/write";
    ryw_NetConfig.ryw_GetUser = "https://javaapi.renyouwangluo.cn/api/user/game/data/read";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    ryw_NetConfig.ryw_IpBlock = "https://javaapi.renyouwangluo.cn/api/user/ip/select";
    ryw_NetConfig.ryw_reportExport = "/api/share/getwaibuad";
    ryw_NetConfig.ryw_reportImport = "/api/share/getzjadml";
    ryw_NetConfig.ryw_getuserip = "https://javaapi.renyouwangluo.cn/api/user/ip";
    return ryw_NetConfig;
}());
exports.default = ryw_NetConfig;
},{}],47:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var HttpUnit_1 = require("./Net/HttpUnit");
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var ViewMgr_1 = require("./Mgr/ViewMgr");
var ryw_OPPOAPI = /** @class */ (function () {
    function ryw_OPPOAPI() {
    }
    Object.defineProperty(ryw_OPPOAPI, "ryw_BannerInstance", {
        get: function () {
            return ryw_OPPOAPI.ryw__banner;
        },
        enumerable: true,
        configurable: true
    });
    ryw_OPPOAPI.ryw_Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    ryw_OPPOAPI.ryw_initAdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.ryw_AppID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    ryw_OPPOAPI.ryw_showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: ryw_OPPOAPI.ryw_adUnitId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    ryw_OPPOAPI.ryw_navigateToMiniProgram = function (pkgName, gameName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            HttpUnit_1.default.ryw_reportExport(pkgName, gameName, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 导出上报成功");
                }
                else {
                    console.log("OPPO 导出上报失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 导出上报失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
            var time = Date.now();
            while (Date.now() - time <= 500) {
            }
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.ryw_AppID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
            });
        }
    };
    ryw_OPPOAPI.ryw_showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: ryw_OPPOAPI.ryw_InsAdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    ryw_OPPOAPI.ryw_showBannaer = function () {
        if (ryw_OPPOAPI.ryw__banner) {
            ryw_OPPOAPI.ryw__banner.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: ryw_OPPOAPI.ryw_bannerAdUnitId
        });
        bannerAd.show();
        ryw_OPPOAPI.ryw__banner = bannerAd;
    };
    ryw_OPPOAPI.ryw_hideBanner = function () {
        if (ryw_OPPOAPI.ryw__banner) {
            ryw_OPPOAPI.ryw__banner.hide();
        }
    };
    ryw_OPPOAPI.ryw_destroyBanner = function () {
        if (ryw_OPPOAPI.ryw__banner) {
            ryw_OPPOAPI.ryw__banner.destroy();
        }
        ryw_OPPOAPI.ryw__banner = null;
    };
    ryw_OPPOAPI.ryw_getLaunchOptionsSync = function () {
        var obj = { query: "", referrerInfo: { package: "", extraData: { appid: "" } } };
        if (Laya.Browser.onQGMiniGame) {
            var options = Laya.Browser.window["qg"].getLaunchOptionsSync();
            if (null != options && options != "") {
                obj = options;
            }
            else {
                console.log("没有启动设置！！！");
            }
            return obj;
        }
        return obj;
    };
    ryw_OPPOAPI.ryw_share = function (complate, titel, imageUrl) {
        complate(false);
    };
    ryw_OPPOAPI.ryw_createDesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    //根据配置的概率自动弹出创建图标确认框
    ryw_OPPOAPI.ryw_autoPopCreateDestopIcon = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        var rate = Math.floor(Math.random() * 100);
        if (rate <= AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_oppocfg.ryw_addToDesktop) {
            ryw_OPPOAPI.ryw_createDesktopIcon(onSuccess, onFail);
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    //显示OPPO原生界面
    ryw_OPPOAPI.ryw_showNativeAd = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        if (1 == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_oppocfg.ryw_yuanshengSwitch) {
            ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_OPPONativeView, null, function (v) {
                if (null != onSuccess) {
                    onSuccess(v);
                }
            });
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    ryw_OPPOAPI.ryw_adUnitId = "";
    ryw_OPPOAPI.ryw_bannerAdUnitId = "";
    ryw_OPPOAPI.ryw_InsAdUnitId = "";
    ryw_OPPOAPI.ryw_OpenScreenAdUnitId = "";
    ryw_OPPOAPI.ryw_NativeAdId = "";
    ryw_OPPOAPI.ryw__banner = null;
    return ryw_OPPOAPI;
}());
exports.default = ryw_OPPOAPI;
},{"./AppConfig":2,"./Config/AppSwitchConfig":5,"./Mgr/ViewMgr":30,"./Net/HttpUnit":45}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./Mgr/ViewMgr");
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var WudianMgr_1 = require("./Mgr/WudianMgr");
var AppConfig_1 = require("./AppConfig");
var ryw_QQMiniGameAPI = /** @class */ (function () {
    function ryw_QQMiniGameAPI() {
    }
    ryw_QQMiniGameAPI.ryw_Login = function (onSuccess, onFail) {
        if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    ryw_QQMiniGameAPI.ryw_onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    ryw_QQMiniGameAPI.ryw_onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (ryw_QQMiniGameAPI.ryw__onRewardedVideoAdFailed) {
            ryw_QQMiniGameAPI.ryw__onRewardedVideoAdFailed();
        }
    };
    ryw_QQMiniGameAPI.ryw_onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (ryw_QQMiniGameAPI.ryw__onRewardedVideoAdClose) {
                ryw_QQMiniGameAPI.ryw__onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (ryw_QQMiniGameAPI.ryw__onRewardedVideoAdClose) {
                ryw_QQMiniGameAPI.ryw__onRewardedVideoAdClose(false);
            }
        }
    };
    ryw_QQMiniGameAPI.ryw_regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(ryw_QQMiniGameAPI.ryw_onRewardedVideoAdLoad);
        rewardedVideoAd.onError(ryw_QQMiniGameAPI.ryw_onRewardedVideoAdError);
        rewardedVideoAd.onClose(ryw_QQMiniGameAPI.ryw_onRewardedVideoAdClose);
        ryw_QQMiniGameAPI.ryw__isRegRewardedVideoAdEvent = true;
    };
    ryw_QQMiniGameAPI.ryw_showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            ryw_QQMiniGameAPI.ryw__onRewardedVideoAdClose = onAdClose;
            ryw_QQMiniGameAPI.ryw__onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["qq"].createRewardedVideoAd({
                adUnitId: ryw_QQMiniGameAPI.ryw_adUnitId,
            });
            if (!ryw_QQMiniGameAPI.ryw__isRegRewardedVideoAdEvent) {
                ryw_QQMiniGameAPI.ryw_regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    ryw_QQMiniGameAPI.ryw_navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["qq"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    ryw_QQMiniGameAPI.ryw_share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onQQMiniGame) {
            ryw_QQMiniGameAPI.ryw__onShow = function () {
                Laya.Browser.window["qq"].offShow(ryw_QQMiniGameAPI.ryw__onShow);
                ryw_QQMiniGameAPI.ryw__onShow = null;
                var c = Date.now() - _this.ryw__lastShareTime;
                if (complate) {
                    if (Date.now() - _this.ryw__lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["qq"].onShow(ryw_QQMiniGameAPI.ryw__onShow);
            ryw_QQMiniGameAPI.ryw__lastShareTime = Date.now();
            Laya.Browser.window["qq"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    ryw_QQMiniGameAPI.ryw_showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            var interstitialAd = Laya.Browser.window["qq"].createInterstitialAd({
                adUnitId: ryw_QQMiniGameAPI.ryw_InsAdUnitId,
            });
            var _onLoad_1 = function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    interstitialAd.offLoad(_onLoad_1);
                    interstitialAd.offError(_onError_1);
                    interstitialAd.offClose(_onClose_1);
                    interstitialAd.destroy();
                    if (onFailed) {
                        onFailed();
                    }
                });
            };
            interstitialAd.onLoad(_onLoad_1);
            var _onError_1 = function (err) {
                console.log('插屏广告 加载失败' + err);
                interstitialAd.offLoad(_onLoad_1);
                interstitialAd.offError(_onError_1);
                interstitialAd.offClose(_onClose_1);
                interstitialAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            };
            interstitialAd.onError(_onError_1);
            var _onClose_1 = function () {
                console.log('插屏广告 关闭');
                interstitialAd.offLoad(_onLoad_1);
                interstitialAd.offError(_onError_1);
                interstitialAd.offClose(_onClose_1);
                interstitialAd.destroy();
                if (onAdClose) {
                    onAdClose();
                }
            };
            interstitialAd.onClose(_onClose_1);
        }
        else {
            onAdClose();
        }
    };
    ryw_QQMiniGameAPI.ryw_LoadAppBoxAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            ryw_QQMiniGameAPI.ryw_mAppboxAd = Laya.Browser.window["qq"].createAppBox({
                adUnitId: ryw_QQMiniGameAPI.ryw_AppBoxId,
            });
            ryw_QQMiniGameAPI.ryw_mAppboxAd.load().then(function () {
                console.log('盒子广告 加载完成');
            });
            ryw_QQMiniGameAPI.ryw_mAppboxAd.onError(function (err) {
                console.log('盒子广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            ryw_QQMiniGameAPI.ryw_onBoxAdClose = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            ryw_QQMiniGameAPI.ryw_mAppboxAd.onClose(ryw_QQMiniGameAPI.ryw_onBoxAdClose);
        }
        else {
            onAdClose();
        }
    };
    ryw_QQMiniGameAPI.ryw_showAppBoxAd = function (onFailed, onAdClose) {
        if (ryw_QQMiniGameAPI.ryw_mAppboxAd) {
            console.log("显示盒子广告");
            ryw_QQMiniGameAPI.ryw_mAppboxAd.offClose(ryw_QQMiniGameAPI.ryw_onBoxAdClose);
            ryw_QQMiniGameAPI.ryw_onBoxAdClose = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            ryw_QQMiniGameAPI.ryw_mAppboxAd.onClose(ryw_QQMiniGameAPI.ryw_onBoxAdClose);
            ryw_QQMiniGameAPI.ryw_mAppboxAd.show().catch(function (err) {
                console.log('盒子广告 显示失败 ：' + err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            ryw_QQMiniGameAPI.ryw_LoadAppBoxAd(onAdClose, onFailed);
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/qq.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof QQMiniGameAPI
     */
    ryw_QQMiniGameAPI.ryw_getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onQQMiniGame) {
            var obj_1 = Laya.Browser.window["qq"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof QQMiniGameAPI
     */
    ryw_QQMiniGameAPI.ryw_SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["qq"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["qq"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //显示QQ狂点界面1，此接口添加了对场景值，IP地区的判断
    //data 传入界面的参数 格式 ：{ Complete : Function , PrizeCount : String | Number}
    //onSuccess 界面成功打开回调
    //onFail 界面打开失败回调
    ryw_QQMiniGameAPI.showQQCreazyClick = function (data, onSuccess, onFail) {
        var launchScene = ryw_QQMiniGameAPI.ryw_getLaunchOptionsSync().scene;
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.ryw_GetIpBlocked();
        var wudian = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudian;
        var kuangdianBanner = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_kuangdianBanner;
        if (AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions
            && ipBlocked && noEnterBySearch && 1 == wudian && 1 == kuangdianBanner) {
            ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_QQCrazyClickView, data, function () {
                if (null != onSuccess) {
                    onSuccess();
                }
            });
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    //显示QQ狂点界面2，此接口添加了对场景值，IP地区的判断
    //data 传入界面的参数 格式 ：{ Complete : Function , PrizeCount : String | Number}
    //onSuccess 界面成功打开回调
    //onFail 界面打开失败回调
    ryw_QQMiniGameAPI.showQQCreazyClick2 = function (data, onSuccess, onFail) {
        var launchScene = ryw_QQMiniGameAPI.ryw_getLaunchOptionsSync().scene;
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.ryw_GetIpBlocked();
        var wudian = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudian;
        var kuangdianBox = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_kuangdianBox;
        if (AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions
            && ipBlocked && noEnterBySearch && 1 == wudian && 1 == kuangdianBox) {
            ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_QQCrazyClickView2, data, function () {
                if (null != onSuccess) {
                    onSuccess();
                }
            });
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    ryw_QQMiniGameAPI.ryw_adUnitId = ""; //激励视频Id
    ryw_QQMiniGameAPI.ryw_bannerAdUnitId = ""; //banner广告Id
    ryw_QQMiniGameAPI.ryw_InsAdUnitId = ""; //插屏广告Id
    ryw_QQMiniGameAPI.ryw_AppBoxId = ""; //盒子广告Id
    //-------------------------激励视频---------------------------------
    ryw_QQMiniGameAPI.ryw__isRegRewardedVideoAdEvent = false;
    ryw_QQMiniGameAPI.ryw__onRewardedVideoAdFailed = null;
    ryw_QQMiniGameAPI.ryw__onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    ryw_QQMiniGameAPI.ryw__onShow = null;
    ryw_QQMiniGameAPI.ryw__lastShareTime = 0;
    //--------------------盒子广告---------------------------------------
    ryw_QQMiniGameAPI.ryw_mAppboxAd = null;
    ryw_QQMiniGameAPI.ryw_onBoxAdClose = null;
    return ryw_QQMiniGameAPI;
}());
exports.default = ryw_QQMiniGameAPI;
},{"./AppConfig":2,"./Config/AppSwitchConfig":5,"./Mgr/ViewMgr":30,"./Mgr/WudianMgr":32}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var ryw_ShareAd = /** @class */ (function () {
    function ryw_ShareAd() {
    }
    ryw_ShareAd.ryw_refreshAd = function (complate) {
        ryw_ShareAd.ryw_getAdPosData(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                ryw_ShareAd.ryw__adPosition = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    ryw_ShareAd.ryw_getADVs = function (locationid, complate, useRandom, useLocalRandom, sortDatas) {
        if (!ryw_ShareAd.ryw_isNeedShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? ryw_ShareAd.ryw_UseRandomAdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useLocalRandom;
        if (useRandom) {
            locationid = ryw_ShareAd.ryw_getRandomADPosID();
        }
        var datas = ryw_ShareAd.ryw__adv[locationid];
        if (datas) {
            if (useLocalRandom) {
                if (null == sortDatas) {
                    datas = this.ryw_sortDatas(datas);
                }
                else {
                    datas = sortDatas(datas);
                }
            }
            complate(datas);
        }
        else {
            var self = ryw_ShareAd;
            ryw_ShareAd.ryw_getADVData(locationid, function (res) {
                if (1 == res.code) {
                    ryw_ShareAd.ryw__adv[locationid] = res.result;
                    datas = ryw_ShareAd.ryw__adv[locationid];
                    if (datas && Utilit_1.default.ryw_isIphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < ryw_ShareAd.ryw__iphoneIgnoreAppIds.length; ++j) {
                                if (data.appid == ryw_ShareAd.ryw__iphoneIgnoreAppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && useLocalRandom) {
                        if (null == sortDatas) {
                            datas = self.ryw_sortDatas(datas);
                        }
                        else {
                            datas = sortDatas(datas);
                        }
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    ryw_ShareAd.ryw_reportUserClick = function (advid) {
        ryw_ShareAd.ryw_reqUserClick(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    ryw_ShareAd.ryw_getRandomADPosID = function () {
        return ryw_ShareAd.ryw_AdLocationids[Math.floor(Math.random() * ryw_ShareAd.ryw_AdLocationids.length)];
    };
    ryw_ShareAd.ryw_request = function (req) {
        if (req.ryw_url.indexOf("https://") > -1 ||
            req.ryw_url.indexOf("http://") > -1) {
            req.ryw_url = req.ryw_url;
        }
        else {
            req.ryw_url = ryw_ShareAd.ryw_mainUrl + req.ryw_url;
        }
        var completeFunc = function (res) {
            //console.log(res,"http Success")
        };
        var errorFunc = function (res) {
        };
    };
    ryw_ShareAd.ryw_getAdPosData = function (onSuccess, onFail) {
        var req = new HttpUnit_1.ryw_requestData();
        req.ryw_url = ryw_ShareAd.ryw_getAdPostion;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        req.ryw_data.softid = AppConfig_1.default.ryw_AppID;
        req.ryw_meth = "get";
        ryw_ShareAd.ryw_request(req);
    };
    ryw_ShareAd.ryw_reqUserClick = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.ryw_requestData();
        req.ryw_url = ryw_ShareAd.ryw_userClick;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        req.ryw_data.softid = AppConfig_1.default.ryw_AppID;
        req.ryw_data.uid = User_1.default.ryw_openId;
        req.ryw_data.advid = advid;
        ryw_ShareAd.ryw_request(req);
    };
    ryw_ShareAd.ryw_getADVData = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.ryw_requestData();
        req.ryw_url = ryw_ShareAd.ryw_getAdv;
        req.ryw_onSuccess = onSuccess;
        req.ryw_onFail = onFail;
        req.ryw_data.softid = AppConfig_1.default.ryw_AppID;
        req.ryw_data.locationid = locationid;
        req.ryw_data.preview = 0;
        ryw_ShareAd.ryw_request(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    ryw_ShareAd.ryw_RandomJump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = ryw_ShareAd.ryw_LoopAdLocationID;
            var Locations = [
                ryw_ShareAd.ryw_LoopAdLocationID,
                ryw_ShareAd.ryw_InsertAdLocationID,
                ryw_ShareAd.ryw_BannerAdLocationID,
                ryw_ShareAd.ryw_AniAdLocationID,
            ];
            if (ryw_ShareAd.ryw_UseRandomAdPos) {
                for (var i = 0; i < ryw_ShareAd.ryw_AdLocationids.length; ++i) {
                    Locations.push(ryw_ShareAd.ryw_AdLocationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = ryw_ShareAd.ryw_getADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.ryw_navigateToMiniProgram(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        ryw_ShareAd.ryw_reportUserClick(data_1.appid);
                        ALD_1.default.ryw_aldSendReportAdClickSuccess(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.ryw_aldSendReportAdClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    ryw_ShareAd.ryw_isNeedShowAd = function () {
        if (0 == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_adSwitch)
            return false;
        if (Laya.Browser.onQGMiniGame) {
            if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_oppocfg.ryw_oppoversions != AppConfig_1.default.ryw_Versions) {
                return false;
            }
        }
        var mailiang = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_mailiang;
        var mailianglist = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_mailianglist;
        var mailiangscenelist = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_mailiangSceneList;
        if (1 == mailiang) {
            var flag = null;
            var scene = null;
            if (Laya.Browser.onMiniGame) {
                flag = WXAPI_1.default.ryw_getLaunchOptionsSync().query['chid'];
                scene = WXAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                flag = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().query['chid'];
                scene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            if (null != flag && null != mailianglist && mailianglist.length > 0) {
                for (var i = 0; i < mailianglist.length; ++i) {
                    if (flag == mailianglist[i]) {
                        return false;
                    }
                }
            }
            if (null != scene && null != mailiangscenelist && mailiangscenelist.length > 0) {
                for (var i = 0; i < mailiangscenelist.length; ++i) {
                    if (scene == mailiangscenelist[i]) {
                        return false;
                    }
                }
            }
        }
        return true;
    };
    ryw_ShareAd.ryw_sortDatas = function (datas) {
        if (null == datas || 0 == datas.length)
            return [];
        var dataDic = {};
        var keys = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                keys.push(data.appid);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var randomIndex = Math.floor(Math.random() * keys.length);
            var temp = keys[randomIndex];
            keys[randomIndex] = key;
            keys[i] = temp;
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var dataArray = dataDic[key];
            for (var j = 0; j < dataArray.length; ++j) {
                var data = dataArray[j];
                var randomIndex = Math.floor(Math.random() * dataArray.length);
                var temp = dataArray[randomIndex];
                dataArray[randomIndex] = data;
                dataArray[j] = temp;
            }
        }
        var res = new Array();
        while (keys.length > 0) {
            if (keys.length == 1) {
                var key = keys[0];
                var isOk = false;
                var dataArray = dataDic[key];
                for (var i = 0; i < res.length; ++i) {
                    var curData = res[i];
                    var nextData = res[i + 1];
                    if (null != nextData) {
                        if (curData.appid != key && nextData.appid != key) {
                            var data = dataArray.shift();
                            if (null != data) {
                                var f = res.slice(0, i + 1);
                                var b = res.slice(i + 1, res.length);
                                res = f;
                                res.push(data);
                                for (var k = 0; k < b.length; ++k) {
                                    res.push(b[k]);
                                }
                            }
                            isOk = true;
                            break;
                        }
                    }
                    else {
                        if (curData.appid != key) {
                            var data = dataArray.shift();
                            if (null != data) {
                                var f = res.slice(0, i + 1);
                                var b = res.slice(i + 1, res.length);
                                res = f;
                                res.push(data);
                                for (var k = 0; k < b.length; ++k) {
                                    res.push(b[k]);
                                }
                            }
                            isOk = true;
                            break;
                        }
                    }
                }
                if (!isOk || dataArray.length <= 0) {
                    keys.splice(0, 1);
                }
            }
            else {
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    var dataArray = dataDic[key];
                    var data = dataArray.shift();
                    res.push(data);
                    if (dataArray.length <= 0) {
                        keys.splice(i, 1);
                        --i;
                    }
                }
            }
        }
        return res;
    };
    ryw_ShareAd.ryw_mainUrl = "https://swwww.mrkzx.cn";
    ryw_ShareAd.ryw_getAdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    ryw_ShareAd.ryw_getAdv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    ryw_ShareAd.ryw_userClick = "/v1.1/api/userclick.html"; //用户点击上报
    ryw_ShareAd.ryw_LoopAdLocationID = 660;
    ryw_ShareAd.ryw_BannerAdLocationID = 659;
    ryw_ShareAd.ryw_InsertAdLocationID = 661;
    ryw_ShareAd.ryw_AniAdLocationID = -1;
    ryw_ShareAd.ryw_HistoryLocationID = -1;
    ryw_ShareAd.ryw_MoreGameLocationID = 661;
    ryw_ShareAd.ryw_UseRandomAdPos = true;
    ryw_ShareAd.ryw_AdLocationids = [
        660
    ];
    ryw_ShareAd.ryw__adPosition = {};
    ryw_ShareAd.ryw__adv = {};
    ryw_ShareAd.ryw__iphoneIgnoreAppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b"
    ];
    return ryw_ShareAd;
}());
exports.default = ryw_ShareAd;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":5,"../Event/EventDef":6,"../Event/EventMgr":7,"../Net/HttpUnit":45,"../QQMiniGameAPI":49,"../User/User":55,"../Utilit":56,"../WXAPI":88}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var ryw_BannerAdView = /** @class */ (function (_super) {
    __extends(ryw_BannerAdView, _super);
    function ryw_BannerAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_AdPosID = ShareAd_1.default.ryw_BannerAdLocationID;
        _this.ryw__data = null;
        _this.ryw__wxBanner = null;
        _this._onLoad = null;
        _this._onError = null;
        _this._onResize = null;
        return _this;
    }
    ryw_BannerAdView.prototype.onAwake = function () {
        this.ryw__displaySp = this.owner.getChildByName("Display");
        if (null == this.ryw__displaySp) {
            this.ryw__displaySp = this.owner;
        }
    };
    ryw_BannerAdView.prototype.onEnable = function () {
        this.ryw__displaySp.on(Laya.Event.CLICK, this, this.ryw_onSpClick);
        var banner = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_banner;
        if (0 == banner) {
            this.ryw_refreshBannerDis();
            var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshBannerDis);
        }
        else if (1 == banner) {
            this.ryw_refreshWXBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshWXBanner);
        }
    };
    ryw_BannerAdView.prototype.onDisable = function () {
        this.ryw__displaySp.off(Laya.Event.CLICK, this, this.ryw_onSpClick);
        this.ryw_clearWXBaner();
    };
    ryw_BannerAdView.prototype.ryw_refreshBannerDis = function () {
        var self = this;
        ShareAd_1.default.ryw_getADVs(this.ryw_AdPosID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self.ryw__displaySp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self.ryw__displaySp.destroyed) {
                        self.ryw__displaySp.width = 750;
                        self.ryw__displaySp.height = 256;
                    }
                }));
                self.ryw__data = data;
            }
        }, false);
    };
    ryw_BannerAdView.prototype.ryw_onSpClick = function () {
        var data = this.ryw__data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                    ALD_1.default.ryw_aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ryw_aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    ryw_BannerAdView.prototype.ryw_refreshWXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame)
            || !this.owner.visible)
            return;
        this.ryw_clearWXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this.ryw__displaySp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.ryw_WXBannerWidth ? this.ryw_WXBannerWidth / Laya.stage.width * sw : sw;
        if (Laya.Browser.onMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_recreateBannerIDList;
            var bannerAdUnitId = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId) {
                bannerAdUnitId = WXAPI_1.default.ryw_bannerAdUnitId;
            }
            self.ryw__wxBanner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            self.ryw__wxBanner.onLoad(function (res) {
                console.log("WXBanner广告 加载完成");
                console.log(res);
            });
            self.ryw__wxBanner.onError(function (err) {
                console.log("WXBanner广告 加载失败");
                console.log(err);
                self.ryw_refreshBannerDis();
                self.ryw_clearWXBaner();
            });
            self.ryw__wxBanner.onResize(function (res) {
            });
            self.ryw__wxBanner.show();
        }
        else if (Laya.Browser.onQQMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_recreateBannerIDList;
            var bannerAdUnitId_1 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_1) {
                bannerAdUnitId_1 = QQMiniGameAPI_1.default.ryw_bannerAdUnitId;
            }
            self.ryw__wxBanner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerAdUnitId_1,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self.ryw__wxBanner) {
                self._onLoad = function (res) {
                    console.log("QQBanner广告 加载完成 : ", bannerAdUnitId_1);
                    console.log(res);
                    self.ryw__wxBanner.show();
                };
                self.ryw__wxBanner.onLoad(self._onLoad);
                self._onError = function (err) {
                    console.log("QQBanner广告 加载失败 : ", bannerAdUnitId_1);
                    console.log(err);
                    self.ryw_refreshBannerDis();
                    self.ryw_clearWXBaner();
                };
                self.ryw__wxBanner.onError(self._onError);
                self._onResize = function (res) {
                };
                self.ryw__wxBanner.onResize(self._onResize);
            }
            else {
                self.ryw_refreshBannerDis();
            }
        }
    };
    ryw_BannerAdView.prototype.ryw_clearWXBaner = function () {
        if (this.ryw__wxBanner) {
            this.ryw__wxBanner.offLoad(this._onLoad);
            this.ryw__wxBanner.offError(this._onError);
            this.ryw__wxBanner.offResize(this._onResize);
            this.ryw__wxBanner.destroy();
        }
        this.ryw__wxBanner = null;
    };
    ryw_BannerAdView.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_banner;
        if (1 == banner && null == this.ryw__wxBanner) {
            this.ryw_refreshWXBanner();
            var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshWXBanner);
        }
        else {
            this.ryw_refreshBannerDis();
            var bannerRecreateTime = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerRecreateTime;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.ryw_refreshBannerDis);
        }
    };
    ryw_BannerAdView.prototype.onViewHide = function () {
        this.ryw_clearWXBaner();
        Laya.timer.clearAll(this);
    };
    ryw_BannerAdView.prototype.onDestroy = function () {
        this.ryw_clearWXBaner();
        Laya.timer.clearAll(this);
    };
    return ryw_BannerAdView;
}(Laya.Script));
exports.default = ryw_BannerAdView;
},{"../../ALD":1,"../../Config/AppSwitchConfig":5,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":48,"../../QQMiniGameAPI":49,"../../WXAPI":88,"../ShareAd":50}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var ryw_HorizontalLoopAdView = /** @class */ (function (_super) {
    __extends(ryw_HorizontalLoopAdView, _super);
    function ryw_HorizontalLoopAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_AdPosID = ShareAd_1.default.ryw_LoopAdLocationID;
        _this.ryw__scrollForward = true;
        return _this;
    }
    ryw_HorizontalLoopAdView.prototype.onAwake = function () {
        this.ryw__list = this.owner.getChildByName("List");
        this.ryw__list.renderHandler = Laya.Handler.create(this, this.ryw_onListRender, null, false);
        this.ryw__list.hScrollBarSkin = "";
    };
    ryw_HorizontalLoopAdView.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.ryw_getADVs(this.ryw_AdPosID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this.ryw__list.array = temp;
                }
                else {
                    _this.ryw__list.array = datas;
                }
            }
        });
    };
    ryw_HorizontalLoopAdView.prototype.onDisable = function () {
    };
    ryw_HorizontalLoopAdView.prototype.onUpdate = function () {
        if (this.ryw__scrollForward) {
            this.ryw__list.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this.ryw__list.scrollBar.value >= this.ryw__list.scrollBar.max) {
                this.ryw__scrollForward = false;
            }
        }
        else {
            this.ryw__list.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this.ryw__list.scrollBar.value <= 0) {
                this.ryw__scrollForward = true;
            }
        }
    };
    ryw_HorizontalLoopAdView.prototype.ryw_onListRender = function (cell, index) {
        var data = this.ryw__list.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.ryw_setData(data);
    };
    return ryw_HorizontalLoopAdView;
}(Laya.Script));
exports.default = ryw_HorizontalLoopAdView;
},{"../ShareAd":50,"./LoopAdBox":53}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var ryw_LoopAdBox = /** @class */ (function (_super) {
    __extends(ryw_LoopAdBox, _super);
    function ryw_LoopAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__data = null;
        _this.ryw__originW = 150;
        _this.ryw__originH = 150;
        _this.ryw__fontSize = 25;
        return _this;
    }
    ryw_LoopAdBox.prototype.onAwake = function () {
        this.ryw__displaySp = this.owner.getChildByName("Display");
        this.ryw__originW = this.ryw__displaySp.width;
        this.ryw__originH = this.ryw__displaySp.height;
        this.ryw__disText = this.owner.getChildByName("TitelText");
        this.ryw__disText.text = "";
        this.ryw__fontSize = this.ryw__disText.fontSize;
    };
    ryw_LoopAdBox.prototype.onEnable = function () {
        this.ryw__displaySp.on(Laya.Event.CLICK, this, this.ryw_onSpClick);
    };
    ryw_LoopAdBox.prototype.onDisable = function () {
        this.ryw__displaySp.off(Laya.Event.CLICK, this, this.ryw_onSpClick);
    };
    ryw_LoopAdBox.prototype.ryw_setData = function (data) {
        if (data) {
            var self = this;
            this.ryw__displaySp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self.ryw__displaySp.destroyed) {
                    self.ryw__displaySp.width = self.ryw__originW;
                    self.ryw__displaySp.height = self.ryw__originH;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            var fontSize = Math.floor((5 / num) * this.ryw__fontSize);
            this.ryw__disText.fontSize = fontSize;
            this.ryw__disText.text = str;
            this.ryw__data = data;
        }
    };
    ryw_LoopAdBox.prototype.ryw_onSpClick = function () {
        var data = this.ryw__data;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                    ALD_1.default.ryw_aldSendReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.ryw_aldSendReportAdClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.ryw_navigateToMiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.ryw_reportUserClick(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_OnShareAdFail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return ryw_LoopAdBox;
}(Laya.Script));
exports.default = ryw_LoopAdBox;
},{"../../ALD":1,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":48,"../../QQMiniGameAPI":49,"../../WXAPI":88,"../ShareAd":50}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var AppConfig_2 = require("./AppConfig");
var ryw_TTAPI = /** @class */ (function () {
    function ryw_TTAPI() {
    }
    ryw_TTAPI.ryw_ttLogin = function (onSuccess, onFail) {
        if (AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.window["tt"].login({
                force: false,
                success: function (res) {
                    console.log("登陆成功1");
                    var code = res.code;
                    if (code) {
                        onSuccess(code);
                    }
                    else {
                        console.log("用户没有登陆，采用临时code");
                        onFail();
                    }
                },
                fail: function () {
                    console.log("登陆失败1");
                    onFail();
                },
            });
            ryw_TTAPI.ryw_initRecord();
        }
    };
    ryw_TTAPI.ryw_onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    ryw_TTAPI.ryw_onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (ryw_TTAPI.ryw__onRewardedVideoAdFailed) {
            ryw_TTAPI.ryw__onRewardedVideoAdFailed();
        }
    };
    ryw_TTAPI.ryw_onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (ryw_TTAPI.ryw__onRewardedVideoAdClose) {
                ryw_TTAPI.ryw__onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (ryw_TTAPI.ryw__onRewardedVideoAdClose) {
                ryw_TTAPI.ryw__onRewardedVideoAdClose(false);
            }
        }
    };
    ryw_TTAPI.ryw_regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(ryw_TTAPI.ryw_onRewardedVideoAdLoad);
        rewardedVideoAd.onError(ryw_TTAPI.ryw_onRewardedVideoAdError);
        rewardedVideoAd.onClose(ryw_TTAPI.ryw_onRewardedVideoAdClose);
        ryw_TTAPI.ryw__isRegRewardedVideoAdEvent = true;
    };
    ryw_TTAPI.ryw_showRewardedVideoAd = function (onAdClose, onFailed) {
        if (AppConfig_1.default.onTTMiniGame) {
            ryw_TTAPI.ryw__onRewardedVideoAdClose = onAdClose;
            ryw_TTAPI.ryw__onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["tt"].createRewardedVideoAd({
                adUnitId: ryw_TTAPI.ryw_adUnitId,
            });
            if (!ryw_TTAPI.ryw__isRegRewardedVideoAdEvent) {
                ryw_TTAPI.ryw_regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------TODO
    // public static navigateToMiniProgram(appId: string, path: string, onSuccess: Function, onFail: Function, onComplate: Function) {
    //     if (Laya.Browser.onMiniGame) {
    //         console.log("跳转游戏： " + appId);
    //         Laya.Browser.window["tt"].navigateToMiniProgram(
    //             {
    //                 appId: appId,
    //                 path: path,
    //                 extraData: {
    //                     foo: 'bar'
    //                 },
    //                 envVersion: 'release',
    //                 success(res) {
    //                     if (onSuccess) {
    //                         onSuccess(res)
    //                     }
    //                 },
    //                 fail(res) {
    //                     if (onFail) {
    //                         onFail(res)
    //                     }
    //                 },
    //                 complete(res) {
    //                     if (onComplate) {
    //                         onComplate(res)
    //                     }
    //                 }
    //             })
    //     }
    // }
    //-------------------------------------------------------------
    //-------------------录屏-------------------------------------------
    /**
     * 配置录屏
     */
    ryw_TTAPI.ryw_initRecord = function () {
        ryw_TTAPI.ryw_record = Laya.Browser.window["tt"].getGameRecorderManager();
        if (ryw_TTAPI.ryw_record != null) {
            ryw_TTAPI.ryw_record.onStart(function (res) {
                console.log("录屏开始");
                ryw_TTAPI.ryw_recordRes = "";
            });
            ryw_TTAPI.ryw_record.onStop(function (res) {
                console.log("录屏结束");
                ryw_TTAPI.ryw_recordRes = res.videoPath;
            });
        }
    };
    /**
     * 开始录屏
     */
    ryw_TTAPI.ryw_startRecord = function (duration) {
        if (duration === void 0) { duration = 300; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        ryw_TTAPI.ryw_record.start({
            duration: duration
        });
    };
    /**
    * 停止录屏
    */
    ryw_TTAPI.ryw_stopRecord = function () {
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        ryw_TTAPI.ryw_record.stop();
    };
    //----------------------------------------------------------------------
    //---------------------分享录屏----------------------------------------
    ryw_TTAPI.ryw_shareRecord = function (callback, Failcallback) {
        if (callback === void 0) { callback = null; }
        if (Failcallback === void 0) { Failcallback = null; }
        if (!AppConfig_2.default.onTTMiniGame)
            return;
        if (ryw_TTAPI.ryw_recordRes != "") {
            window["tt"].shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: ryw_TTAPI.ryw_recordRes,
                    videoTopics: [AppConfig_2.default.ryw_GameName]
                },
                success: function () {
                    if (callback != null) {
                        callback();
                    }
                    console.log("分享视频成功");
                },
                fail: function (e) {
                    console.log("分享视频失败");
                    if (Failcallback != null) {
                        Failcallback();
                    }
                }
            });
        }
        else {
            if (Failcallback != null) {
                Failcallback();
            }
            console.log("分享视频为空");
        }
    };
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    //---------------------分享好友----------------------------------------
    ryw_TTAPI.ryw_share = function (complate) {
        if (complate === void 0) { complate = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        window["tt"].shareAppMessage({
            templateId: ryw_TTAPI.ryw__templateId,
            success: function () {
                if (complate != null) {
                    complate();
                }
            },
            fail: function () {
                console.log("分享失败");
            }
        });
    };
    //------------------------------------------------------------------
    //-------------------------banner-------------------------------------------
    ryw_TTAPI.ryw_showBanner = function () {
        if (!AppConfig_1.default.onTTMiniGame || ryw_TTAPI.ryw_bannerAdUnitId.length <= 0)
            return;
        if (!ryw_TTAPI.ryw__banner) {
            var _a = Laya.Browser.window["tt"].getSystemInfoSync(), windowWidth_1 = _a.windowWidth, windowHeight_1 = _a.windowHeight;
            var targetBannerAdWidth = 150;
            // 创建一个居于屏幕底部正中的广告
            ryw_TTAPI.ryw__banner = Laya.Browser.window["tt"].createBannerAd({
                adUnitId: ryw_TTAPI.ryw_bannerAdUnitId,
                adIntervals: 30,
                style: {
                    width: targetBannerAdWidth,
                    top: windowHeight_1 - (targetBannerAdWidth / 16) * 9,
                }
            });
            ryw_TTAPI.ryw__banner.onResize(function (size) {
                console.log(size.width, size.height);
                ryw_TTAPI.ryw__banner.style.top = windowHeight_1 - size.height;
                ryw_TTAPI.ryw__banner.style.left = (windowWidth_1 - size.width) / 2;
            });
        }
        ryw_TTAPI.ryw__banner.show();
    };
    ryw_TTAPI.ryw_hideBanner = function () {
        if (null != ryw_TTAPI.ryw__banner) {
            ryw_TTAPI.ryw__banner.hide();
        }
    };
    ryw_TTAPI.ryw_showMoreGamesModal = function (onSuccess, onFail) {
        var systemInfo = Laya.Browser.window["tt"].getSystemInfoSync();
        // iOS 不支持，建议先检测再使用
        if (systemInfo.platform !== "ios") {
            // 打开互跳弹窗
            Laya.Browser.window["tt"].showMoreGamesModal({
                appLaunchOptions: [
                    {
                        appId: AppConfig_2.default.ryw_AppID,
                        query: "foo=bar&baz=qux",
                        extraData: {}
                    }
                    // {...}
                ],
                success: function (res) {
                    console.log("success", res.errMsg);
                    if (onSuccess) {
                        onSuccess();
                    }
                },
                fail: function (res) {
                    
                    console.log("fail", res.errMsg);
                    if (onFail) {
                        onFail();
                    }
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    ryw_TTAPI.ryw_adUnitId = "";
    ryw_TTAPI.ryw_bannerAdUnitId = "";
    ryw_TTAPI.ryw_InsAdUnitId = "";
    ryw_TTAPI.ryw__templateId = ""; //分享素材id
    ryw_TTAPI.ryw_recordRes = "";
    ryw_TTAPI.ryw__banner = null;
    //-------------------------激励视频---------------------------------
    ryw_TTAPI.ryw__isRegRewardedVideoAdEvent = false;
    ryw_TTAPI.ryw__onRewardedVideoAdFailed = null;
    ryw_TTAPI.ryw__onRewardedVideoAdClose = null;
    return ryw_TTAPI;
}());
exports.default = ryw_TTAPI;
},{"./AppConfig":2}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var ryw_UserGameData = /** @class */ (function () {
    function ryw_UserGameData() {
        if(localStorage.getItem("CJ_levels")){
            this.levelNum = parseInt(localStorage.getItem("CJ_levels"));
        }
        else {
            this.levelNum = 1;
            localStorage.setItem("CJ_levels",1);
        }
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量    
    }
    return ryw_UserGameData;
}());
exports.ryw_UserGameData = ryw_UserGameData;
var ryw_User = /** @class */ (function (_super) {
    __extends(ryw_User, _super);
    function ryw_User() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(ryw_User, "ryw_isLogin", {
        get: function () {
            return (ryw_User.ryw_code != "") || (ryw_User.ryw_token != "");
        },
        enumerable: true,
        configurable: true
    });
    ryw_User.ryw_getSaveData = function () {
        return JSON.stringify(ryw_User.ryw__gameData);
    };
    ryw_User.ryw_testInitUser = function () {
        if(localStorage.getItem("CJ_levels")){
                 ryw_User.ryw__gameData.levelNum = parseInt(localStorage.getItem("CJ_levels"));
            }
            else {
                 ryw_User.ryw__gameData.levelNum = 1;
                localStorage.setItem("CJ_levels",1);
            }
        ryw_User.ryw__gameData.moneyNum = 10000000;
        ryw_User.ryw__gameData.crystalNum = 10000000;
    };
    ryw_User.ryw_initiUser = function (data) {
        if (data && 0 != data) {
            ryw_User.ryw__gameData.levelNum = data.levelNum;
            ryw_User.ryw__gameData.moneyNum = data.moneyNum;
            ryw_User.ryw__gameData.crystalNum = data.crystalNum;
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    ryw_User.ryw_setLeveNum = function (levelNum) {
        localStorage.setItem("CJ_levels",levelNum);
        ryw_User.ryw__gameData.levelNum = levelNum;
    };
    ryw_User.ryw_getLeveNum = function () {
        if(localStorage.getItem("CJ_levels")){
            return parseInt(localStorage.getItem("CJ_levels"));
        }
        else return 1;
    };
    ryw_User.ryw_addMoney = function (add) {
        add = Math.ceil(add);
        var last = ryw_User.ryw__gameData.moneyNum;
        ryw_User.ryw__gameData.moneyNum += add;
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, {
            curr: ryw_User.ryw__gameData.moneyNum,
            last: last
        });
    };
    ryw_User.ryw_subMoney = function (sub) {
        sub = Math.ceil(sub);
        var last = ryw_User.ryw__gameData.moneyNum;
        ryw_User.ryw__gameData.moneyNum -= sub;
        if (ryw_User.ryw__gameData.moneyNum < 0) {
            ryw_User.ryw__gameData.moneyNum = 0;
        }
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, {
            curr: ryw_User.ryw__gameData.moneyNum,
            last: last
        });
    };
    ryw_User.ryw_getMoney = function () {
        return ryw_User.ryw__gameData.moneyNum;
    };
    ryw_User.ryw_addCrystal = function (add) {
        add = Math.ceil(add);
        var last = ryw_User.ryw__gameData.crystalNum;
        ryw_User.ryw__gameData.crystalNum += add;
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_Game_OnUserCrystalChange, {
            curr: ryw_User.ryw__gameData.crystalNum,
            last: last
        });
    };
    ryw_User.ryw_subCrystal = function (sub) {
        sub = Math.ceil(sub);
        var last = ryw_User.ryw__gameData.crystalNum;
        ryw_User.ryw__gameData.crystalNum -= sub;
        if (ryw_User.ryw__gameData.crystalNum < 0) {
            ryw_User.ryw__gameData.crystalNum = 0;
        }
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_Game_OnUserCrystalChange, {
            curr: ryw_User.ryw__gameData.crystalNum,
            last: last
        });
    };
    ryw_User.ryw_getCrystal = function () {
        return ryw_User.ryw__gameData.crystalNum;
    };
    ryw_User.ryw_code = "";
    ryw_User.ryw_openId = "";
    ryw_User.ryw_token = null;
    ryw_User.ryw_nickName = "";
    ryw_User.ryw_gender = 0;
    ryw_User.ryw__gameData = new ryw_UserGameData();
    return ryw_User;
}(Laya.Script));
exports.default = ryw_User;
},{"../Event/EventDef":6,"../Event/EventMgr":7}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_Utilit = /** @class */ (function () {
    function ryw_Utilit() {
    }
    ryw_Utilit.ryw_Lerp = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    ryw_Utilit.ryw_lerpEulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = ryw_Utilit.ryw_Lerp(form, to, delta);
        return next;
    };
    ryw_Utilit.ryw_getRotationByDir = function (v) {
        var dotValue = (v.x * ryw_Utilit.ryw_poinDown.x) + (v.y * ryw_Utilit.ryw_poinDown.y);
        var cos = dotValue / (v.distance(0, 0) * ryw_Utilit.ryw_poinDown.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    ryw_Utilit.ryw_getRotationByDirOn3DSpace = function (v) {
        var dotValue = (v.x * ryw_Utilit.ryw_poinUp.x) + (v.y * ryw_Utilit.ryw_poinUp.y);
        var cos = dotValue / (v.distance(0, 0) * ryw_Utilit.ryw_poinUp.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    ryw_Utilit.ryw_getDirByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    ryw_Utilit.ryw_getDirDirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    ryw_Utilit.ryw_getDirScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    ryw_Utilit.ryw_setSpOnParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    ryw_Utilit.ryw_getPointToLineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    ryw_Utilit.ryw_isIphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    ryw_Utilit.ryw_isIphone = function () {
        return Laya.Browser.onIPhone;
    };
    ryw_Utilit.ryw_getChild = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = ryw_Utilit.ryw_getChild(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    ryw_Utilit.ryw_forEachChild = function (node, each) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            each(child);
            ryw_Utilit.ryw_forEachChild(child, each);
        }
    };
    ryw_Utilit.ryw_OriginStageWidth = 1334;
    ryw_Utilit.ryw_OriginStageHeight = 750;
    ryw_Utilit.ryw_grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    ryw_Utilit.ryw_grayscaleFilter = new Laya.ColorFilter(ryw_Utilit.ryw_grayscaleMat);
    ryw_Utilit.ryw_poinDown = new Laya.Point(0, -1);
    ryw_Utilit.ryw_poinUp = new Laya.Point(0, 1);
    return ryw_Utilit;
}());
exports.default = ryw_Utilit;
},{}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var ryw_ButtonAnim = /** @class */ (function (_super) {
    __extends(ryw_ButtonAnim, _super);
    function ryw_ButtonAnim() {
        var _this = _super.call(this) || this;
        _this.ryw_useSound = true;
        return _this;
    }
    ryw_ButtonAnim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.ryw_onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.ryw_onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.ryw_onUp);
    };
    ryw_ButtonAnim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ryw_ButtonAnim.prototype.ryw_onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.ryw_useSound) {
            SoundMgr_1.default.ryw_instance.ryw_playSound("anniu");
        }
    };
    ryw_ButtonAnim.prototype.ryw_onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return ryw_ButtonAnim;
}(Laya.Script));
exports.default = ryw_ButtonAnim;
},{"../Mgr/SoundMgr":29}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {ryw_ViewBase}
 */
var ryw_ClickGetPrize = /** @class */ (function (_super) {
    __extends(ryw_ClickGetPrize, _super);
    function ryw_ClickGetPrize() {
        var _this = _super.call(this) || this;
        _this.ryw__totalClickTimer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this.ryw__needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this.ryw__bannerClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    // private _wudianLoadFlag: boolean;
    ryw_ClickGetPrize.prototype.onAwake = function () {
        this.ryw__click_Btn = this.owner.getChildByName("Click_Btn");
        this.ryw__click_Btn.on(Laya.Event.CLICK, this, this.ryw_ButtonClicked);
        this.ryw__arrow_Img = this.ryw__click_Btn.getChildByName("Arrow_Img");
        this.ryw__bg = this.owner.getChildByName("BG");
        this.ryw__open_Btn = this.ryw__bg.getChildByName("Open_Btn");
        this.ryw__getPrize_View = this.owner.getChildByName("GetPrize_View");
        this.ryw__prizeCount_Text = this.ryw__getPrize_View.getChildByName("PrizeCount_Text");
        this.ryw__confirm_Btn = this.ryw__getPrize_View.getChildByName("Confirm_Btn");
        this.ryw__getPrize_View.visible = false;
        this.ryw__clickTime_PBar = this.ryw__bg.getChildByName("ClickTime_PBar");
        this.ryw__clickTime_PBar$Bar = this.ryw__clickTime_PBar.getChildByName("ClickTime_PBar$Bar");
        this.ryw__clickBarOriginalWidth = this.ryw__clickTime_PBar$Bar.width;
        this.ryw__bannerAd_View = this.owner.getChildByName("BannerAd_View");
        this.ryw__clickTime_PBar$Bar.width = 0;
        this.ryw__clickTime = 0;
        this.ryw__totalClickTime = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
    };
    ryw_ClickGetPrize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this.ryw__arrowUp) {
            this.ryw__arrow_Img.top += Laya.timer.delta / 5;
            if (this.ryw__arrow_Img.top > -140) {
                this.ryw__arrowUp = false;
            }
        }
        else {
            this.ryw__arrow_Img.top -= Laya.timer.delta / 5;
            if (this.ryw__arrow_Img.top < -180) {
                this.ryw__arrowUp = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this.ryw__bannerClicked) {
            var spd = 2 + (this.ryw__clickTime_PBar$Bar.width / this.ryw__clickBarOriginalWidth) * 6;
            if (this.ryw__clickTime_PBar$Bar.width >= spd) {
                this.ryw__clickTime_PBar$Bar.width -= spd;
            }
            if ((this.ryw__clickTime_PBar$Bar.width / this.ryw__clickBarOriginalWidth) + 0.1 < (this.ryw__clickTime / this.ryw__needClickTime)) {
                this.ryw__clickTime--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    ryw_ClickGetPrize.prototype.ryw_openView = function (data) {
        this.ryw__compeletFunction = data.Complete;
        this.ryw__prizeCount = data.PrizeCount;
        _super.prototype.ryw_openView.call(this, data);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    ryw_ClickGetPrize.prototype.ryw_OpenPrizeWindow = function () {
        this.ryw__bg.visible = false;
        var self = this;
        this.ryw__prizeCount_Text.text = this.ryw__prizeCount.toString();
        this.ryw__getPrize_View.visible = true;
        /* 确认按钮 */
        this.ryw__confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self.ryw__compeletFunction) {
                self.ryw__compeletFunction();
            }
            self.ryw_closeView();
        });
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    ryw_ClickGetPrize.prototype.ryw_ShowBanner = function () {
        console.log("AD_WudianBanner_Show");
        CachedWXBannerAd_1.default.ryw_show();
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    ryw_ClickGetPrize.prototype.ryw_ButtonClicked = function () {
        this.ryw__clickTime++;
        this.ryw__totalClickTime++;
        //nanner一直没加载成功,保持进度条
        if (this.ryw__clickTime > this.ryw__needClickTime) {
            this.ryw__clickTime = this.ryw__needClickTime;
        }
        if (this.ryw__clickTime >= this.ryw__bannerClickTime /*&& this._wudianLoadFlag*/) {
            if (this.ryw__clickTime >= this.ryw__needClickTime) {
                this.ryw__clickTime = this.ryw__needClickTime - 1;
            }
            this.ryw__bannerClicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.ryw_ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.ryw_BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this.ryw__totalClickTime > this.ryw__totalClickTimer) {
            console.log("用户一直没点到，放他一马", this.ryw__totalClickTime);
            this.ryw_BannerClicked();
        }
        var progress = (this.ryw__clickTime / this.ryw__needClickTime) * this.ryw__clickBarOriginalWidth;
        this.ryw__clickTime_PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    ryw_ClickGetPrize.prototype.ryw_BannerClicked = function () {
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_WudianBanner_Hide);
        this.ryw__bannerClicked = true;
        this.ryw__clickTime = this.ryw__needClickTime;
        this.ryw__clickTime_PBar$Bar.width = this.ryw__clickBarOriginalWidth;
        this.ryw__click_Btn.visible = false;
        this.ryw__open_Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.ryw_OpenPrizeWindow();
    };
    ryw_ClickGetPrize.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        CachedWXBannerAd_1.default.ryw_hide();
    };
    return ryw_ClickGetPrize;
}(ViewBase_1.default));
exports.default = ryw_ClickGetPrize;
},{"../../CachedWXBannerAd":4,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../View/ViewBase":87}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var ryw_UniversalBottomZone = /** @class */ (function (_super) {
    __extends(ryw_UniversalBottomZone, _super);
    function ryw_UniversalBottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ryw_UniversalBottomZone.prototype.onAwake = function () {
        this.ryw__ownerSprite = this.owner;
        this.ryw__autoZone = this.ryw__ownerSprite.getChildByName("AutoZone");
        this.ryw__loopADZone = this.ryw__ownerSprite.getChildByName("LoopAD");
        this.ryw__bannerADZone = this.ryw__ownerSprite.getChildByName("BannerAD");
        this.ryw__bannerAd = this.ryw__bannerADZone.getComponent(BannerAdView_1.default);
    };
    ryw_UniversalBottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this.ryw__autoZone.bottom = this.ryw__loopADZone.height + this.ryw__bannerADZone.height;
            this.ryw__loopADZone.bottom = this.ryw__bannerADZone.height;
            this.ryw__bannerADZone.visible = true;
        }
        else {
            this.ryw__autoZone.bottom = this.ryw__loopADZone.height;
            this.ryw__loopADZone.bottom = 0;
            this.ryw__bannerADZone.visible = false;
        }
    };
    ryw_UniversalBottomZone.prototype.onDisable = function () {
    };
    ryw_UniversalBottomZone.prototype.onUpdate = function () {
        if (!this.ryw__bannerADZone.visible) {
            this.ryw__bannerAd.ryw_clearWXBaner();
        }
    };
    return ryw_UniversalBottomZone;
}(Laya.Script));
exports.default = ryw_UniversalBottomZone;
},{"../../ShareAd/View/BannerAdView":51}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isIViewStateListener(element) {
    if ((null != element.onViewShow && typeof (element.onViewShow) == "function")
        && (null != element.onViewHide && typeof (element.onViewHide) == "function")) {
        return true;
    }
    return false;
}
exports.isIViewStateListener = isIViewStateListener;
},{}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var LogoAni_1 = require("./LogoAni");
var ryw_LoadingView = /** @class */ (function (_super) {
    __extends(ryw_LoadingView, _super);
    function ryw_LoadingView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__processWidth = 0;
        _this.ryw__logoAni = null;
        return _this;
    }
    ryw_LoadingView.prototype.onAwake = function () {
        this.ryw__bg = this.owner.getChildByName("Bg");
        this.ryw__bottomZone = this.ryw__bg.getChildByName("BottomZone");
        this.ryw__processBarBg = this.ryw__bottomZone.getChildByName("processBarBg");
        this.ryw__processBar = this.ryw__processBarBg.getChildByName("processBar");
        this.ryw__processWidth = this.ryw__processBar.width;
        this.ryw__logoAni = this.ryw__bottomZone.getChildByName("LogoAni").getComponent(LogoAni_1.default);
    };
    ryw_LoadingView.prototype.onStart = function () {
        var _this = this;
        Laya.timer.once(250, this, function () {
            _this.ryw__logoAni.ryw_playAni();
        });
    };
    ryw_LoadingView.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
    };
    ryw_LoadingView.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
    };
    ryw_LoadingView.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
    };
    ryw_LoadingView.prototype.onUpdate = function () {
        this.ryw__bg.width = Laya.stage.width;
        this.ryw__bg.height = Laya.stage.height;
    };
    ryw_LoadingView.prototype.ryw_setProcess = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this.ryw__processWidth * process;
        if (width < 1)
            width = 1;
        this.ryw__processBar.width = width;
    };
    return ryw_LoadingView;
}(ViewBase_1.default));
exports.default = ryw_LoadingView;
},{"../ViewBase":87,"./LogoAni":62}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_LogoAni = /** @class */ (function (_super) {
    __extends(ryw_LogoAni, _super);
    function ryw_LogoAni() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__aniSprites = [];
        _this.ryw__aniSpriteOriginPos = [];
        return _this;
    }
    ryw_LogoAni.prototype.onAwake = function () {
        for (var i = 0; i < this.owner.numChildren; ++i) {
            var child = this.owner.getChildAt(i);
            child.alpha = 0;
            this.ryw__aniSprites.push(child);
            this.ryw__aniSpriteOriginPos.push(new Laya.Point(child.x, child.y));
        }
    };
    ryw_LogoAni.prototype.ryw_playAni = function () {
        if (Laya.Browser.onQGMiniGame) {
            for (var i = 0; i < this.ryw__aniSprites.length; ++i) {
                this.ryw__aniSprites[i].visible = false;
            }
            return;
        }
        var _loop_1 = function (i) {
            var isLast = i == (this_1.ryw__aniSprites.length - 1) ? true : false;
            var sp = this_1.ryw__aniSprites[i];
            var originPos = this_1.ryw__aniSpriteOriginPos[i];
            sp.alpha = 0;
            sp.y += originPos.y + 50;
            var self_1 = this_1;
            Laya.Tween.to(sp, {
                y: originPos.y,
                alpha: 1
            }, 450, Laya.Ease.elasticOut, Laya.Handler.create(this_1, function () {
                if (isLast) {
                    Laya.timer.once(300, self_1, function () {
                        self_1.ryw_playAni();
                    });
                }
            }), i * 80);
        };
        var this_1 = this;
        for (var i = 0; i < this.ryw__aniSprites.length; ++i) {
            _loop_1(i);
        }
    };
    return ryw_LogoAni;
}(Laya.Script));
exports.default = ryw_LogoAni;
},{}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var AppConfig_1 = require("../../../AppConfig");
var ryw_QQGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_QQGameFailViewTemplate, _super);
    function ryw_QQGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__backBtn = null;
        _this.ryw__continueBtn = null;
        _this.ryw__clickTag = false;
        _this.ryw__clickTimingTag = false;
        return _this;
    }
    ryw_QQGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
        }
        this.ryw__backBtn = this.ryw__centerZone.getChildByName("BackBtn");
        this.ryw__continueBtn = this.ryw__centerZone.getChildByName("ContinueBtn");
     
    };
    ryw_QQGameFailViewTemplate.prototype.onStart = function () {
        
        _super.prototype.onStart.call(this);
        var self = this;
        if (WudianMgr_1.default.ryw_WudianFlag && AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions) {
            if (1 == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_weiyi) {
                var yPos = this.ryw__centerZone.height - 150;
                this.ryw__backBtn.y = yPos;
                this.ryw__continueBtn.y = yPos;
            }
            var excute_1 = function () {
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, self, self.ryw_BtnUp);
            };
            if (1 == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_box) {
                QQMiniGameAPI_1.default.ryw_showAppBoxAd(function () {
                    excute_1();
                }, function () {
                    excute_1();
                });
            }
            else {
                excute_1();
            }
        }
    };
    ryw_QQGameFailViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__continueBtn.on(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
      
    };
    ryw_QQGameFailViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__continueBtn.off(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_QQGameFailViewTemplate.prototype.ryw_onBackBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_QQGameFailViewTemplate.prototype.ryw_onContinueBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_QQGameFailViewTemplate.prototype.ryw_BannerUp = function () {
        //todo：显示Banner
    };
    ryw_QQGameFailViewTemplate.prototype.ryw_BtnUp = function () {
        this.ryw__clickTag = true;
        this.ryw__backBtn.y = 720;
        this.ryw__continueBtn.y = 720;
    };
    ryw_QQGameFailViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return ryw_QQGameFailViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = ryw_QQGameFailViewTemplate;
},{"../../../AppConfig":2,"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":32,"../../../QQMiniGameAPI":49,"../../../Utilit":56,"../QQTemplateViewBase":69}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var AppConfig_1 = require("../../../AppConfig");
var ryw_QQGameWinViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_QQGameWinViewTemplate, _super);
    function ryw_QQGameWinViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__backBtn = null;
        _this.ryw__nextBtn = null;
        _this.ryw__clickTag = false;
        _this.ryw__clickTimingTag = false;
        return _this;
    }
    ryw_QQGameWinViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
        }
        this.ryw__backBtn = this.ryw__centerZone.getChildByName("BackBtn");
        this.ryw__nextBtn = this.ryw__centerZone.getChildByName("NextBtn");
    };
    ryw_QQGameWinViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        var self = this;
        if (WudianMgr_1.default.ryw_WudianFlag && AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions) {
            if (1 == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_weiyi) {
                var yPos = this.ryw__centerZone.height - 150;
                this.ryw__backBtn.y = yPos;
                this.ryw__nextBtn.y = yPos;
            }
            var excute_1 = function () {
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, self, self.ryw_BtnUp);
            };
            if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_box == 1) {
                QQMiniGameAPI_1.default.ryw_showAppBoxAd(function () {
                    excute_1();
                }, function () {
                    excute_1();
                });
            }
            else {
                excute_1();
            }
        }
    };
    ryw_QQGameWinViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__nextBtn.on(Laya.Event.CLICK, this, this.ryw_onNextBtn);
    };
    ryw_QQGameWinViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__nextBtn.off(Laya.Event.CLICK, this, this.ryw_onNextBtn);
    };
    ryw_QQGameWinViewTemplate.prototype.ryw_onBackBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_QQGameWinViewTemplate.prototype.ryw_onNextBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_QQGameWinViewTemplate.prototype.ryw_BannerUp = function () {
        //todo：显示Banner
    };
    ryw_QQGameWinViewTemplate.prototype.ryw_BtnUp = function () {
        this.ryw__clickTag = true;
        this.ryw__backBtn.y = 720;
        this.ryw__nextBtn.y = 720;
    };
    ryw_QQGameWinViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return ryw_QQGameWinViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = ryw_QQGameWinViewTemplate;
},{"../../../AppConfig":2,"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":32,"../../../QQMiniGameAPI":49,"../../../Utilit":56,"../QQTemplateViewBase":69}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var ryw_QQInGameViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_QQInGameViewTemplate, _super);
    function ryw_QQInGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        return _this;
    }
    ryw_QQInGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        else {
            this.ryw__centerZone.top = this.ryw__centerZone.top - 200;
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
    };
    ryw_QQInGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ryw_QQInGameViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
    };
    ryw_QQInGameViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
    };
    return ryw_QQInGameViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = ryw_QQInGameViewTemplate;
},{"../../../Utilit":56,"../QQTemplateViewBase":69}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var ryw_QQMainViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_QQMainViewTemplate, _super);
    function ryw_QQMainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__startBtn = null;
        _this.ryw__levelNum = null;
        _this.ryw__moneyNum = null;
        _this.ryw__moreGameBtn = null;
        return _this;
    }
    ryw_QQMainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        this.ryw__moreGameBtn = this.ryw__centerZone.getChildByName("MoreGameBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        else {
            //this.ryw__centerZone.top =  this.ryw__centerZone.top - 100;
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        this.ryw__startBtn = this.ryw__centerZone.getChildByName("StartBtn");
        this.ryw__levelNum = this.ryw__centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this.ryw__moneyNum = this.ryw__centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    ryw_QQMainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this.ryw__moneyNum.value = String(User_1.default.ryw_getMoney());
        this.ryw__levelNum.value = String(User_1.default.ryw_getLeveNum());
    };
    ryw_QQMainViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__startBtn.on(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        this.ryw__moreGameBtn.on(Laya.Event.CLICK, this, this.ryw_onMoreGameBtn);
        EventMgr_1.default.ryw_instance.ryw_regEvemt(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
    };
    ryw_QQMainViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__startBtn.off(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        this.ryw__moreGameBtn.off(Laya.Event.CLICK, this, this.ryw_onMoreGameBtn);
        EventMgr_1.default.ryw_instance.ryw_removeEvent(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
    };
    ryw_QQMainViewTemplate.prototype.ryw_onStartBtn = function () {
    };
    ryw_QQMainViewTemplate.prototype.ryw_onMoreGameBtn = function () {
        QQMiniGameAPI_1.default.ryw_showAppBoxAd(function () {
        });
    };
    ryw_QQMainViewTemplate.prototype.ryw_onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this.ryw__moneyNum.value = String(curr);
    };
    return ryw_QQMainViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = ryw_QQMainViewTemplate;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../QQMiniGameAPI":49,"../../../User/User":55,"../../../Utilit":56,"../QQTemplateViewBase":69}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var CachedQQBannerAd_1 = require("../../../CachedQQBannerAd");
var AppConfig_1 = require("../../../AppConfig");
var ryw_QQCrazyClick = /** @class */ (function (_super) {
    __extends(ryw_QQCrazyClick, _super);
    function ryw_QQCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__clickBar = null;
        _this.ryw__totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this.ryw__needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this.ryw__bannerClickTime = Math.floor(Math.random() * 5) + 2; //点多少次开始显示bannerr套路用户 
        return _this;
    }
    ryw_QQCrazyClick.prototype.onAwake = function () {
        var _this = this;
        this.ryw__click_Btn = this.owner.getChildByName("Click_Btn");
        this.ryw__click_Btn.on(Laya.Event.CLICK, this, this.ryw_ButtonClicked);
        this.ryw__arrow_Img = this.ryw__click_Btn.getChildByName("Arrow_Img");
        this.ryw__getPrize_View = this.owner.getChildByName("GetPrize_View");
        this.ryw__prizeCount_Text = this.ryw__getPrize_View.getChildByName("PrizeCount_Text");
        this.ryw__confirm_Btn = this.ryw__getPrize_View.getChildByName("Confirm_Btn");
        this.ryw__getPrize_View.visible = false;
        this.ryw__clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this.ryw__clickBarOriginalWidth = this.ryw__clickBar.width;
        this.ryw__clickBar.width = 0;
        this.ryw__clickTime = 0;
        this.ryw__totalClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.ryw_drgon = template.buildArmature();
                self.owner.addChild(self.ryw_drgon);
                self.ryw_drgon.x = 375;
                self.ryw_drgon.y = 610;
                self.ryw_drgon.scaleX = 2;
                self.ryw_drgon.scaleY = 2;
                self.ryw_drgon.parent.setChildIndex(self.ryw_drgon, 1);
                self.ryw_drgon.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    ryw_QQCrazyClick.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        Laya.stage.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ryw_QQCrazyClick.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        Laya.stage.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ryw_QQCrazyClick.prototype.onUpdate = function () {
        if (this.ryw__arrowUp) {
            this.ryw__arrow_Img.top += Laya.timer.delta / 5;
            if (this.ryw__arrow_Img.top > -140) {
                this.ryw__arrowUp = false;
            }
        }
        else {
            this.ryw__arrow_Img.top -= Laya.timer.delta / 5;
            if (this.ryw__arrow_Img.top < -180) {
                this.ryw__arrowUp = true;
            }
        }
        if (!this.ryw__bannerClicked) {
            var spd = 2 + (this.ryw__clickBar.width / this.ryw__clickBarOriginalWidth) * 4;
            if (this.ryw__clickBar.width >= spd) {
                this.ryw__clickBar.width -= spd;
            }
            if ((this.ryw__clickBar.width / this.ryw__clickBarOriginalWidth) + 0.1 < (this.ryw__clickTime / this.ryw__needClickTime)) {
                this.ryw__clickTime--;
            }
        }
    };
    ryw_QQCrazyClick.prototype.ryw_openView = function (data) {
        this.ryw__compeletFunction = data.Complete;
        this.ryw__prizeCount = data.PrizeCount;
        _super.prototype.ryw_openView.call(this, data);
    };
    ryw_QQCrazyClick.prototype.ryw_OpenPrizeWindow = function () {
        var self = this;
        this.ryw__prizeCount_Text.text = this.ryw__prizeCount.toString();
        this.ryw__getPrize_View.visible = true;
        this.ryw__confirm_Btn.once(Laya.Event.CLICK, this, function () {
            CachedQQBannerAd_1.default.hide();
            if (self.ryw__compeletFunction) {
                self.ryw__compeletFunction();
            }
            self.ryw_closeView();
        });
    };
    ryw_QQCrazyClick.prototype.ryw_ShowBanner = function () {
        if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_kuangdianBanner == 1
            && AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions) {
            CachedQQBannerAd_1.default.show();
        }
    };
    ryw_QQCrazyClick.prototype.ryw_ButtonClicked = function () {
        var _this = this;
        this.ryw__clickTime++;
        this.ryw__totalClickTime++;
        if (null != this.ryw_drgon) {
            this.ryw_drgon.play(1, false);
            this.ryw_drgon.once(Laya.Event.STOPPED, this, function () {
                _this.ryw_drgon.play(0, true);
            });
        }
        if (this.ryw__clickTime > this.ryw__needClickTime) {
            this.ryw__clickTime = this.ryw__needClickTime;
        }
        if (this.ryw__clickTime >= this.ryw__bannerClickTime) {
            if (this.ryw__clickTime >= this.ryw__needClickTime) {
                this.ryw__clickTime = this.ryw__needClickTime - 1;
            }
            if (this.ryw__bannerClicked) {
                return;
            }
            this.ryw__bannerClicked = true;
            this.ryw_ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.ryw_BannerClicked();
            });
        }
        else if (this.ryw__totalClickTime > this.ryw__totalClickTimer) {
            this.ryw_ShowBanner();
            this.ryw_BannerClicked();
        }
        var progress = (this.ryw__clickTime / this.ryw__needClickTime) * this.ryw__clickBarOriginalWidth;
        this.ryw__clickBar.width = progress;
    };
    ryw_QQCrazyClick.prototype.ryw_BannerClicked = function () {
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_WudianBanner_Hide);
        this.ryw__bannerClicked = true;
        this.ryw__clickTime = this.ryw__needClickTime;
        this.ryw__clickBar.width = this.ryw__clickBarOriginalWidth;
        this.ryw__click_Btn.visible = false;
        this.ryw_OpenPrizeWindow();
    };
    ryw_QQCrazyClick.prototype.onDestroy = function () {
        if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_kuangdianBanner == 1
            && AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions) {
            CachedQQBannerAd_1.default.hide();
        }
    };
    ryw_QQCrazyClick.prototype.onFocusChange = function () {
        if (null != this.ryw_drgon) {
            this.ryw_drgon.play(0, true);
        }
    };
    return ryw_QQCrazyClick;
}(ViewBase_1.default));
exports.default = ryw_QQCrazyClick;
},{"../../../AppConfig":2,"../../../CachedQQBannerAd":3,"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../View/ViewBase":87}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var AppConfig_1 = require("../../../AppConfig");
var ryw_QQCrazyClick2 = /** @class */ (function (_super) {
    __extends(ryw_QQCrazyClick2, _super);
    function ryw_QQCrazyClick2() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__clickBar = null;
        _this.ryw__totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this.ryw__needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this.ryw__bannerClickTime = Math.floor(Math.random() * 5) + 2; //点多少次开始显示bannerr套路用户 
        _this.ryw__clickBtn = null;
        return _this;
    }
    ryw_QQCrazyClick2.prototype.onAwake = function () {
        this.ryw__getPrize_View = this.owner.getChildByName("GetPrize_View");
        this.ryw__prizeCount_Text = this.ryw__getPrize_View.getChildByName("PrizeCount_Text");
        this.ryw__confirm_Btn = this.ryw__getPrize_View.getChildByName("Confirm_Btn");
        this.ryw__getPrize_View.visible = false;
        this.ryw__clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this.ryw__clickBarOriginalWidth = this.ryw__clickBar.width;
        this.ryw__clickBar.width = 0;
        this.ryw__clickTime = 0;
        this.ryw__totalClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(self, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(self, function (bytes) {
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.ryw_drgon = template.buildArmature();
                self.owner.addChild(self.ryw_drgon);
                self.ryw_drgon.x = 375;
                self.ryw_drgon.y = 610;
                self.ryw_drgon.scaleX = 2;
                self.ryw_drgon.scaleY = 2;
                self.ryw_drgon.parent.setChildIndex(self.ryw_drgon, 1);
                self.ryw_drgon.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
        Laya.loader.load("ClickGetPrize/NewProject.png", Laya.Handler.create(self, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/NewProject.sk", Laya.Handler.create(self, function (bytes) {
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                var finger = template.buildArmature();
                self.owner.addChild(finger);
                finger.x = 360;
                finger.y = 617;
                finger.parent.setChildIndex(finger, 2);
                finger.play(0, true);
                self.ryw__clickBtn = new Laya.Clip();
                self.owner.addChild(self.ryw__clickBtn);
                self.ryw__clickBtn.x = 360 - 100,
                    self.ryw__clickBtn.y = 617 - 100,
                    self.ryw__clickBtn.width = 200,
                    self.ryw__clickBtn.height = 200,
                    self.ryw__clickBtn.parent.setChildIndex(self.ryw__clickBtn, 3);
                self.ryw__clickBtn.on(Laya.Event.CLICK, self, self.ButtonClicked);
                console.log("手指动画 加载完成!!!!", template);
            }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
    };
    ryw_QQCrazyClick2.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        Laya.stage.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ryw_QQCrazyClick2.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        Laya.stage.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ryw_QQCrazyClick2.prototype.onUpdate = function () {
        if (!this.ryw__bannerClicked) {
            var spd = 2 + (this.ryw__clickBar.width / this.ryw__clickBarOriginalWidth) * 4;
            if (this.ryw__clickBar.width >= spd) {
                this.ryw__clickBar.width -= spd;
            }
            if ((this.ryw__clickBar.width / this.ryw__clickBarOriginalWidth) + 0.1 < (this.ryw__clickTime / this.ryw__needClickTime)) {
                this.ryw__clickTime--;
            }
        }
    };
    ryw_QQCrazyClick2.prototype.ryw_openView = function (data) {
        this.ryw__compeletFunction = data.Complete;
        this.ryw__prizeCount = data.PrizeCount;
        _super.prototype.ryw_openView.call(this, data);
    };
    ryw_QQCrazyClick2.prototype.ryw_OpenPrizeWindow = function () {
        var self = this;
        this.ryw__prizeCount_Text.text = this.ryw__prizeCount.toString();
        this.ryw__getPrize_View.visible = true;
        this.ryw__confirm_Btn.once(Laya.Event.CLICK, this, function () {
            if (self.ryw__compeletFunction) {
                self.ryw__compeletFunction();
            }
            self.ryw_closeView();
        });
    };
    ryw_QQCrazyClick2.prototype.ryw_ShowBanner = function () {
        if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_kuangdianBox == 1
            && AppConfig_1.default.ryw_Versions == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_qqcfg.ryw_qqversions) {
            QQMiniGameAPI_1.default.ryw_showAppBoxAd(function () {
            });
        }
    };
    ryw_QQCrazyClick2.prototype.ButtonClicked = function () {
        var _this = this;
        this.ryw__clickTime++;
        this.ryw__totalClickTime++;
        if (null != this.ryw_drgon) {
            this.ryw_drgon.play(1, false);
            this.ryw_drgon.once(Laya.Event.STOPPED, this, function () {
                _this.ryw_drgon.play(0, true);
            });
        }
        if (this.ryw__clickTime > this.ryw__needClickTime) {
            this.ryw__clickTime = this.ryw__needClickTime;
        }
        if (this.ryw__clickTime >= this.ryw__bannerClickTime) {
            if (this.ryw__clickTime >= this.ryw__needClickTime) {
                this.ryw__clickTime = this.ryw__needClickTime - 1;
            }
            if (this.ryw__bannerClicked) {
                return;
            }
            this.ryw__bannerClicked = true;
            this.ryw_ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.ryw_BannerClicked();
            });
        }
        else if (this.ryw__totalClickTime > this.ryw__totalClickTimer) {
            this.ryw_ShowBanner();
            this.ryw_BannerClicked();
        }
        var progress = (this.ryw__clickTime / this.ryw__needClickTime) * this.ryw__clickBarOriginalWidth;
        this.ryw__clickBar.width = progress;
    };
    ryw_QQCrazyClick2.prototype.ryw_BannerClicked = function () {
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_WudianBanner_Hide);
        this.ryw__bannerClicked = true;
        this.ryw__clickTime = this.ryw__needClickTime;
        this.ryw__clickBar.width = this.ryw__clickBarOriginalWidth;
        this.ryw__clickBtn.visible = false;
        this.ryw_OpenPrizeWindow();
    };
    ryw_QQCrazyClick2.prototype.onDestroy = function () {
    };
    ryw_QQCrazyClick2.prototype.onFocusChange = function () {
        if (null != this.ryw_drgon) {
            this.ryw_drgon.play(0, true);
        }
    };
    return ryw_QQCrazyClick2;
}(ViewBase_1.default));
exports.default = ryw_QQCrazyClick2;
},{"../../../AppConfig":2,"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../QQMiniGameAPI":49,"../../../View/ViewBase":87}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ryw_QQTemplateViewBase = /** @class */ (function (_super) {
    __extends(ryw_QQTemplateViewBase, _super);
    function ryw_QQTemplateViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ryw_QQTemplateViewBase.prototype.onAwake = function () {
    };
    ryw_QQTemplateViewBase.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
    };
    ryw_QQTemplateViewBase.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
    };
    return ryw_QQTemplateViewBase;
}(ViewBase_1.default));
exports.default = ryw_QQTemplateViewBase;
},{"../ViewBase":87}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var ryw_TTGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_TTGameFailViewTemplate, _super);
    function ryw_TTGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__clickTag = false;
        _this.ryw__clickTimingTag = false;
        _this.ryw__moreGameBtn = null;
        _this.ryw__shareBtn = null;
        _this.ryw__backBtn = null;
        _this.ryw__okBtn = null;
        _this.ryw__videoBtn = null;
        return _this;
    }
    ryw_TTGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
        }
        this.ryw__moreGameBtn = this.ryw__centerZone.getChildByName("MoreGameBtn");
        this.ryw__shareBtn = this.ryw__centerZone.getChildByName("ShareBtn");
        this.ryw__backBtn = this.ryw__centerZone.getChildByName("BackBtn");
        this.ryw__okBtn = this.ryw__centerZone.getChildByName("OkBtn");
        this.ryw__videoBtn = this.ryw__centerZone.getChildByName("VideoBtn");
        this.ryw__moreGameBtn.visible = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_ttcfg.ryw_moreGameSwitch == 1;
    };
    ryw_TTGameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.ryw_WudianFlag) {
            var yPos = this.ryw__centerZone.height - 150;
            this.ryw__backBtn.y = yPos;
            this.ryw__okBtn.y = yPos;
            this.ryw__videoBtn.y = yPos;
        }
        var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
        if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_ttcfg.ryw_luping == 1) {
            TTAPI_1.default.ryw_shareRecord(function () {
            }, function () {
            });
        }
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__okBtn.on(Laya.Event.CLICK, this, this.ryw_onOkBtn);
        this.ryw__videoBtn.on(Laya.Event.CLICK, this, this.ryw_onOkBtn);
        this.ryw__moreGameBtn.on(Laya.Event.CLICK, this, this.ryw_onMoreGameBtn);
        this.ryw__shareBtn.on(Laya.Event.CLICK, this, this.ryw_onShareBtn);
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__okBtn.off(Laya.Event.CLICK, this, this.ryw_onOkBtn);
        this.ryw__videoBtn.off(Laya.Event.CLICK, this, this.ryw_onOkBtn);
        this.ryw__moreGameBtn.off(Laya.Event.CLICK, this, this.ryw_onMoreGameBtn);
        this.ryw__shareBtn.off(Laya.Event.CLICK, this, this.ryw_onShareBtn);
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_onBackBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_onOkBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_onVideoBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        TTAPI_1.default.ryw_shareRecord(function () {
        }, function () {
        });
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_BannerUp = function () {
        TTAPI_1.default.ryw_showBanner();
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_BtnUp = function () {
        this.ryw__clickTag = true;
        this.ryw__backBtn.y = 720;
        this.ryw__okBtn.y = 720;
        this.ryw__videoBtn.y = 720;
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_onMoreGameBtn = function () {
        TTAPI_1.default.ryw_showMoreGamesModal(function () {
        }, function () {
        });
    };
    ryw_TTGameFailViewTemplate.prototype.ryw_onShareBtn = function () {
        TTAPI_1.default.ryw_share(function () {
        });
    };
    ryw_TTGameFailViewTemplate.prototype.onDestroy = function () {
        TTAPI_1.default.ryw_hideBanner();
    };
    return ryw_TTGameFailViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = ryw_TTGameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":32,"../../../TTAPI":54,"../../../Utilit":56,"../TTTemplateViewBase":74}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TTGameFailViewTemplate_1 = require("../GameFail/TTGameFailViewTemplate");
var ryw_TTGameWinViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_TTGameWinViewTemplate, _super);
    function ryw_TTGameWinViewTemplate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ryw_TTGameWinViewTemplate;
}(TTGameFailViewTemplate_1.default));
exports.default = ryw_TTGameWinViewTemplate;
},{"../GameFail/TTGameFailViewTemplate":70}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var ryw_TTMainViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_TTMainViewTemplate, _super);
    function ryw_TTMainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__startBtn = null;
        _this.ryw__levelNum = null;
        _this.ryw__moneyNum = null;
        _this.ryw__moreGameBtn = null;
        _this.ryw__shareBtn = null;
        return _this;
    }
    ryw_TTMainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        this.ryw__moreGameBtn = this.ryw__centerZone.getChildByName("MoreGameBtn");
        this.ryw__shareBtn = this.ryw__centerZone.getChildByName("ShareBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        else {
            this.ryw__centerZone.top = this.ryw__centerZone.top - 200;
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        this.ryw__startBtn = this.ryw__centerZone.getChildByName("StartBtn");
        this.ryw__levelNum = this.ryw__centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this.ryw__moneyNum = this.ryw__centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
        this.ryw__moreGameBtn.visible = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_ttcfg.ryw_moreGameSwitch == 1;
    };
    ryw_TTMainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this.ryw__moneyNum.value = String(User_1.default.ryw_getMoney());
        this.ryw__levelNum.value = String(User_1.default.ryw_getLeveNum());
    };
    ryw_TTMainViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__startBtn.on(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        EventMgr_1.default.ryw_instance.ryw_regEvemt(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
        this.ryw__moreGameBtn.on(Laya.Event.CLICK, this, this.ryw_onMoreGameBtn);
        this.ryw__shareBtn.on(Laya.Event.CLICK, this, this.ryw_onShareBtn);
    };
    ryw_TTMainViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__startBtn.off(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        EventMgr_1.default.ryw_instance.ryw_removeEvent(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
        this.ryw__moreGameBtn.off(Laya.Event.CLICK, this, this.ryw_onMoreGameBtn);
        this.ryw__shareBtn.off(Laya.Event.CLICK, this, this.ryw_onShareBtn);
    };
    ryw_TTMainViewTemplate.prototype.ryw_onStartBtn = function () {
    };
    ryw_TTMainViewTemplate.prototype.ryw_onMoreGameBtn = function () {
        TTAPI_1.default.ryw_showMoreGamesModal(function () {
        }, function () {
        });
    };
    ryw_TTMainViewTemplate.prototype.ryw_onShareBtn = function () {
        TTAPI_1.default.ryw_share(function () {
        });
    };
    ryw_TTMainViewTemplate.prototype.ryw_onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this.ryw__moneyNum.value = String(curr);
    };
    return ryw_TTMainViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = ryw_TTMainViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../TTAPI":54,"../../../User/User":55,"../../../Utilit":56,"../TTTemplateViewBase":74}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TTAPI_1 = require("../../../TTAPI");
var ryw_TTCrazyClick = /** @class */ (function (_super) {
    __extends(ryw_TTCrazyClick, _super);
    function ryw_TTCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__clickBar = null;
        _this.ryw__totalClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this.ryw__needClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this.ryw__bannerClickTime = Math.floor(Math.random() * 5) + 2; //点多少次开始显示bannerr套路用户   
        return _this;
    }
    ryw_TTCrazyClick.prototype.onAwake = function () {
        var _this = this;
        this.ryw__click_Btn = this.owner.getChildByName("Click_Btn");
        this.ryw__click_Btn.on(Laya.Event.CLICK, this, this.ryw_ButtonClicked);
        this.ryw__arrow_Img = this.ryw__click_Btn.getChildByName("Arrow_Img");
        this.ryw__getPrize_View = this.owner.getChildByName("GetPrize_View");
        this.ryw__prizeCount_Text = this.ryw__getPrize_View.getChildByName("PrizeCount_Text");
        this.ryw__confirm_Btn = this.ryw__getPrize_View.getChildByName("Confirm_Btn");
        this.ryw__getPrize_View.visible = false;
        this.ryw__clickBar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this.ryw__clickBarOriginalWidth = this.ryw__clickBar.width;
        this.ryw__clickBar.width = 0;
        this.ryw__clickTime = 0;
        this.ryw__totalClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.ryw_drgon = template.buildArmature();
                self.owner.addChild(self.ryw_drgon);
                self.ryw_drgon.x = 375;
                self.ryw_drgon.y = 610;
                self.ryw_drgon.scaleX = 2;
                self.ryw_drgon.scaleY = 2;
                self.ryw_drgon.parent.setChildIndex(self.ryw_drgon, 1);
                self.ryw_drgon.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    ryw_TTCrazyClick.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        Laya.stage.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ryw_TTCrazyClick.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        Laya.stage.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    ryw_TTCrazyClick.prototype.onUpdate = function () {
        if (this.ryw__arrowUp) {
            this.ryw__arrow_Img.top += Laya.timer.delta / 5;
            if (this.ryw__arrow_Img.top > -140) {
                this.ryw__arrowUp = false;
            }
        }
        else {
            this.ryw__arrow_Img.top -= Laya.timer.delta / 5;
            if (this.ryw__arrow_Img.top < -180) {
                this.ryw__arrowUp = true;
            }
        }
        if (!this.ryw__bannerClicked) {
            var spd = 2 + (this.ryw__clickBar.width / this.ryw__clickBarOriginalWidth) * 4;
            if (this.ryw__clickBar.width >= spd) {
                this.ryw__clickBar.width -= spd;
            }
            if ((this.ryw__clickBar.width / this.ryw__clickBarOriginalWidth) + 0.1 < (this.ryw__clickTime / this.ryw__needClickTime)) {
                this.ryw__clickTime--;
            }
        }
    };
    ryw_TTCrazyClick.prototype.ryw_openView = function (data) {
        this.ryw__compeletFunction = data.Complete;
        this.ryw__prizeCount = data.PrizeCount;
        _super.prototype.ryw_openView.call(this, data);
    };
    ryw_TTCrazyClick.prototype.ryw_OpenPrizeWindow = function () {
        var self = this;
        this.ryw__prizeCount_Text.text = this.ryw__prizeCount.toString();
        this.ryw__getPrize_View.visible = true;
        this.ryw__confirm_Btn.once(Laya.Event.CLICK, this, function () {
            TTAPI_1.default.ryw_hideBanner();
            if (self.ryw__compeletFunction) {
                self.ryw__compeletFunction();
            }
            self.ryw_closeView();
        });
    };
    ryw_TTCrazyClick.prototype.ryw_ShowBanner = function () {
        if (AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_ttcfg.ryw_kuangdianBanner == 1) {
            TTAPI_1.default.ryw_showBanner();
        }
    };
    ryw_TTCrazyClick.prototype.ryw_ButtonClicked = function () {
        var _this = this;
        this.ryw__clickTime++;
        this.ryw__totalClickTime++;
        if (null != this.ryw_drgon) {
            this.ryw_drgon.play(1, false);
            this.ryw_drgon.once(Laya.Event.STOPPED, this, function () {
                _this.ryw_drgon.play(0, true);
            });
        }
        if (this.ryw__clickTime > this.ryw__needClickTime) {
            this.ryw__clickTime = this.ryw__needClickTime;
        }
        if (this.ryw__clickTime >= this.ryw__bannerClickTime) {
            if (this.ryw__clickTime >= this.ryw__needClickTime) {
                this.ryw__clickTime = this.ryw__needClickTime - 1;
            }
            if (this.ryw__bannerClicked) {
                return;
            }
            this.ryw__bannerClicked = true;
            this.ryw_ShowBanner();
            Laya.timer.once(2000, this, function () {
                this.ryw_BannerClicked();
            });
        }
        else if (this.ryw__totalClickTime > this.ryw__totalClickTimer) {
            this.ryw_ShowBanner();
            this.ryw_BannerClicked();
        }
        var progress = (this.ryw__clickTime / this.ryw__needClickTime) * this.ryw__clickBarOriginalWidth;
        this.ryw__clickBar.width = progress;
    };
    ryw_TTCrazyClick.prototype.ryw_BannerClicked = function () {
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_AD_WudianBanner_Hide);
        this.ryw__bannerClicked = true;
        this.ryw__clickTime = this.ryw__needClickTime;
        this.ryw__clickBar.width = this.ryw__clickBarOriginalWidth;
        this.ryw__click_Btn.visible = false;
        this.ryw_OpenPrizeWindow();
    };
    ryw_TTCrazyClick.prototype.onDestroy = function () {
        TTAPI_1.default.ryw_hideBanner();
    };
    ryw_TTCrazyClick.prototype.onFocusChange = function () {
        if (null != this.ryw_drgon) {
            this.ryw_drgon.play(0, true);
        }
    };
    return ryw_TTCrazyClick;
}(ViewBase_1.default));
exports.default = ryw_TTCrazyClick;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../TTAPI":54,"../../../View/ViewBase":87}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ryw_TTTemplateViewBase = /** @class */ (function (_super) {
    __extends(ryw_TTTemplateViewBase, _super);
    function ryw_TTTemplateViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ryw_TTTemplateViewBase.prototype.onAwake = function () {
    };
    ryw_TTTemplateViewBase.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
    };
    ryw_TTTemplateViewBase.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
    };
    return ryw_TTTemplateViewBase;
}(ViewBase_1.default));
exports.default = ryw_TTTemplateViewBase;
},{"../ViewBase":87}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var ryw_Exprot2ViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_Exprot2ViewTemplate, _super);
    function ryw_Exprot2ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__continueBtn = null;
        _this.ryw__krqVLoopAd = null;
        _this.ryw__KRQ_VLoopAd = null;
        return _this;
    }
    ryw_Exprot2ViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__krqVLoopAd = this.ryw_View.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this.ryw__krqVLoopAd.ryw_useLocalRandom = true;
        this.ryw__krqVLoopAd.ryw_useRandom = false;
        this.ryw__krqVLoopAd.ryw_useMovePause = false;
        this.ryw__krqVLoopAd.ryw_sortDatas = this.ryw_sortDatas;
        this.ryw__continueBtn = this.ryw_View.getChildByName("ContinueBtn");
        this.ryw__continueBtn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_continueBtnDelayTime * 1000, this, function () {
            self.ryw__continueBtn.visible = true;
        });
        this.ryw__KRQ_VLoopAd = this.ryw_View.getChildByName("KRQ_VLoopAd");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__KRQ_VLoopAd.top = this.ryw__KRQ_VLoopAd.top + 75;
        }
    };
    ryw_Exprot2ViewTemplate.prototype.onStart = function () {
        this.ryw__krqVLoopAd.ryw_AdPosID = ShareAd_1.default.ryw_MoreGameLocationID;
        _super.prototype.onStart.call(this);
    };
    ryw_Exprot2ViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__continueBtn.on(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_Exprot2ViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__continueBtn.off(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_Exprot2ViewTemplate.prototype.ryw_onContinueBtn = function () {
    };
    ryw_Exprot2ViewTemplate.prototype.ryw_sortDatas = function (datas) {
        if (null == datas || 0 == datas.length)
            return [];
        var dataDic = {};
        var keys = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                keys.push(data.appid);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var randomIndex = Math.floor(Math.random() * keys.length);
            var temp = keys[randomIndex];
            keys[randomIndex] = key;
            keys[i] = temp;
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var dataArray = dataDic[key];
            for (var j = 0; j < dataArray.length; ++j) {
                var data = dataArray[j];
                var randomIndex = Math.floor(Math.random() * dataArray.length);
                var temp = dataArray[randomIndex];
                dataArray[randomIndex] = data;
                dataArray[j] = temp;
            }
        }
        var res = new Array();
        var ignores = [];
        while (keys.length > 0) {
            var isComplate = true;
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                var isOk = true;
                for (var j = 0; j < ignores.length; ++j) {
                    var ignore = ignores[j];
                    if (ignore == key) {
                        isOk = false;
                        break;
                    }
                }
                if (isOk) {
                    isComplate = false;
                    var data = dataDic[key].shift();
                    res.push(data);
                    ignores.push(key);
                    if (ignores.length > 3) {
                        ignores.shift();
                    }
                    if (dataDic[key].length <= 0) {
                        keys.splice(i, 1);
                        --i;
                        continue;
                    }
                }
                else {
                    continue;
                }
            }
            if (isComplate) {
                for (var j = 0; j < keys.length; ++j) {
                    var key = keys[j];
                    var isOk = true;
                    var dataArray = dataDic[key];
                    ignores.splice(0);
                    for (var h = 0; h < dataArray.length; ++h) {
                        var data = dataArray[h];
                        for (var i = 0; i < res.length; ++i) {
                            ignores.push(null == res[i - 2] ? null : res[i - 2].appid);
                            ignores.push(null == res[i - 1] ? null : res[i - 1].appid);
                            ignores.push(null == res[i] ? null : res[i].appid);
                            ignores.push(null == res[i + 1] ? null : res[i + 1].appid);
                            ignores.push(null == res[i + 2] ? null : res[i + 1].appid);
                            for (var k = 0; k < ignores.length; ++k) {
                                var ignore = ignores[k];
                                if (null != ignore && ignore == key) {
                                    isOk = false;
                                    break;
                                }
                            }
                            if (isOk) {
                                if (null != data) {
                                    var f = res.slice(0, i + 1);
                                    var b = res.slice(i + 1, res.length);
                                    res = f;
                                    res.push(data);
                                    for (var a = 0; a < b.length; ++a) {
                                        res.push(b[a]);
                                    }
                                }
                            }
                        }
                    }
                }
                break;
            }
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                var randomIndex = Math.floor(Math.random() * keys.length);
                var temp = keys[randomIndex];
                keys[randomIndex] = key;
                keys[i] = temp;
            }
        }
        return res;
    };
    return ryw_Exprot2ViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_Exprot2ViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"../../../ShareAd/ShareAd":50,"../../../Utilit":56,"../TemplateViewBase":84}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var ryw_ExportViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_ExportViewTemplate, _super);
    function ryw_ExportViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__continueBtn = null;
        _this.ryw__krqVLoopAd = null;
        return _this;
    }
    ryw_ExportViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__krqVLoopAd = this.ryw_View.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this.ryw__krqVLoopAd.ryw_useMovePause = false;
        this.ryw__continueBtn = this.ryw__krqVLoopAd.ryw_Sprite.getChildByName("ContinueBtn");
        this.ryw__continueBtn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_continueBtnDelayTime * 1000, this, function () {
            self.ryw__continueBtn.visible = true;
        });
    };
    ryw_ExportViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ryw_ExportViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);

        this.ryw__continueBtn.on(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
     
    };
    ryw_ExportViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__continueBtn.off(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_ExportViewTemplate.prototype.ryw_onContinueBtn = function () {
    };
    return ryw_ExportViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_ExportViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"../TemplateViewBase":84}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var User_1 = require("../../../User/User");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var GameMgr_1 = require("../../../Mgr/GameMgr");
var Fiy_1 = require("../../Fiy");
var ryw_GameFailViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_GameFailViewTemplate, _super);
    function ryw_GameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__backBtn = null;
        _this.ryw__continueBtn = null;
        _this.ryw__skipBtn = null;
        _this.ryw__rollSingleAds = new Array();
        _this.ryw__clickTag = false;
        _this.ryw__clickTimingTag = false;
        _this.ryw__banner = null;
        return _this;
    }
    ryw_GameFailViewTemplate.prototype.onAwake = function () {
        
        _super.prototype.onAwake.call(this);
        this.ryw__topZone.visible = false;
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        this.ryw__centerZone.visible = false;
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
        }
        this.ryw__backBtn = this.ryw__centerZone.getChildByName("BackBtn");
        this.ryw__continueBtn = this.ryw__centerZone.getChildByName("ContinueBtn");
        this.ryw__skipBtn = this.ryw__centerZone.getChildByName("SkipBtn");
        this.ryw__backBtn.visible = false;
        this.ryw__continueBtn.visible = false;
        this.ryw__skipBtn.visible = false;
        for (var i = 0; i < this.ryw__centerZone.numChildren; ++i) {
            var ad = this.ryw__centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this.ryw__rollSingleAds.push(ad);
        }
        if (WudianMgr_1.default.ryw_WudianFlag) {
            this.ryw_HistoryBtn.visible = false;
        }
        this.ryw__topZone.visible = true;
        this.ryw__topZone.getChildByName("Tag").visible = true;
        this.ryw__topZone.getChildByName("LoadingText").visible = false;
        this.ryw__centerZone.visible = true;
        //this.ryw__backBtn.visible = true;
        this.ryw__continueBtn.visible = true;
        this.ryw__skipBtn.visible = true;
        
    };
    ryw_GameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.ryw_WudianFlag) {
            var yPos = this.ryw__centerZone.height - 150;
            this.ryw__backBtn.y = yPos;
            this.ryw__continueBtn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1.ryw__rollSingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.ryw_playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this.ryw__rollSingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
    };
    ryw_GameFailViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);
      
        this.ryw__skipBtn.on(Laya.Event.CLICK, this, this.ryw_onSkipBtn);
        this.ryw__continueBtn.on(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
    };
    ryw_GameFailViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__continueBtn.off(Laya.Event.CLICK, this, this.ryw_onContinueBtn);
        this.ryw__skipBtn.off(Laya.Event.CLICK, this, this.ryw_onSkipBtn);
    };
    ryw_GameFailViewTemplate.prototype.ryw_onBackBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_GameFailViewTemplate.prototype.ryw_onContinueBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_GameFailViewTemplate.prototype.ryw_onSkipBtn = function(){
        //  User_1.default.ryw_setLeveNum(User_1.default.ryw_getLeveNum() + 1);
        // GameMgr_1.default.ryw_getInstance().ryw_saveGameData();
        // Fiy_1.default.instance.ondestroyScene();


        //         ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MainView, null, function () {
        //             ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView); //关闭面板
        //         });
            
        
    }
    ryw_GameFailViewTemplate.prototype.ryw_BannerUp = function () {
        var _this = this;
        var self = this;
        WXADMgr_1.default.ryw_getBanner(function (banner) {
            if (null != self.ryw__banner) {
                self.ryw__banner.ryw_hide();
            }
            self.ryw__banner = banner;
            if (null != self.ryw__banner) {
                self.ryw__banner.ryw_show();
            }
            if (_this.isShowHistoryBtn) {
                self.ryw_HistoryBtn.visible = true;
            }
        });
    };
    ryw_GameFailViewTemplate.prototype.ryw_BtnUp = function () {
        this.ryw__clickTag = true;
        this.ryw__backBtn.y = 720;
        this.ryw__continueBtn.y = 720;
    };
    ryw_GameFailViewTemplate.prototype.onDestroy = function () {
        if (null != this.ryw__banner) {
            this.ryw__banner.ryw_hide();
        }
        this.ryw__banner = null;
    };
    ryw_GameFailViewTemplate.prototype.ryw_onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MiniGameView, null, function (v) {
            self.ryw_hide();
            if (null != self.ryw__banner) {
                self.ryw__banner.ryw_hide();
            }
            v.ryw_onCloseEvent = function () {
                if (null != self.ryw_View && !self.ryw_View.destroyed) {
                    self.ryw_show();
                    if (null != self.ryw__banner) {
                        self.ryw__banner.ryw_show();
                    }
                }
            };
        });
    };
    return ryw_GameFailViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_GameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":18,"../../../Mgr/GameMgr":28,"../../../Mgr/ViewMgr":30,"../../../Mgr/WXADMgr":31,"../../../Mgr/WudianMgr":32,"../../Fiy":37,"../../../User/User":55,"../../../Utilit":56,"../TemplateViewBase":84}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var ryw_GameWinViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_GameWinViewTemplate, _super);
    function ryw_GameWinViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__backBtn = null;
        _this.ryw__nextBtn = null;
        _this.ryw__rollSingleAds = new Array();
        _this.ryw__clickTag = false;
        _this.ryw__clickTimingTag = false;
        _this.ryw__banner = null;
        return _this;
    }
    ryw_GameWinViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
        }
        this.ryw__backBtn = this.ryw__centerZone.getChildByName("BackBtn");
        this.ryw__nextBtn = this.ryw__centerZone.getChildByName("NextBtn");
        for (var i = 0; i < this.ryw__centerZone.numChildren; ++i) {
            var ad = this.ryw__centerZone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this.ryw__rollSingleAds.push(ad);
        }
        if (WudianMgr_1.default.ryw_WudianFlag) {
            this.ryw_HistoryBtn.visible = false;
        }
    };
    ryw_GameWinViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.ryw_WudianFlag) {
            var yPos = this.ryw__centerZone.height - 150;
            this.ryw__backBtn.y = yPos;
            this.ryw__nextBtn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1.ryw__rollSingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.ryw_playAni();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this.ryw__rollSingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
        var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
    };
    ryw_GameWinViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__backBtn.on(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__nextBtn.on(Laya.Event.CLICK, this, this.ryw_onNextBtn);
    };
    ryw_GameWinViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__backBtn.off(Laya.Event.CLICK, this, this.ryw_onBackBtn);
        this.ryw__nextBtn.off(Laya.Event.CLICK, this, this.ryw_onNextBtn);
    };
    ryw_GameWinViewTemplate.prototype.ryw_onBackBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_GameWinViewTemplate.prototype.ryw_onNextBtn = function () {
        if (!this.ryw__clickTag && WudianMgr_1.default.ryw_WudianFlag) {
            var self = this;
            if (!this.ryw__clickTimingTag) {
                this.ryw__clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_btnMoveTimer;
                var bannerMoveTimer = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_bannerMoveTimer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.ryw_BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.ryw_BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    ryw_GameWinViewTemplate.prototype.ryw_BannerUp = function () {
        var _this = this;
        var self = this;
        WXADMgr_1.default.ryw_getBanner(function (banner) {
            if (null != self.ryw__banner) {
                self.ryw__banner.ryw_hide();
            }
            self.ryw__banner = banner;
            if (null != self.ryw__banner) {
                self.ryw__banner.ryw_show();
            }
            if (_this.isShowHistoryBtn) {
                self.ryw_HistoryBtn.visible = true;
            }
        });
    };
    ryw_GameWinViewTemplate.prototype.ryw_BtnUp = function () {
        this.ryw__clickTag = true;
        this.ryw__backBtn.y = 720;
        this.ryw__nextBtn.y = 720;
        //this.ryw_HistoryBtn.visible = true;
    };
    ryw_GameWinViewTemplate.prototype.onDestroy = function () {
        if (null != this.ryw__banner) {
            this.ryw__banner.ryw_hide();
        }
        this.ryw__banner = null;
    };
    ryw_GameWinViewTemplate.prototype.ryw_onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MiniGameView, null, function (v) {
            self.ryw_hide();
            if (null != self.ryw__banner) {
                self.ryw__banner.ryw_hide();
            }
            v.ryw_onCloseEvent = function () {
                if (null != self.ryw_View && !self.ryw_View.destroyed) {
                    self.ryw_show();
                    if (null != self.ryw__banner) {
                        self.ryw__banner.ryw_show();
                    }
                }
            };
        });
    };
    return ryw_GameWinViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_GameWinViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":18,"../../../Mgr/ViewMgr":30,"../../../Mgr/WXADMgr":31,"../../../Mgr/WudianMgr":32,"../../../Utilit":56,"../TemplateViewBase":84}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var Utilit_1 = require("../../../Utilit");
var ryw_InGameShowType;
(function (ryw_InGameShowType) {
    ryw_InGameShowType[ryw_InGameShowType["Normal"] = 0] = "Normal";
    ryw_InGameShowType[ryw_InGameShowType["NoLoopAd"] = 1] = "NoLoopAd";
    ryw_InGameShowType[ryw_InGameShowType["NoBannerAd"] = 2] = "NoBannerAd";
})(ryw_InGameShowType = exports.ryw_InGameShowType || (exports.ryw_InGameShowType = {}));
var ryw_InGameViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_InGameViewTemplate, _super);
    function ryw_InGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__krqMain = null;
        return _this;
    }
    ryw_InGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        this.ryw__krqMain = this.ryw_View.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        else {
            this.ryw__centerZone.top = this.ryw__centerZone.top - 200;
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
    };
    ryw_InGameViewTemplate.prototype.ryw_openView = function (data) {
        _super.prototype.ryw_openView.call(this, data);
        if (null != data && null != data.showType) {
            var showType = data.showType;
            switch (showType) {
                case ryw_InGameShowType.Normal:
                    this.ryw__krqMain.ryw_switchState(KRQ_Main_1.ryw_KRQ_MainState.Normal);
                    break;
                case ryw_InGameShowType.NoLoopAd:
                    this.ryw__krqMain.ryw_switchState(KRQ_Main_1.ryw_KRQ_MainState.NoLoopAd);
                    break;
                case ryw_InGameShowType.NoBannerAd:
                    this.ryw__krqMain.ryw_switchState(KRQ_Main_1.ryw_KRQ_MainState.NoBannerAd);
                    break;
            }
        }
    };
    ryw_InGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ryw_InGameViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
    };
    ryw_InGameViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
    };
    return ryw_InGameViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_InGameViewTemplate;
},{"../../../KRQ/ViewCom/KRQ_Main":23,"../../../Utilit":56,"../TemplateViewBase":84}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var ryw_MainViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_MainViewTemplate, _super);
    function ryw_MainViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__krqMain = null;
        _this.ryw__centerZone = null;
        _this.ryw__startBtn = null;
        _this.ryw__skipBtn = null;
        _this.ryw__levelNum = null;
        _this.ryw__moneyNum = null;
        return _this;
    }
    ryw_MainViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__krqMain = this.ryw_View.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        else {
            this.ryw__centerZone.top = this.ryw__centerZone.top - 200;
            if (Utilit_1.default.ryw_isIphoneX()) {
                this.ryw__centerZone.top = this.ryw__centerZone.top + 75;
            }
        }
        this.ryw__startBtn = this.ryw__centerZone.getChildByName("StartBtn");
        this.ryw__skipBtn = this.ryw__centerZone.getChildByName("SkipBtn");
        this.ryw__levelNum = this.ryw__centerZone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this.ryw__moneyNum = this.ryw__centerZone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    ryw_MainViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this.ryw__moneyNum.value = String(User_1.default.ryw_getMoney());
        this.ryw__levelNum.value = String(User_1.default.ryw_getLeveNum());
    };
    ryw_MainViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__startBtn.on(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        this.ryw__skipBtn.on(Laya.Event.CLICK, this, this.ryw_onSkipBtn);
        EventMgr_1.default.ryw_instance.ryw_regEvemt(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
    };
    ryw_MainViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__startBtn.off(Laya.Event.CLICK, this, this.ryw_onStartBtn);
        this.ryw__skipBtn.off(Laya.Event.CLICK, this, this.ryw_onSkipBtn);
        EventMgr_1.default.ryw_instance.ryw_removeEvent(EventDef_1.ryw_EventDef.ryw_Game_OnUserMoneyChange, this, this.ryw_onUserMoneyChange);
    };
    ryw_MainViewTemplate.prototype.ryw_onSkipBtn = function () {
        // alert()
        sessionStorage.setItem("SkipLvl",1);
        ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_GameFailView, null, function () {
            ViewMgr_1.default.ryw_instance.ryw_closeView(ViewMgr_1.ryw_ViewDef.ryw_MainView); //关闭面板
        });
    };
    ryw_MainViewTemplate.prototype.ryw_onStartBtn = function () {
        this.ryw__skipBtn.visible =true;
    };
    ryw_MainViewTemplate.prototype.ryw_onUserMoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this.ryw__moneyNum.value = String(curr);
    };
    return ryw_MainViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_MainViewTemplate;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../KRQ/ViewCom/KRQ_Main":23,"../../../Mgr/ViewMgr":30,"../../../User/User":55,"../../../Utilit":56,"../TemplateViewBase":84}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var KRQ_History_1 = require("../../../KRQ/Com/KRQ_History/KRQ_History");
var ryw_MiniGameViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_MiniGameViewTemplate, _super);
    function ryw_MiniGameViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__krqhistory = null;
        return _this;
    }
    ryw_MiniGameViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__krqhistory = this.ryw_View.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        this.ryw__krqhistory.ryw_OnBackBtnClick = function () {
            self.ryw_closeView();
        };
    };
    ryw_MiniGameViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ryw_MiniGameViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
    };
    ryw_MiniGameViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
    };
    return ryw_MiniGameViewTemplate;
}(ViewBase_1.default));
exports.default = ryw_MiniGameViewTemplate;
},{"../../../KRQ/Com/KRQ_History/KRQ_History":12,"../../ViewBase":87}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../../OPPOAPI");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var ryw_OPPONativeAdViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_OPPONativeAdViewTemplate, _super);
    function ryw_OPPONativeAdViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__nativeAd = null;
        _this.ryw__curAdItem = null;
        return _this;
    }
    ryw_OPPONativeAdViewTemplate.prototype.onAwake = function () {
        this.ryw__centerZone = this.owner.getChildByName("CenterZone");
        this.ryw__display = this.ryw__centerZone.getChildByName("Display");
        this.ryw__okBtn = this.ryw__centerZone.getChildByName("OkBtn");
        this.ryw__closeBtn = this.ryw__centerZone.getChildByName("CloseBtn");
        this.ryw__bg = this.owner.getChildByName("BG");
    };
    ryw_OPPONativeAdViewTemplate.prototype.onEnable = function () {
        var _this = this;
        _super.prototype.onEnable.call(this);
        this.ryw_loadAd();
        this.ryw__bg.height = Laya.stage.height;
        this.ryw__closeBtn.visible = false;
        Laya.timer.once(AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_oppocfg.ryw_btnShowTimer, this, function () {
            _this.ryw__closeBtn.visible = true;
        });
    };
    ryw_OPPONativeAdViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__okBtn.on(Laya.Event.CLICK, this, this.ryw_onOkBtn);
        this.ryw__closeBtn.on(Laya.Event.CLICK, this, this.ryw_onCloseBtn);
        this.ryw__display.on(Laya.Event.CLICK, this, this.ryw_onDisplayClick);
    };
    ryw_OPPONativeAdViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__okBtn.off(Laya.Event.CLICK, this, this.ryw_onOkBtn);
        this.ryw__closeBtn.off(Laya.Event.CLICK, this, this.ryw_onCloseBtn);
        this.ryw__display.off(Laya.Event.CLICK, this, this.ryw_onDisplayClick);
    };
    ryw_OPPONativeAdViewTemplate.prototype.ryw_loadAd = function () {
        var self = this;
        var ipBlocked = WudianMgr_1.default.ryw_GetIpBlocked();
        if (!ipBlocked) {
            self.ryw_closeView();
            return;
        }
        if (Laya.Browser.onQGMiniGame) {
            if (this.ryw__nativeAd) {
                this.ryw__nativeAd.destroy();
                this.ryw__nativeAd = null;
            }
            this.ryw__curAdItem = null;
            this.ryw__nativeAd = qg.createNativeAd({
                posId: OPPOAPI_1.default.ryw_NativeAdId
            });
            this.ryw__nativeAd.load();
            this.ryw__nativeAd.onLoad(function (res) {
                console.log("原生广告加载成功：", res);
                var adlist = res.adList;
                for (var i = 0; i < adlist.length; ++i) {
                    var ad = adlist[i];
                    console.log("原生广告数据：", i);
                    for (var key in ad) {
                        console.log(key, ad[key]);
                    }
                }
                self.ryw__curAdItem = adlist[Math.floor(Math.random() * adlist.length)];
                if (null != self.ryw__curAdItem) {
                    for (var i = 0; i < self.ryw__curAdItem.imgUrlList.length; ++i) {
                        console.log("imgUrlList : ", i + " ", self.ryw__curAdItem.imgUrlList[i]);
                    }
                    var imgulr = self.ryw__curAdItem.imgUrlList[Math.floor(Math.random() * self.ryw__curAdItem.imgUrlList.length)];
                    self.ryw__display.loadImage(imgulr);
                    self.ryw__nativeAd.reportAdShow({
                        adId: self.ryw__curAdItem.adId
                    });
                    console.log("加载图片", imgulr);
                    console.log("点击上报！！！");
                }
                self.ryw__centerZone.visible = true;
            });
            this.ryw__nativeAd.onError(function (res) {
                console.log("原生广告加载失败：", res);
                for (var key in res) {
                    console.log(key, res[key]);
                }
                self.ryw_closeView();
            });
            this.ryw__centerZone.visible = false;
        }
    };
    ryw_OPPONativeAdViewTemplate.prototype.ryw_onCloseBtn = function () {
        this.ryw_closeView();
    };
    ryw_OPPONativeAdViewTemplate.prototype.ryw_onOkBtn = function () {
        if (Math.random() * 100 <= AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_oppocfg.ryw_yuansheng) {
            console.log("进入变态广告");
            this.ryw_onDisplayClick();
        }
        this.ryw_closeView();
    };
    ryw_OPPONativeAdViewTemplate.prototype.ryw_onDisplayClick = function () {
        if (null != this.ryw__nativeAd && null != this.ryw__curAdItem) {
            console.log("点击上报！！！");
            this.ryw__nativeAd.reportAdClick({
                adId: this.ryw__curAdItem.adId
            });
        }
    };
    ryw_OPPONativeAdViewTemplate.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (Laya.Browser.onQGMiniGame) {
            if (this.ryw__nativeAd) {
                this.ryw__nativeAd.destroy();
            }
            this.ryw__nativeAd = null;
            this.ryw__curAdItem = null;
        }
    };
    return ryw_OPPONativeAdViewTemplate;
}(ViewBase_1.default));
exports.default = ryw_OPPONativeAdViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":32,"../../../OPPOAPI":48,"../../ViewBase":87}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var ryw_RewardViewTemplate = /** @class */ (function (_super) {
    __extends(ryw_RewardViewTemplate, _super);
    function ryw_RewardViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__centerZone = null;
        _this.ryw__rewardBtn = null;
        _this.ryw__skipBtn = null;
        return _this;
    }
    ryw_RewardViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.ryw__centerZone = this.ryw_View.getChildByName("CenterZone");
        this.ryw__rewardBtn = this.ryw__centerZone.getChildByName("RewradBtn");
        this.ryw__skipBtn = this.ryw__centerZone.getChildByName("SkipBtn");
    };
    ryw_RewardViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ryw_RewardViewTemplate.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw__rewardBtn.on(Laya.Event.CLICK, this, this.ryw_onRewardBtn);
        this.ryw__skipBtn.on(Laya.Event.CLICK, this, this.ryw_onSkipBtn);
    };
    ryw_RewardViewTemplate.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw__rewardBtn.off(Laya.Event.CLICK, this, this.ryw_onRewardBtn);
        this.ryw__skipBtn.off(Laya.Event.CLICK, this, this.ryw_onSkipBtn);
    };
    ryw_RewardViewTemplate.prototype.ryw_onRewardBtn = function () {
    };
    ryw_RewardViewTemplate.prototype.ryw_onSkipBtn = function () {
    };
    return ryw_RewardViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ryw_RewardViewTemplate;
},{"../TemplateViewBase":84}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ryw_TemplateViewBase = /** @class */ (function (_super) {
    __extends(ryw_TemplateViewBase, _super);
    function ryw_TemplateViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw__historyBtn = null;
        _this.ryw__topZone = null;
        return _this;
    }
    Object.defineProperty(ryw_TemplateViewBase.prototype, "ryw_HistoryBtn", {
        get: function () {
            if (null == this.ryw__historyBtn) {
                this.ryw__historyBtn = this.ryw_TopZone.getChildByName("HistoryBtn");
            }
            return this.ryw__historyBtn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ryw_TemplateViewBase.prototype, "ryw_TopZone", {
        get: function () {
            if (null == this.ryw__topZone) {
                this.ryw__topZone = this.ryw_View.getChildByName("TopZone");
            }
            return this.ryw__topZone;
        },
        enumerable: true,
        configurable: true
    });
    ryw_TemplateViewBase.prototype.onAwake = function () {
        this.ryw__topZone = this.ryw_View.getChildByName("TopZone");
        if (Utilit_1.default.ryw_isIphoneX()) {
            this.ryw__topZone.top = this.ryw__topZone.top + 75;
        }
        this.ryw__historyBtn = this.ryw__topZone.getChildByName("HistoryBtn");
        if (-1 == WudianMgr_1.default.ryw_IpBlockFlag()) {
            this.ryw__historyBtn.visible = false;
        }
        else {
            this.ryw__historyBtn.visible = this.isShowHistoryBtn;
        }
    };
    ryw_TemplateViewBase.prototype.ryw_addEvent = function () {
        _super.prototype.ryw_addEvent.call(this);
        this.ryw_HistoryBtn.on(Laya.Event.CLICK, this, this.ryw_onHistoryBtn);
        EventMgr_1.default.ryw_instance.ryw_regEvemt(EventDef_1.ryw_EventDef.ryw_App_OnUpdateIpBlockState, this, this.onUpdateIpBlockState);
    };
    ryw_TemplateViewBase.prototype.ryw_removeEvent = function () {
        _super.prototype.ryw_removeEvent.call(this);
        this.ryw_HistoryBtn.off(Laya.Event.CLICK, this, this.ryw_onHistoryBtn);
        EventMgr_1.default.ryw_instance.ryw_removeEvent(EventDef_1.ryw_EventDef.ryw_App_OnUpdateIpBlockState, this, this.onUpdateIpBlockState);
    };
    ryw_TemplateViewBase.prototype.ryw_onHistoryBtn = function () {
        var self = this;
        ViewMgr_1.default.ryw_instance.ryw_openView(ViewMgr_1.ryw_ViewDef.ryw_MiniGameView, null, function (v) {
            self.ryw_hide();
            v.ryw_onCloseEvent = function () {
                if (null != self.ryw_View && !self.ryw_View.destroyed) {
                    self.ryw_show();
                }
            };
        });
    };
    Object.defineProperty(ryw_TemplateViewBase.prototype, "isShowHistoryBtn", {
        get: function () {
            var launchScene = 0;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.ryw_getLaunchOptionsSync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().ryw_wudianSceneList;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            if (Laya.Browser.onQGMiniGame || !noEnterBySearch || !WudianMgr_1.default.ryw_GetIpBlocked()
                || 0 == AppSwitchConfig_1.default.ryw_getInstance().ryw_getAppSwitchData().fakeBtn) {
                return false;
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    ryw_TemplateViewBase.prototype.onUpdateIpBlockState = function (para) {
        this.ryw__historyBtn.visible = this.isShowHistoryBtn;
    };
    return ryw_TemplateViewBase;
}(ViewBase_1.default));
exports.default = ryw_TemplateViewBase;
},{"../../Config/AppSwitchConfig":5,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../Mgr/ViewMgr":30,"../../Mgr/WudianMgr":32,"../../QQMiniGameAPI":49,"../../Utilit":56,"../../WXAPI":88,"../ViewBase":87}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ryw_TipsView = /** @class */ (function (_super) {
    __extends(ryw_TipsView, _super);
    function ryw_TipsView() {
        return _super.call(this) || this;
    }
    ryw_TipsView.prototype.onAwake = function () {
        this.ryw__bg = this.owner.getChildByName("Bg");
        this.ryw__bg.x = Laya.stage.width / 2 - this.ryw__bg.width / 2;
        this.ryw__tipsText = this.ryw__bg.getChildByName("Text");
    };
    ryw_TipsView.prototype.ryw_openView = function (data) {
        _super.prototype.ryw_openView.call(this, data);
        this.ryw_setTipsMsg(data);
        Laya.timer.clearAll(this);
        var self = this;
        Laya.timer.once(3000, this, function () {
            self.ryw_closeView();
        });
    };
    ryw_TipsView.prototype.ryw_setTipsMsg = function (msg) {
        this.ryw__tipsText.text = msg;
    };
    return ryw_TipsView;
}(ViewBase_1.default));
exports.default = ryw_TipsView;
},{"../ViewBase":87}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_TwinkleSprite = /** @class */ (function (_super) {
    __extends(ryw_TwinkleSprite, _super);
    function ryw_TwinkleSprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this.ryw__aniForward = false;
        _this.ryw__fontSize = 25;
        _this.ryw__originSize = 1;
        return _this;
    }
    ryw_TwinkleSprite.prototype.onAwake = function () {
        this.ryw__displaySp = this.owner;
        this.ryw__disText = this.owner.getChildByName("TitelText");
        this.ryw__originSize = this.ryw__displaySp.scaleX;
        if (this.ryw__disText != null) {
            this.ryw__disText.text = "";
            this.ryw__fontSize = this.ryw__disText.fontSize;
        }
    };
    ryw_TwinkleSprite.prototype.onEnable = function () {
        this.ryw__displaySp.scale(this.ryw__originSize, this.ryw__originSize);
    };
    ryw_TwinkleSprite.prototype.onDisable = function () {
    };
    ryw_TwinkleSprite.prototype.onUpdate = function () {
        this.ryw_displayAni();
    };
    ryw_TwinkleSprite.prototype.ryw_displayAni = function () {
        if (!this.ryw__aniForward) {
            var scale = this.ryw__displaySp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this.ryw__originSize);
            this.ryw__displaySp.scale(scale, scale);
            if (this.ryw__displaySp.scaleX <= this.TwinkleMinSize * this.ryw__originSize) {
                this.ryw__aniForward = true;
            }
        }
        else {
            var scale = this.ryw__displaySp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this.ryw__originSize);
            this.ryw__displaySp.scale(scale, scale);
            if (this.ryw__displaySp.scaleX >= this.TwinkleMaxSize * this.ryw__originSize) {
                this.ryw__aniForward = false;
            }
        }
    };
    return ryw_TwinkleSprite;
}(Laya.Script));
exports.default = ryw_TwinkleSprite;
},{}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var IViewStateListener_1 = require("./IViewStateListener");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ryw_ViewBase = /** @class */ (function (_super) {
    __extends(ryw_ViewBase, _super);
    function ryw_ViewBase() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.ryw_onCloseEvent = null;
        _this.ryw_onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.ryw_ViewDef.ryw_None;
        _this._data = {};
        return _this;
    }
    Object.defineProperty(ryw_ViewBase.prototype, "ryw_View", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    ryw_ViewBase.prototype.onAwake = function () {
        this.ryw_View.autoDestroyAtClosed = true;
    };
    ryw_ViewBase.prototype.onEnable = function () {
        this.ryw_addEvent();
    };
    ryw_ViewBase.prototype.onDisable = function () {
        this.ryw_removeEvent();
    };
    ryw_ViewBase.prototype.onDestroy = function () {
        this.ryw_removeEvent();
    };
    ryw_ViewBase.prototype.ryw_openView = function (data) {
        this._data = data;
        this.ryw_show();
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_Game_OnViewOpen, { view: this._viewDef });
        if (this.ryw_onOpenEvent) {
            this.ryw_onOpenEvent();
        }
    };
    ryw_ViewBase.prototype.ryw_addEvent = function () {
    };
    ryw_ViewBase.prototype.ryw_removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    ryw_ViewBase.prototype.ryw_closeView = function () {
        ViewMgr_1.default.ryw_instance.ryw_closeView(this._viewDef);
    };
    ryw_ViewBase.prototype.ryw_hide = function () {
        var _this = this;
        this.ryw_View.visible = false;
        this.onHide();
        Utilit_1.default.ryw_forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewHide(_this);
                    }
                }
            }
        });
    };
    ryw_ViewBase.prototype.ryw_show = function () {
        var _this = this;
        this.ryw_View.visible = true;
        this.onShow();
        Utilit_1.default.ryw_forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewShow(_this);
                    }
                }
            }
        });
    };
    ryw_ViewBase.prototype.ryw_viewIsHide = function () {
        return this.ryw_View.visible;
    };
    ryw_ViewBase.prototype.onHide = function () { };
    ryw_ViewBase.prototype.onShow = function () { };
    ryw_ViewBase.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.ryw_instance.ryw_dispatch(EventDef_1.ryw_EventDef.ryw_Game_OnViewClose, { view: this._viewDef });
        if (this.ryw_onCloseEvent) {
            this.ryw_onCloseEvent();
        }
    };
    return ryw_ViewBase;
}(Laya.Script));
exports.default = ryw_ViewBase;
},{"../Event/EventDef":6,"../Event/EventMgr":7,"../Mgr/ViewMgr":30,"../Utilit":56,"./IViewStateListener":60}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ryw_WXAPI = /** @class */ (function () {
    function ryw_WXAPI() {
    }
    ryw_WXAPI.ryw_wxLogin = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    ryw_WXAPI.ryw_onRewardedVideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    ryw_WXAPI.ryw_onRewardedVideoAdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (ryw_WXAPI.ryw__onRewardedVideoAdFailed) {
            ryw_WXAPI.ryw__onRewardedVideoAdFailed();
        }
    };
    ryw_WXAPI.ryw_onRewardedVideoAdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (ryw_WXAPI.ryw__onRewardedVideoAdClose) {
                ryw_WXAPI.ryw__onRewardedVideoAdClose(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (ryw_WXAPI.ryw__onRewardedVideoAdClose) {
                ryw_WXAPI.ryw__onRewardedVideoAdClose(false);
            }
        }
    };
    ryw_WXAPI.ryw_regRewardedVideoAdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(ryw_WXAPI.ryw_onRewardedVideoAdLoad);
        rewardedVideoAd.onError(ryw_WXAPI.ryw_onRewardedVideoAdError);
        rewardedVideoAd.onClose(ryw_WXAPI.ryw_onRewardedVideoAdClose);
        ryw_WXAPI.ryw__isRegRewardedVideoAdEvent = true;
    };
    ryw_WXAPI.ryw_showRewardedVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            ryw_WXAPI.ryw__onRewardedVideoAdClose = onAdClose;
            ryw_WXAPI.ryw__onRewardedVideoAdFailed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: ryw_WXAPI.ryw_adUnitId,
            });
            if (!ryw_WXAPI.ryw__isRegRewardedVideoAdEvent) {
                ryw_WXAPI.ryw_regRewardedVideoAdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    ryw_WXAPI.ryw_navigateToMiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    ryw_WXAPI.ryw_share = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            ryw_WXAPI.ryw__onShow = function () {
                Laya.Browser.window["wx"].offShow(ryw_WXAPI.ryw__onShow);
                ryw_WXAPI.ryw__onShow = null;
                var c = Date.now() - _this.ryw__lastShareTime;
                if (complate) {
                    if (Date.now() - _this.ryw__lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(ryw_WXAPI.ryw__onShow);
            ryw_WXAPI.ryw__lastShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    ryw_WXAPI.ryw_showInterstitialAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: ryw_WXAPI.ryw_InsAdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    ryw_WXAPI.ryw_getLaunchOptionsSync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    ryw_WXAPI.ryw_SetShareMenu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    ryw_WXAPI.ryw_checkUpdate = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    ryw_WXAPI.ryw_adUnitId = "adunit-eef36f84c44bbdc1";
    ryw_WXAPI.ryw_bannerAdUnitId = "adunit-440e21cc02c0d282";
    ryw_WXAPI.ryw_InsAdUnitId = "adunit-440e21cc02c0d282";
    //-------------------------激励视频---------------------------------
    ryw_WXAPI.ryw__isRegRewardedVideoAdEvent = false;
    ryw_WXAPI.ryw__onRewardedVideoAdFailed = null;
    ryw_WXAPI.ryw__onRewardedVideoAdClose = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    ryw_WXAPI.ryw__onShow = null;
    ryw_WXAPI.ryw__lastShareTime = 0;
    return ryw_WXAPI;
}());
exports.default = ryw_WXAPI;
},{}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var GameMainUI = /** @class */ (function (_super) {
        __extends(GameMainUI, _super);
        function GameMainUI() {
            return _super.call(this) || this;
        }
        GameMainUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameMainUI.uiView);
        };
        GameMainUI.uiView = { "type": "Scene", "props": { "y": 0, "x": 0, "width": 1080, "top": 0, "right": 0, "pivotY": 0, "pivotX": 0, "left": 0, "height": 1920 }, "compId": 2, "child": [{ "type": "Script", "props": { "runtime": "Mgr/GameMgr.ts" }, "compId": 148 }], "loadList": [], "loadList3D": [] };
        return GameMainUI;
    }(Scene));
    ui.GameMainUI = GameMainUI;
    REG("ui.GameMainUI", GameMainUI);
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            //LoadingUI.uiView = { "type": "View", "props": { "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Clip", "props": { "width": 750, "top": 0, "skin": "UI/loading.png", "name": "Bg", "left": 0, "bottom": 0 }, "compId": 6, "child": [{ "type": "Clip", "props": { "right": 0, "name": "BottomZone", "left": 0, "height": 570, "bottom": 100 }, "compId": 23, "child": [{ "type": "Clip", "props": { "y": 326, "x": 376, "width": 615, "skin": "Loading/loadingxiatiao.png", "pivotY": 22, "pivotX": 308, "name": "processBarBg", "height": 44, "sizeGrid": "0,25,0,25" }, "compId": 8, "child": [{ "type": "Clip", "props": { "y": 22, "x": 10, "width": 594, "skin": "Loading/loadingshangtiao.png", "pivotY": 13, "name": "processBar", "left": 11, "height": 26, "bottom": 9, "sizeGrid": "0,12,0,12" }, "compId": 5 }, { "type": "Sprite", "props": { "y": -24, "x": 292, "width": 143, "texture": "Loading/ziyuanjiazaizhong.png", "pivotY": 12, "pivotX": 72, "height": 23 }, "compId": 10, "child": [{ "type": "Sprite", "props": { "y": 15, "x": 149, "width": 6, "texture": "Loading/jiazaidunhao.png", "height": 5 }, "compId": 11 }, { "type": "Sprite", "props": { "y": 15, "x": 159, "width": 6, "texture": "Loading/jiazaidunhao.png", "height": 5 }, "compId": 12 }, { "type": "Sprite", "props": { "y": 15, "x": 168, "width": 6, "texture": "Loading/jiazaidunhao.png", "height": 5 }, "compId": 13 }] }] }, { "type": "Clip", "props": { "y": 144, "x": 375, "width": 513, "pivotY": 50, "pivotX": 257, "name": "LogoAni", "height": 100 }, "compId": 14, "child": [{ "type": "Sprite", "props": { "y": 50, "x": 139, "width": 64, "texture": "Loading/ren.png", "pivotY": 32, "pivotX": 32, "height": 63 }, "compId": 15 }, { "type": "Sprite", "props": { "y": 50, "x": 209, "width": 70, "texture": "Loading/you.png", "pivotY": 33, "pivotX": 35, "height": 66 }, "compId": 16 }, { "type": "Sprite", "props": { "y": 51, "x": 286, "width": 77, "texture": "Loading/wan.png", "pivotY": 28, "pivotX": 39, "height": 56 }, "compId": 17 }, { "type": "Sprite", "props": { "y": 63, "x": 340, "width": 23, "texture": "Loading/R.png", "pivotY": 16, "pivotX": 12, "height": 32 }, "compId": 18 }, { "type": "Sprite", "props": { "y": 63, "x": 363, "width": 21, "texture": "Loading/Y.png", "pivotY": 16, "pivotX": 11, "height": 31 }, "compId": 19 }, { "type": "Sprite", "props": { "y": 62, "x": 392, "width": 33, "texture": "Loading/W.png", "pivotY": 15, "pivotX": 17, "height": 30 }, "compId": 20 }, { "type": "Script", "props": { "runtime": "View/LoadingView/LogoAni.ts" }, "compId": 21 }] }, { "type": "Sprite", "props": { "y": 493, "x": 375, "width": 558, "texture": "Loading/jiangkangyouxigonggao.png", "pivotY": 53, "pivotX": 279, "height": 105 }, "compId": 22 }] }, { "type": "Sprite", "props": { "y": 293, "x": 87, "texture": "UI/logo.png", "name": "bg" }, "compId": 24 }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["UI/loading.png", "Loading/loadingxiatiao.png", "Loading/loadingshangtiao.png", "Loading/ziyuanjiazaizhong.png", "Loading/jiazaidunhao.png", "Loading/ren.png", "Loading/you.png", "Loading/wan.png", "Loading/R.png", "Loading/Y.png", "Loading/W.png", "Loading/jiangkangyouxigonggao.png", "UI/logo.png"], "loadList3D": [] };
            LoadingUI.uiView = {};
            return LoadingUI;
        }(Laya.View));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[27])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
